<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="TTL__typed__import__export_8h" kind="file" language="C++">
    <compoundname>TTL_typed_import_export.h</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_void_tensor_t internal_tensor, const TTL_const_ext_void_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__void__tensor__t" kindref="compound">TTL_int_void_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__void__tensor__t" kindref="compound">TTL_const_ext_void_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="28" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="28" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1afd495d819991cadf1318f6e05d5be74d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_void_tensor_t internal_tensor, const TTL_ext_void_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__void__tensor__t" kindref="compound">TTL_int_void_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="43" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_void_tensor_t internal_tensor, const TTL_const_ext_void_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__void__tensor__t" kindref="compound">TTL_int_void_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__void__tensor__t" kindref="compound">TTL_const_ext_void_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="58" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1add9b84475feefc46c93a36b173d54b19" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_void_tensor_t internal_tensor, const TTL_ext_void_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__void__tensor__t" kindref="compound">TTL_int_void_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. Complete description of what not how here. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="70" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="70" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import_sub_tensor</definition>
        <argsstring>(const TTL_int_void_sub_tensor_t internal_sub_tensor, const TTL_const_ext_void_tensor_t const_external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import_sub_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__void__sub__tensor__t" kindref="compound">TTL_int_void_sub_tensor_t</ref></type>
          <declname>internal_sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__void__tensor__t" kindref="compound">TTL_const_ext_void_tensor_t</ref></type>
          <declname>const_external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Implementation of TTL_import_sub_tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const_external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref> for full API and parameter information </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="86" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="86" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_const_int_void_tensor_t internal_tensor, const TTL_ext_void_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__void__tensor__t" kindref="compound">TTL_const_int_void_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="115" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1ab1561e724aa23358aa06756bd4e0f1cd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_int_void_tensor_t internal_tensor, const TTL_ext_void_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__int__void__tensor__t" kindref="compound">TTL_int_void_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="130" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="130" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_const_int_void_tensor_t internal_tensor, const TTL_ext_void_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__void__tensor__t" kindref="compound">TTL_const_int_void_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="145" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a962e6de198996b6d95eb497c6d81da94" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_int_void_tensor_t internal_tensor, const TTL_ext_void_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__int__void__tensor__t" kindref="compound">TTL_int_void_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="158" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="158" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a096d689f1d440bf7cc4ee05e8ed5287c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_char_tensor_t internal_tensor, const TTL_const_ext_char_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__char__tensor__t" kindref="compound">TTL_const_ext_char_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="190" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="190" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a67ac4734f44c1b2fd58d651db02e9735" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_char_tensor_t internal_tensor, const TTL_ext_char_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="205" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="205" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a60dbef17212001653cf9d67adea7bcf4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_char_tensor_t internal_tensor, const TTL_const_ext_char_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__char__tensor__t" kindref="compound">TTL_const_ext_char_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="220" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1aab312c04b224e9a1a64ec138fb37537b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_char_tensor_t internal_tensor, const TTL_ext_char_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. Complete description of what not how here. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="232" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="232" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1aba09127e2e8069457a966eb296dc93f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import_sub_tensor</definition>
        <argsstring>(const TTL_int_char_sub_tensor_t internal_sub_tensor, const TTL_const_ext_char_tensor_t const_external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import_sub_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref></type>
          <declname>internal_sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__char__tensor__t" kindref="compound">TTL_const_ext_char_tensor_t</ref></type>
          <declname>const_external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Implementation of TTL_import_sub_tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const_external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref> for full API and parameter information </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="248" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="248" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a369a3fd107bea101239515ddcd8907ce" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_const_int_char_tensor_t internal_tensor, const TTL_ext_char_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__char__tensor__t" kindref="compound">TTL_const_int_char_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="277" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="277" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a6cc39aca1be7542f33ead08c61f5bbe1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_int_char_tensor_t internal_tensor, const TTL_ext_char_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="292" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="292" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1ae7683bae196db04659836237f2a024e7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_const_int_char_tensor_t internal_tensor, const TTL_ext_char_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__char__tensor__t" kindref="compound">TTL_const_int_char_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="307" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1aad64c07dba643d52b8050df85f75888d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_int_char_tensor_t internal_tensor, const TTL_ext_char_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="320" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="320" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a912b3b7e2955f3ffd7e0ffbd4252449c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_uchar_tensor_t internal_tensor, const TTL_const_ext_uchar_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__uchar__tensor__t" kindref="compound">TTL_const_ext_uchar_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="352" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="352" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a0cc243d2d572e9f57a7c7b9ceaa066f7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_uchar_tensor_t internal_tensor, const TTL_ext_uchar_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="367" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="367" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a13aa3c721c118791121a4e8b7eef3c15" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_uchar_tensor_t internal_tensor, const TTL_const_ext_uchar_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__uchar__tensor__t" kindref="compound">TTL_const_ext_uchar_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="382" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="382" bodyend="385"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1aaa031394d7c4a70a3cb7e986306ed87b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_uchar_tensor_t internal_tensor, const TTL_ext_uchar_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. Complete description of what not how here. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="394" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="394" bodyend="399"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1abbb3d460d2247ca85cc2b5b156efe1de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import_sub_tensor</definition>
        <argsstring>(const TTL_int_uchar_sub_tensor_t internal_sub_tensor, const TTL_const_ext_uchar_tensor_t const_external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import_sub_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref></type>
          <declname>internal_sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__uchar__tensor__t" kindref="compound">TTL_const_ext_uchar_tensor_t</ref></type>
          <declname>const_external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Implementation of TTL_import_sub_tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const_external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref> for full API and parameter information </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="410" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="410" bodyend="428"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a1f2d84bf4d6c2affb0870cb8d4db13d8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_const_int_uchar_tensor_t internal_tensor, const TTL_ext_uchar_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__uchar__tensor__t" kindref="compound">TTL_const_int_uchar_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="439" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="439" bodyend="443"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a496ef294e1105e2c9696d5a2246eef6d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_int_uchar_tensor_t internal_tensor, const TTL_ext_uchar_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="454" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="454" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a3815314ea8982c0c09db51b683447a0b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_const_int_uchar_tensor_t internal_tensor, const TTL_ext_uchar_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__uchar__tensor__t" kindref="compound">TTL_const_int_uchar_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="469" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="469" bodyend="472"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1aef65e383727ea836d6106dbd9d6cbf7e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_int_uchar_tensor_t internal_tensor, const TTL_ext_uchar_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="482" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="482" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1aa80728cc5a77e120a1a02a33dfdb9ec6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_int_tensor_t internal_tensor, const TTL_const_ext_int_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__int__tensor__t" kindref="compound">TTL_const_ext_int_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="514" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="514" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a27fde7bd35450e9290144e18f3936034" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_int_tensor_t internal_tensor, const TTL_ext_int_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="529" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="529" bodyend="534"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a762a0178ae0d2114bbdac11e85be8268" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_int_tensor_t internal_tensor, const TTL_const_ext_int_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__int__tensor__t" kindref="compound">TTL_const_ext_int_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="544" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="544" bodyend="547"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1aad1b29a946516af3d049d5e7b041257b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_int_tensor_t internal_tensor, const TTL_ext_int_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. Complete description of what not how here. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="556" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="556" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1ab1caf639685d54294a2cd9ddd7889cbe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import_sub_tensor</definition>
        <argsstring>(const TTL_int_int_sub_tensor_t internal_sub_tensor, const TTL_const_ext_int_tensor_t const_external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import_sub_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref></type>
          <declname>internal_sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__int__tensor__t" kindref="compound">TTL_const_ext_int_tensor_t</ref></type>
          <declname>const_external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Implementation of TTL_import_sub_tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const_external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref> for full API and parameter information </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="572" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="572" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a3cacbac1e1f562e8d023503168cd6a37" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_const_int_int_tensor_t internal_tensor, const TTL_ext_int_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__int__tensor__t" kindref="compound">TTL_const_int_int_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="601" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="601" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1aae447e14f6d0bcc66116a785b7b51e66" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_int_int_tensor_t internal_tensor, const TTL_ext_int_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="616" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="616" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a5fb21cc69026c61ffff5b3c411dbe4bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_const_int_int_tensor_t internal_tensor, const TTL_ext_int_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__int__tensor__t" kindref="compound">TTL_const_int_int_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="631" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="631" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a5ed6b6ea28af6559c2e04dedfb07bb74" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_int_int_tensor_t internal_tensor, const TTL_ext_int_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="644" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="644" bodyend="648"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a1714644d6ea6cdc7f9c1349f048c31fc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_uint_tensor_t internal_tensor, const TTL_const_ext_uint_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__uint__tensor__t" kindref="compound">TTL_const_ext_uint_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="676" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="676" bodyend="680"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a551289cefe7b0df90649fa44b9420ffb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_uint_tensor_t internal_tensor, const TTL_ext_uint_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="691" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="691" bodyend="696"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a3ea086965abe74cf5ff9fa968d54a0b8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_uint_tensor_t internal_tensor, const TTL_const_ext_uint_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__uint__tensor__t" kindref="compound">TTL_const_ext_uint_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="706" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="706" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a111b6c68077dde724fa827b61324c27b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_uint_tensor_t internal_tensor, const TTL_ext_uint_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. Complete description of what not how here. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="718" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="718" bodyend="723"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1aa8877f0bc67f81266856691f87151c80" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import_sub_tensor</definition>
        <argsstring>(const TTL_int_uint_sub_tensor_t internal_sub_tensor, const TTL_const_ext_uint_tensor_t const_external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import_sub_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref></type>
          <declname>internal_sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__uint__tensor__t" kindref="compound">TTL_const_ext_uint_tensor_t</ref></type>
          <declname>const_external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Implementation of TTL_import_sub_tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const_external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref> for full API and parameter information </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="734" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="734" bodyend="752"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a9ba1da61172353440724c13f00810dd1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_const_int_uint_tensor_t internal_tensor, const TTL_ext_uint_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__uint__tensor__t" kindref="compound">TTL_const_int_uint_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="763" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="763" bodyend="767"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1afa7d57f98cd2f8b01522e55cf27e4b2b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_int_uint_tensor_t internal_tensor, const TTL_ext_uint_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="778" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="778" bodyend="783"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1adb4231d09fd7f44dbfaa1d9aa309871f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_const_int_uint_tensor_t internal_tensor, const TTL_ext_uint_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__uint__tensor__t" kindref="compound">TTL_const_int_uint_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="793" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="793" bodyend="796"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1aa6beedec131f1485bdea74361709f921" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_int_uint_tensor_t internal_tensor, const TTL_ext_uint_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="806" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="806" bodyend="810"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a3d794cc24dae402dd4dbe5703684e782" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_short_tensor_t internal_tensor, const TTL_const_ext_short_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__short__tensor__t" kindref="compound">TTL_const_ext_short_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="838" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="838" bodyend="842"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a61eec9281c64d250052415a04ca29fbd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_short_tensor_t internal_tensor, const TTL_ext_short_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="853" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="853" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a23730e2db5a2309d739f0b272fd5f8f8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_short_tensor_t internal_tensor, const TTL_const_ext_short_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__short__tensor__t" kindref="compound">TTL_const_ext_short_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="868" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="868" bodyend="871"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a493c17d1dd4c20d59e98bccab0587990" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_short_tensor_t internal_tensor, const TTL_ext_short_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. Complete description of what not how here. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="880" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="880" bodyend="885"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a155e7f2468f49dd9d5a0170eabb51c0b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import_sub_tensor</definition>
        <argsstring>(const TTL_int_short_sub_tensor_t internal_sub_tensor, const TTL_const_ext_short_tensor_t const_external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import_sub_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref></type>
          <declname>internal_sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__short__tensor__t" kindref="compound">TTL_const_ext_short_tensor_t</ref></type>
          <declname>const_external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Implementation of TTL_import_sub_tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const_external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref> for full API and parameter information </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="896" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="896" bodyend="914"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1acb54b5b435de8f629161283e6b73009d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_const_int_short_tensor_t internal_tensor, const TTL_ext_short_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__short__tensor__t" kindref="compound">TTL_const_int_short_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="925" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="925" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a47efef158b9d754f34c80974ab30c4bb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_int_short_tensor_t internal_tensor, const TTL_ext_short_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="940" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="940" bodyend="945"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a98f90fddcd9734c4fb9c33e0000a1de6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_const_int_short_tensor_t internal_tensor, const TTL_ext_short_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__short__tensor__t" kindref="compound">TTL_const_int_short_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="955" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="955" bodyend="958"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a0268a38878e5b2f5b1e976d5a69772fe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_int_short_tensor_t internal_tensor, const TTL_ext_short_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="968" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="968" bodyend="972"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a4060fc1ea4cbff78976951adf3ed8504" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_ushort_tensor_t internal_tensor, const TTL_const_ext_ushort_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__ushort__tensor__t" kindref="compound">TTL_const_ext_ushort_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1000" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1000" bodyend="1004"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a2801752d2c3a4cdf0bd773aa44376880" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_ushort_tensor_t internal_tensor, const TTL_ext_ushort_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1015" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1015" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1aef46c3f76dc46211217dfd372a4c4bb9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_ushort_tensor_t internal_tensor, const TTL_const_ext_ushort_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__ushort__tensor__t" kindref="compound">TTL_const_ext_ushort_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1030" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1030" bodyend="1033"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a923da31085a80be2c785adcd205175cf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_ushort_tensor_t internal_tensor, const TTL_ext_ushort_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. Complete description of what not how here. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1042" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1042" bodyend="1047"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1aff82ad75993b721ef277bf629539178c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import_sub_tensor</definition>
        <argsstring>(const TTL_int_ushort_sub_tensor_t internal_sub_tensor, const TTL_const_ext_ushort_tensor_t const_external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import_sub_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref></type>
          <declname>internal_sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__ushort__tensor__t" kindref="compound">TTL_const_ext_ushort_tensor_t</ref></type>
          <declname>const_external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Implementation of TTL_import_sub_tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const_external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref> for full API and parameter information </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1058" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1058" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a00ed8b1ee26b2fa0e0912d4919e8e348" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_const_int_ushort_tensor_t internal_tensor, const TTL_ext_ushort_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__ushort__tensor__t" kindref="compound">TTL_const_int_ushort_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1087" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1087" bodyend="1091"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a8e185430a1c2108025e56cfe4d80a242" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_int_ushort_tensor_t internal_tensor, const TTL_ext_ushort_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1102" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1102" bodyend="1107"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1ac02b32dfeaf545988bcdb974ce19cf79" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_const_int_ushort_tensor_t internal_tensor, const TTL_ext_ushort_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__ushort__tensor__t" kindref="compound">TTL_const_int_ushort_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1117" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1117" bodyend="1120"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1aa75d143c3dc708939b03f509f0304785" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_int_ushort_tensor_t internal_tensor, const TTL_ext_ushort_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1130" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1130" bodyend="1134"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a001b5797dde0ec0ace2f65f1edb061f0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_long_tensor_t internal_tensor, const TTL_const_ext_long_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__long__tensor__t" kindref="compound">TTL_const_ext_long_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1162" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1162" bodyend="1166"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a961aac06f34e8c692c7f9c71a72824b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_long_tensor_t internal_tensor, const TTL_ext_long_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1177" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1177" bodyend="1182"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1abe1542c2262cc171ae171968dff02ec0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_long_tensor_t internal_tensor, const TTL_const_ext_long_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__long__tensor__t" kindref="compound">TTL_const_ext_long_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1192" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1192" bodyend="1195"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a21a62bd328a190d8c58fdae84a14562b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_long_tensor_t internal_tensor, const TTL_ext_long_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. Complete description of what not how here. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1204" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1204" bodyend="1209"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1ab906709e55660084bd37ae2fde39e6fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import_sub_tensor</definition>
        <argsstring>(const TTL_int_long_sub_tensor_t internal_sub_tensor, const TTL_const_ext_long_tensor_t const_external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import_sub_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref></type>
          <declname>internal_sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__long__tensor__t" kindref="compound">TTL_const_ext_long_tensor_t</ref></type>
          <declname>const_external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Implementation of TTL_import_sub_tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const_external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref> for full API and parameter information </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1220" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1220" bodyend="1238"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1aebcc7a23d12b6353bfc0b45c94be33af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_const_int_long_tensor_t internal_tensor, const TTL_ext_long_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__long__tensor__t" kindref="compound">TTL_const_int_long_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1249" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1249" bodyend="1253"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a1928e8bb5104f4a411c69d6e6f5e63f4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_int_long_tensor_t internal_tensor, const TTL_ext_long_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1264" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1264" bodyend="1269"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1af1b6a3d907f9a0089f0ad13300c1e8e1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_const_int_long_tensor_t internal_tensor, const TTL_ext_long_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__long__tensor__t" kindref="compound">TTL_const_int_long_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1279" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1279" bodyend="1282"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a513211444d5ccd3e2a6d2c5b31620b59" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_int_long_tensor_t internal_tensor, const TTL_ext_long_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1292" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1292" bodyend="1296"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a07c0c55355b52d4d134e4d9c803b90d1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_ulong_tensor_t internal_tensor, const TTL_const_ext_ulong_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__ulong__tensor__t" kindref="compound">TTL_const_ext_ulong_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1324" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1324" bodyend="1328"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1ad275216158919cbc164fad8e6affc972" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import</definition>
        <argsstring>(const TTL_int_ulong_tensor_t internal_tensor, const TTL_ext_ulong_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1339" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1339" bodyend="1344"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1ade8d1936103fdac1aa0989f9d1cd8b85" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_ulong_tensor_t internal_tensor, const TTL_const_ext_ulong_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__ulong__tensor__t" kindref="compound">TTL_const_ext_ulong_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1354" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1354" bodyend="1357"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a08b0d08f30995f68fa60de14a64ee711" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_import</definition>
        <argsstring>(const TTL_int_ulong_tensor_t internal_tensor, const TTL_ext_ulong_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_import</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Import the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. Complete description of what not how here. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1366" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1366" bodyend="1371"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a8b1d31aa8f67ec11fa8a36b8e2fbef8d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_import_sub_tensor</definition>
        <argsstring>(const TTL_int_ulong_sub_tensor_t internal_sub_tensor, const TTL_const_ext_ulong_tensor_t const_external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_import_sub_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref></type>
          <declname>internal_sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__const__ext__ulong__tensor__t" kindref="compound">TTL_const_ext_ulong_tensor_t</ref></type>
          <declname>const_external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Implementation of TTL_import_sub_tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>const_external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="see"><para><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref> for full API and parameter information </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1382" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1382" bodyend="1400"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a777be946be695cc0ffa1a4b5c9f7b7e8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_const_int_ulong_tensor_t internal_tensor, const TTL_ext_ulong_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__ulong__tensor__t" kindref="compound">TTL_const_int_ulong_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1411" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1411" bodyend="1415"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1ac8d681d98d0eaf97c7ebc458d3444c6c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_export</definition>
        <argsstring>(const TTL_int_ulong_tensor_t internal_tensor, const TTL_ext_ulong_tensor_t external_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_export</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> type to allow detection of import completion.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1426" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1426" bodyend="1431"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a1ad8aa6c9db982a5f9923729835c282c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_const_int_ulong_tensor_t internal_tensor, const TTL_ext_ulong_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__const__int__ulong__tensor__t" kindref="compound">TTL_const_int_ulong_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the const external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1441" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1441" bodyend="1444"/>
      </memberdef>
      <memberdef kind="function" id="TTL__typed__import__export_8h_1a092b276f0b1f9668a2d953c77bd5b691" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_blocking_export</definition>
        <argsstring>(const TTL_int_ulong_tensor_t internal_tensor, const TTL_ext_ulong_tensor_t external_tensor)</argsstring>
        <name>TTL_blocking_export</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref></type>
          <declname>internal_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref></type>
          <declname>external_tensor</declname>
        </param>
        <briefdescription>
<para>Export the external tensor to the internal tensor returning when complete. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>internal_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>external_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref> describing the external tensor.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Complete description of what not how here. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h" line="1454" column="22" bodyfile="v7F17Om_TTL/import_export/TTL_typed_import_export.h" bodystart="1454" bodyend="1458"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__void__tensor__t" kindref="compound">TTL_int_void_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__void__tensor__t" kindref="compound">TTL_const_ext_void_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="32"><highlight class="normal">}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="34"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="TTL__typed__import__export_8h_1afd495d819991cadf1318f6e05d5be74d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__void__tensor__t" kindref="compound">TTL_int_void_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor)),<sp/>event);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__void__tensor__t" kindref="compound">TTL_int_void_tensor_t</ref><sp/>internal_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__void__tensor__t" kindref="compound">TTL_const_ext_void_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="TTL__typed__import__export_8h_1add9b84475feefc46c93a36b173d54b19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__void__tensor__t" kindref="compound">TTL_int_void_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__void__tensor__t" kindref="compound">TTL_const_ext_void_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cons_external_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(cons_external_tensor));</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="77"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>TTL_import_sub_tensor</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_sub_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_external_tensor<sp/>A<sp/>TTL_const_ext_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_import<sp/>for<sp/>full<sp/>API<sp/>and<sp/>parameter<sp/>information</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__void__sub__tensor__t" kindref="compound">TTL_int_void_sub_tensor_t</ref><sp/>internal_sub_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__void__tensor__t" kindref="compound">TTL_const_ext_void_tensor_t</ref><sp/>const_external_tensor,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst_address;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src_address;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__shape__t" kindref="compound">TTL_shape_t</ref><sp/>import_shape<sp/>=<sp/><ref refid="TTL__import__export_8h_1a0e9518a56044d18a2f3f36b6d507abde" kindref="member">TTL_import_pre_fill</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;internal_sub_tensor),</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;const_external_tensor),</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dst_address,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;src_address);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref><sp/>import_int_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a6898f4353f1e4009885dc306cebff0e1" kindref="member">TTL_create_int_tensor</ref>(</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_address,<sp/>import_shape,<sp/>internal_sub_tensor.<ref refid="structTTL__int__void__sub__tensor__t_1a6982437fd1ed4c1c2761c53c1f25a35d" kindref="member">tensor</ref>.<ref refid="structTTL__int__void__tensor__t_1a064879efe63fa363268ab5b50e9f43f4" kindref="member">layout</ref>,<sp/>internal_sub_tensor.<ref refid="structTTL__int__void__sub__tensor__t_1a6982437fd1ed4c1c2761c53c1f25a35d" kindref="member">tensor</ref>.<ref refid="structTTL__int__void__tensor__t_1a672b87a7525f6641fd27d03b9a01f534" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref><sp/>import_ext_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_address,<sp/>import_shape,<sp/>const_external_tensor.<ref refid="structTTL__const__ext__void__tensor__t_1a5210fe38a89c2ad0b38a7004df25b34b" kindref="member">layout</ref>,<sp/><ref refid="tensors_2TTL__types_8h_1a74c02e5006557e50ccaf1fed19bdf5ec" kindref="member">TTL_create_offset</ref>(),<sp/>const_external_tensor.<ref refid="structTTL__const__ext__void__tensor__t_1a6b6f139086cf0d00f4c4f65c4da5d700" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(import_int_tensor,<sp/>import_ext_tensor,<sp/>event);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="106"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__void__tensor__t" kindref="compound">TTL_const_int_void_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="121"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130" refid="TTL__typed__import__export_8h_1ab1561e724aa23358aa06756bd4e0f1cd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__void__tensor__t" kindref="compound">TTL_int_void_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__void__tensor__t" kindref="compound">TTL_const_int_void_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="150"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158" refid="TTL__typed__import__export_8h_1a962e6de198996b6d95eb497c6d81da94" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__void__tensor__t" kindref="compound">TTL_int_void_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="TTL__typed__import__export_8h_1a096d689f1d440bf7cc4ee05e8ed5287c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__char__tensor__t" kindref="compound">TTL_const_ext_char_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="196"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="TTL__typed__import__export_8h_1a67ac4734f44c1b2fd58d651db02e9735" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor)),<sp/>event);</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="212"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="TTL__typed__import__export_8h_1a60dbef17212001653cf9d67adea7bcf4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref><sp/>internal_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__char__tensor__t" kindref="compound">TTL_const_ext_char_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="225"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="TTL__typed__import__export_8h_1aab312c04b224e9a1a64ec138fb37537b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__char__tensor__t" kindref="compound">TTL_const_ext_char_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cons_external_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(cons_external_tensor));</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="239"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>TTL_import_sub_tensor</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_sub_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_external_tensor<sp/>A<sp/>TTL_const_ext_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_import<sp/>for<sp/>full<sp/>API<sp/>and<sp/>parameter<sp/>information</highlight></codeline>
<codeline lineno="247"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="TTL__typed__import__export_8h_1aba09127e2e8069457a966eb296dc93f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref><sp/>internal_sub_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__char__tensor__t" kindref="compound">TTL_const_ext_char_tensor_t</ref><sp/>const_external_tensor,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst_address;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src_address;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__shape__t" kindref="compound">TTL_shape_t</ref><sp/>import_shape<sp/>=<sp/><ref refid="TTL__import__export_8h_1a0e9518a56044d18a2f3f36b6d507abde" kindref="member">TTL_import_pre_fill</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;internal_sub_tensor),</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;const_external_tensor),</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dst_address,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;src_address);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref><sp/>import_int_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a6898f4353f1e4009885dc306cebff0e1" kindref="member">TTL_create_int_tensor</ref>(</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_address,<sp/>import_shape,<sp/>internal_sub_tensor.<ref refid="structTTL__int__char__sub__tensor__t_1ac40da05a058ce5c747c09e8cac6126f4" kindref="member">tensor</ref>.<ref refid="structTTL__int__char__tensor__t_1a83e35371dfbd6809dc23a45431225383" kindref="member">layout</ref>,<sp/>internal_sub_tensor.<ref refid="structTTL__int__char__sub__tensor__t_1ac40da05a058ce5c747c09e8cac6126f4" kindref="member">tensor</ref>.<ref refid="structTTL__int__char__tensor__t_1a95e20c81edda9a302c94244b602ed1c3" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref><sp/>import_ext_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_address,<sp/>import_shape,<sp/>const_external_tensor.<ref refid="structTTL__const__ext__char__tensor__t_1a042499979f600dd42c09dd10ed9794d9" kindref="member">layout</ref>,<sp/><ref refid="tensors_2TTL__types_8h_1a74c02e5006557e50ccaf1fed19bdf5ec" kindref="member">TTL_create_offset</ref>(),<sp/>const_external_tensor.<ref refid="structTTL__const__ext__char__tensor__t_1ad6e825c57afe2498122e7f21891e02d1" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(import_int_tensor,<sp/>import_ext_tensor,<sp/>event);</highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="268"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="TTL__typed__import__export_8h_1a369a3fd107bea101239515ddcd8907ce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__char__tensor__t" kindref="compound">TTL_const_int_char_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="283"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="TTL__typed__import__export_8h_1a6cc39aca1be7542f33ead08c61f5bbe1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="297"><highlight class="normal">}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="299"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="TTL__typed__import__export_8h_1ae7683bae196db04659836237f2a024e7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__char__tensor__t" kindref="compound">TTL_const_int_char_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="310"><highlight class="normal">}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="312"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320" refid="TTL__typed__import__export_8h_1aad64c07dba643d52b8050df85f75888d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="332"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="333"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="343"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352" refid="TTL__typed__import__export_8h_1a912b3b7e2955f3ffd7e0ffbd4252449c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__uchar__tensor__t" kindref="compound">TTL_const_ext_uchar_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="358"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367" refid="TTL__typed__import__export_8h_1a0cc243d2d572e9f57a7c7b9ceaa066f7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor)),<sp/>event);</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="374"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382" refid="TTL__typed__import__export_8h_1a13aa3c721c118791121a4e8b7eef3c15" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref><sp/>internal_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__uchar__tensor__t" kindref="compound">TTL_const_ext_uchar_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="387"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394" refid="TTL__typed__import__export_8h_1aaa031394d7c4a70a3cb7e986306ed87b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__uchar__tensor__t" kindref="compound">TTL_const_ext_uchar_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cons_external_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(cons_external_tensor));</highlight></codeline>
<codeline lineno="399"><highlight class="normal">}</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="401"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>TTL_import_sub_tensor</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_sub_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_external_tensor<sp/>A<sp/>TTL_const_ext_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_import<sp/>for<sp/>full<sp/>API<sp/>and<sp/>parameter<sp/>information</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410" refid="TTL__typed__import__export_8h_1abbb3d460d2247ca85cc2b5b156efe1de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref><sp/>internal_sub_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__uchar__tensor__t" kindref="compound">TTL_const_ext_uchar_tensor_t</ref><sp/>const_external_tensor,</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst_address;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src_address;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__shape__t" kindref="compound">TTL_shape_t</ref><sp/>import_shape<sp/>=<sp/><ref refid="TTL__import__export_8h_1a0e9518a56044d18a2f3f36b6d507abde" kindref="member">TTL_import_pre_fill</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;internal_sub_tensor),</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;const_external_tensor),</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dst_address,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;src_address);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref><sp/>import_int_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a6898f4353f1e4009885dc306cebff0e1" kindref="member">TTL_create_int_tensor</ref>(</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_address,<sp/>import_shape,<sp/>internal_sub_tensor.<ref refid="structTTL__int__uchar__sub__tensor__t_1a5877c1955a452d871aeb663a28d53787" kindref="member">tensor</ref>.<ref refid="structTTL__int__uchar__tensor__t_1a5103a8339da091e682ab05d6a368e3c7" kindref="member">layout</ref>,<sp/>internal_sub_tensor.<ref refid="structTTL__int__uchar__sub__tensor__t_1a5877c1955a452d871aeb663a28d53787" kindref="member">tensor</ref>.<ref refid="structTTL__int__uchar__tensor__t_1ad3bd499d772e19a6844e29a50102a6d9" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref><sp/>import_ext_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_address,<sp/>import_shape,<sp/>const_external_tensor.<ref refid="structTTL__const__ext__uchar__tensor__t_1aae95447d9cab87c30bf4a813178f6992" kindref="member">layout</ref>,<sp/><ref refid="tensors_2TTL__types_8h_1a74c02e5006557e50ccaf1fed19bdf5ec" kindref="member">TTL_create_offset</ref>(),<sp/>const_external_tensor.<ref refid="structTTL__const__ext__uchar__tensor__t_1a4bff0b1f99aa7c926f6a28205bbf19ae" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(import_int_tensor,<sp/>import_ext_tensor,<sp/>event);</highlight></codeline>
<codeline lineno="428"><highlight class="normal">}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="430"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="TTL__typed__import__export_8h_1a1f2d84bf4d6c2affb0870cb8d4db13d8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__uchar__tensor__t" kindref="compound">TTL_const_int_uchar_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="443"><highlight class="normal">}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="445"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454" refid="TTL__typed__import__export_8h_1a496ef294e1105e2c9696d5a2246eef6d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="459"><highlight class="normal">}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="461"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469" refid="TTL__typed__import__export_8h_1a3815314ea8982c0c09db51b683447a0b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__uchar__tensor__t" kindref="compound">TTL_const_int_uchar_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="474"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482" refid="TTL__typed__import__export_8h_1aef65e383727ea836d6106dbd9d6cbf7e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="486"><highlight class="normal">}</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="505"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514" refid="TTL__typed__import__export_8h_1aa80728cc5a77e120a1a02a33dfdb9ec6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__int__tensor__t" kindref="compound">TTL_const_ext_int_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="520"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529" refid="TTL__typed__import__export_8h_1a27fde7bd35450e9290144e18f3936034" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor)),<sp/>event);</highlight></codeline>
<codeline lineno="534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="536"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544" refid="TTL__typed__import__export_8h_1a762a0178ae0d2114bbdac11e85be8268" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__int__tensor__t" kindref="compound">TTL_const_ext_int_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="549"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556" refid="TTL__typed__import__export_8h_1aad1b29a946516af3d049d5e7b041257b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__int__tensor__t" kindref="compound">TTL_const_ext_int_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cons_external_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(cons_external_tensor));</highlight></codeline>
<codeline lineno="561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="563"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>TTL_import_sub_tensor</highlight></codeline>
<codeline lineno="565"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_sub_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_external_tensor<sp/>A<sp/>TTL_const_ext_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="568"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="569"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="570"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_import<sp/>for<sp/>full<sp/>API<sp/>and<sp/>parameter<sp/>information</highlight></codeline>
<codeline lineno="571"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572" refid="TTL__typed__import__export_8h_1ab1caf639685d54294a2cd9ddd7889cbe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref><sp/>internal_sub_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__int__tensor__t" kindref="compound">TTL_const_ext_int_tensor_t</ref><sp/>const_external_tensor,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst_address;</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src_address;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__shape__t" kindref="compound">TTL_shape_t</ref><sp/>import_shape<sp/>=<sp/><ref refid="TTL__import__export_8h_1a0e9518a56044d18a2f3f36b6d507abde" kindref="member">TTL_import_pre_fill</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;internal_sub_tensor),</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;const_external_tensor),</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dst_address,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;src_address);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref><sp/>import_int_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a6898f4353f1e4009885dc306cebff0e1" kindref="member">TTL_create_int_tensor</ref>(</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_address,<sp/>import_shape,<sp/>internal_sub_tensor.<ref refid="structTTL__int__int__sub__tensor__t_1abc64a66102cbdcac18218d068f9ce273" kindref="member">tensor</ref>.<ref refid="structTTL__int__int__tensor__t_1a6d3b8410f829667531130c08f470dc8e" kindref="member">layout</ref>,<sp/>internal_sub_tensor.<ref refid="structTTL__int__int__sub__tensor__t_1abc64a66102cbdcac18218d068f9ce273" kindref="member">tensor</ref>.<ref refid="structTTL__int__int__tensor__t_1a95c711ccc243d676dab548a651f4f4cc" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref><sp/>import_ext_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_address,<sp/>import_shape,<sp/>const_external_tensor.<ref refid="structTTL__const__ext__int__tensor__t_1ad883b6605370849b678a6b1e7596b1d4" kindref="member">layout</ref>,<sp/><ref refid="tensors_2TTL__types_8h_1a74c02e5006557e50ccaf1fed19bdf5ec" kindref="member">TTL_create_offset</ref>(),<sp/>const_external_tensor.<ref refid="structTTL__const__ext__int__tensor__t_1a52f5ca6d7edf87bfd37247e1e5be0ba4" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(import_int_tensor,<sp/>import_ext_tensor,<sp/>event);</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="592"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601" refid="TTL__typed__import__export_8h_1a3cacbac1e1f562e8d023503168cd6a37" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__int__tensor__t" kindref="compound">TTL_const_int_int_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="607"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616" refid="TTL__typed__import__export_8h_1aae447e14f6d0bcc66116a785b7b51e66" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="623"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631" refid="TTL__typed__import__export_8h_1a5fb21cc69026c61ffff5b3c411dbe4bf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__int__tensor__t" kindref="compound">TTL_const_int_int_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="636"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="TTL__typed__import__export_8h_1a5ed6b6ea28af6559c2e04dedfb07bb74" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="667"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="673"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676" refid="TTL__typed__import__export_8h_1a1714644d6ea6cdc7f9c1349f048c31fc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__uint__tensor__t" kindref="compound">TTL_const_ext_uint_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="680"><highlight class="normal">}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="682"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="TTL__typed__import__export_8h_1a551289cefe7b0df90649fa44b9420ffb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor)),<sp/>event);</highlight></codeline>
<codeline lineno="696"><highlight class="normal">}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="698"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706" refid="TTL__typed__import__export_8h_1a3ea086965abe74cf5ff9fa968d54a0b8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref><sp/>internal_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__uint__tensor__t" kindref="compound">TTL_const_ext_uint_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="711"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="713"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="714"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="715"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="717"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718" refid="TTL__typed__import__export_8h_1a111b6c68077dde724fa827b61324c27b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__uint__tensor__t" kindref="compound">TTL_const_ext_uint_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cons_external_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(cons_external_tensor));</highlight></codeline>
<codeline lineno="723"><highlight class="normal">}</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="725"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>TTL_import_sub_tensor</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_sub_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_external_tensor<sp/>A<sp/>TTL_const_ext_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_import<sp/>for<sp/>full<sp/>API<sp/>and<sp/>parameter<sp/>information</highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="734" refid="TTL__typed__import__export_8h_1aa8877f0bc67f81266856691f87151c80" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref><sp/>internal_sub_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__uint__tensor__t" kindref="compound">TTL_const_ext_uint_tensor_t</ref><sp/>const_external_tensor,</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst_address;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src_address;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__shape__t" kindref="compound">TTL_shape_t</ref><sp/>import_shape<sp/>=<sp/><ref refid="TTL__import__export_8h_1a0e9518a56044d18a2f3f36b6d507abde" kindref="member">TTL_import_pre_fill</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;internal_sub_tensor),</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;const_external_tensor),</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dst_address,</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;src_address);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref><sp/>import_int_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a6898f4353f1e4009885dc306cebff0e1" kindref="member">TTL_create_int_tensor</ref>(</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_address,<sp/>import_shape,<sp/>internal_sub_tensor.<ref refid="structTTL__int__uint__sub__tensor__t_1a03768790d06607c59f887eaaa0a290d0" kindref="member">tensor</ref>.<ref refid="structTTL__int__uint__tensor__t_1aa69799c5c94d7b0e40a5e80bc52a70e7" kindref="member">layout</ref>,<sp/>internal_sub_tensor.<ref refid="structTTL__int__uint__sub__tensor__t_1a03768790d06607c59f887eaaa0a290d0" kindref="member">tensor</ref>.<ref refid="structTTL__int__uint__tensor__t_1a585a16322fd94f33d55d11bc77a84586" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref><sp/>import_ext_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_address,<sp/>import_shape,<sp/>const_external_tensor.<ref refid="structTTL__const__ext__uint__tensor__t_1a70f01bec94e930586076b743de4d3a18" kindref="member">layout</ref>,<sp/><ref refid="tensors_2TTL__types_8h_1a74c02e5006557e50ccaf1fed19bdf5ec" kindref="member">TTL_create_offset</ref>(),<sp/>const_external_tensor.<ref refid="structTTL__const__ext__uint__tensor__t_1ac3cf798e505127f88f375a20fd521ca4" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(import_int_tensor,<sp/>import_ext_tensor,<sp/>event);</highlight></codeline>
<codeline lineno="752"><highlight class="normal">}</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="754"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="761"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763" refid="TTL__typed__import__export_8h_1a9ba1da61172353440724c13f00810dd1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__uint__tensor__t" kindref="compound">TTL_const_int_uint_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="769"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="772"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778" refid="TTL__typed__import__export_8h_1afa7d57f98cd2f8b01522e55cf27e4b2b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="785"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793" refid="TTL__typed__import__export_8h_1adb4231d09fd7f44dbfaa1d9aa309871f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__uint__tensor__t" kindref="compound">TTL_const_int_uint_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="796"><highlight class="normal">}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="798"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="801"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="802"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806" refid="TTL__typed__import__export_8h_1aa6beedec131f1485bdea74361709f921" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="810"><highlight class="normal">}</highlight></codeline>
<codeline lineno="811"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="818"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="827"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="829"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="830"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="831"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="832"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="835"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="837"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838" refid="TTL__typed__import__export_8h_1a3d794cc24dae402dd4dbe5703684e782" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__short__tensor__t" kindref="compound">TTL_const_ext_short_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="842"><highlight class="normal">}</highlight></codeline>
<codeline lineno="843"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="844"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="845"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="847"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853" refid="TTL__typed__import__export_8h_1a61eec9281c64d250052415a04ca29fbd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor)),<sp/>event);</highlight></codeline>
<codeline lineno="858"><highlight class="normal">}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="860"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="867"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868" refid="TTL__typed__import__export_8h_1a23730e2db5a2309d739f0b272fd5f8f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref><sp/>internal_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__short__tensor__t" kindref="compound">TTL_const_ext_short_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="873"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="876"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="877"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="878"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880" refid="TTL__typed__import__export_8h_1a493c17d1dd4c20d59e98bccab0587990" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__short__tensor__t" kindref="compound">TTL_const_ext_short_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cons_external_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(cons_external_tensor));</highlight></codeline>
<codeline lineno="885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="887"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="888"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>TTL_import_sub_tensor</highlight></codeline>
<codeline lineno="889"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="890"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_sub_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="891"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_external_tensor<sp/>A<sp/>TTL_const_ext_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="893"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="894"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_import<sp/>for<sp/>full<sp/>API<sp/>and<sp/>parameter<sp/>information</highlight></codeline>
<codeline lineno="895"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="896" refid="TTL__typed__import__export_8h_1a155e7f2468f49dd9d5a0170eabb51c0b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref><sp/>internal_sub_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__short__tensor__t" kindref="compound">TTL_const_ext_short_tensor_t</ref><sp/>const_external_tensor,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst_address;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src_address;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__shape__t" kindref="compound">TTL_shape_t</ref><sp/>import_shape<sp/>=<sp/><ref refid="TTL__import__export_8h_1a0e9518a56044d18a2f3f36b6d507abde" kindref="member">TTL_import_pre_fill</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;internal_sub_tensor),</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;const_external_tensor),</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dst_address,</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;src_address);</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref><sp/>import_int_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a6898f4353f1e4009885dc306cebff0e1" kindref="member">TTL_create_int_tensor</ref>(</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_address,<sp/>import_shape,<sp/>internal_sub_tensor.<ref refid="structTTL__int__short__sub__tensor__t_1ab9bf46962bbfab0c27f3549bf3aedc56" kindref="member">tensor</ref>.<ref refid="structTTL__int__short__tensor__t_1a629ea49daef867ccb05a66e64676b235" kindref="member">layout</ref>,<sp/>internal_sub_tensor.<ref refid="structTTL__int__short__sub__tensor__t_1ab9bf46962bbfab0c27f3549bf3aedc56" kindref="member">tensor</ref>.<ref refid="structTTL__int__short__tensor__t_1a18757be10c97a64e99a6cef164475772" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref><sp/>import_ext_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_address,<sp/>import_shape,<sp/>const_external_tensor.<ref refid="structTTL__const__ext__short__tensor__t_1a052bb4df390494050c01c9134001a6a5" kindref="member">layout</ref>,<sp/><ref refid="tensors_2TTL__types_8h_1a74c02e5006557e50ccaf1fed19bdf5ec" kindref="member">TTL_create_offset</ref>(),<sp/>const_external_tensor.<ref refid="structTTL__const__ext__short__tensor__t_1a916f487cc6e49fa9b06d15de9ff55e70" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(import_int_tensor,<sp/>import_ext_tensor,<sp/>event);</highlight></codeline>
<codeline lineno="914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="916"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="917"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="918"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="920"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="921"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="922"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="923"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="924"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="925" refid="TTL__typed__import__export_8h_1acb54b5b435de8f629161283e6b73009d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__short__tensor__t" kindref="compound">TTL_const_int_short_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="931"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="932"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="934"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="939"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940" refid="TTL__typed__import__export_8h_1a47efef158b9d754f34c80974ab30c4bb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="945"><highlight class="normal">}</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="947"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="952"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955" refid="TTL__typed__import__export_8h_1a98f90fddcd9734c4fb9c33e0000a1de6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__short__tensor__t" kindref="compound">TTL_const_int_short_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="960"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="962"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="963"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="964"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="965"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="966"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="967"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968" refid="TTL__typed__import__export_8h_1a0268a38878e5b2f5b1e976d5a69772fe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="972"><highlight class="normal">}</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="974"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="975"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="976"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="977"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="978"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="979"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="980"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="981"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="982"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="983"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="984"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="985"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="986"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="987"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="988"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="989"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="991"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="992"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="993"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="994"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="995"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="996"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="997"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="998"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="999"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000" refid="TTL__typed__import__export_8h_1a4060fc1ea4cbff78976951adf3ed8504" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__ushort__tensor__t" kindref="compound">TTL_const_ext_ushort_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="1004"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1006"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1007"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1013"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1014"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015" refid="TTL__typed__import__export_8h_1a2801752d2c3a4cdf0bd773aa44376880" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor)),<sp/>event);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1022"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1023"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1024"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1025"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1026"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1027"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1028"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1029"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030" refid="TTL__typed__import__export_8h_1aef46c3f76dc46211217dfd372a4c4bb9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref><sp/>internal_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__ushort__tensor__t" kindref="compound">TTL_const_ext_ushort_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="1033"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1035"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1036"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1037"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1038"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1039"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1040"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1041"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042" refid="TTL__typed__import__export_8h_1a923da31085a80be2c785adcd205175cf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__ushort__tensor__t" kindref="compound">TTL_const_ext_ushort_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cons_external_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor);</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(cons_external_tensor));</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1049"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1050"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>TTL_import_sub_tensor</highlight></codeline>
<codeline lineno="1051"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1052"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_sub_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1053"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_external_tensor<sp/>A<sp/>TTL_const_ext_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="1055"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1056"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_import<sp/>for<sp/>full<sp/>API<sp/>and<sp/>parameter<sp/>information</highlight></codeline>
<codeline lineno="1057"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1058" refid="TTL__typed__import__export_8h_1aff82ad75993b721ef277bf629539178c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref><sp/>internal_sub_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__ushort__tensor__t" kindref="compound">TTL_const_ext_ushort_tensor_t</ref><sp/>const_external_tensor,</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst_address;</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src_address;</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__shape__t" kindref="compound">TTL_shape_t</ref><sp/>import_shape<sp/>=<sp/><ref refid="TTL__import__export_8h_1a0e9518a56044d18a2f3f36b6d507abde" kindref="member">TTL_import_pre_fill</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;internal_sub_tensor),</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;const_external_tensor),</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dst_address,</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;src_address);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref><sp/>import_int_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a6898f4353f1e4009885dc306cebff0e1" kindref="member">TTL_create_int_tensor</ref>(</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_address,<sp/>import_shape,<sp/>internal_sub_tensor.<ref refid="structTTL__int__ushort__sub__tensor__t_1af494e64a3c121a3501c97f47a456f534" kindref="member">tensor</ref>.<ref refid="structTTL__int__ushort__tensor__t_1a285cf20128a0b9381dc98a0cf37b836c" kindref="member">layout</ref>,<sp/>internal_sub_tensor.<ref refid="structTTL__int__ushort__sub__tensor__t_1af494e64a3c121a3501c97f47a456f534" kindref="member">tensor</ref>.<ref refid="structTTL__int__ushort__tensor__t_1aa1403de8f1f511b2e293d3d3ddedb8ea" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref><sp/>import_ext_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_address,<sp/>import_shape,<sp/>const_external_tensor.<ref refid="structTTL__const__ext__ushort__tensor__t_1a1a50c22cedae1bd80db7030f7a89196a" kindref="member">layout</ref>,<sp/><ref refid="tensors_2TTL__types_8h_1a74c02e5006557e50ccaf1fed19bdf5ec" kindref="member">TTL_create_offset</ref>(),<sp/>const_external_tensor.<ref refid="structTTL__const__ext__ushort__tensor__t_1acf4c9f54269bdd13e7be602614c0c4bd" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(import_int_tensor,<sp/>import_ext_tensor,<sp/>event);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1078"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1079"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1080"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1081"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1082"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="1084"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1085"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1086"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087" refid="TTL__typed__import__export_8h_1a00ed8b1ee26b2fa0e0912d4919e8e348" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__ushort__tensor__t" kindref="compound">TTL_const_int_ushort_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1093"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1094"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1095"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1096"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1097"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1098"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="1099"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1100"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102" refid="TTL__typed__import__export_8h_1a8e185430a1c2108025e56cfe4d80a242" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="1107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1109"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1110"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1111"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1112"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1113"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1114"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1115"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1116"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117" refid="TTL__typed__import__export_8h_1ac02b32dfeaf545988bcdb974ce19cf79" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__ushort__tensor__t" kindref="compound">TTL_const_int_ushort_tensor_t</ref><sp/>internal_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1122"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1123"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1124"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1125"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1126"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1128"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1129"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1130" refid="TTL__typed__import__export_8h_1aa75d143c3dc708939b03f509f0304785" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="1134"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1136"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="1137"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1138"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="1139"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1140"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="1141"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1142"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="1143"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1144"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="1145"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1146"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="1147"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="1148"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="1149"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="1150"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1151"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1153"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1154"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1155"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1156"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1157"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1158"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="1159"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1160"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1161"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162" refid="TTL__typed__import__export_8h_1a001b5797dde0ec0ace2f65f1edb061f0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__long__tensor__t" kindref="compound">TTL_const_ext_long_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1168"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1169"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1171"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1172"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1173"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="1174"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1175"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1176"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177" refid="TTL__typed__import__export_8h_1a961aac06f34e8c692c7f9c71a72824b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor)),<sp/>event);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1184"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1185"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1187"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1188"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1189"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1190"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1191"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192" refid="TTL__typed__import__export_8h_1abe1542c2262cc171ae171968dff02ec0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref><sp/>internal_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__long__tensor__t" kindref="compound">TTL_const_ext_long_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="1195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1197"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1198"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1199"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1200"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1201"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1202"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1203"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204" refid="TTL__typed__import__export_8h_1a21a62bd328a190d8c58fdae84a14562b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__long__tensor__t" kindref="compound">TTL_const_ext_long_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cons_external_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor);</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(cons_external_tensor));</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1211"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1212"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>TTL_import_sub_tensor</highlight></codeline>
<codeline lineno="1213"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1214"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_sub_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1215"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_external_tensor<sp/>A<sp/>TTL_const_ext_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1216"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="1217"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1218"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_import<sp/>for<sp/>full<sp/>API<sp/>and<sp/>parameter<sp/>information</highlight></codeline>
<codeline lineno="1219"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220" refid="TTL__typed__import__export_8h_1ab906709e55660084bd37ae2fde39e6fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref><sp/>internal_sub_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__long__tensor__t" kindref="compound">TTL_const_ext_long_tensor_t</ref><sp/>const_external_tensor,</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst_address;</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src_address;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__shape__t" kindref="compound">TTL_shape_t</ref><sp/>import_shape<sp/>=<sp/><ref refid="TTL__import__export_8h_1a0e9518a56044d18a2f3f36b6d507abde" kindref="member">TTL_import_pre_fill</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;internal_sub_tensor),</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;const_external_tensor),</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dst_address,</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;src_address);</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref><sp/>import_int_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a6898f4353f1e4009885dc306cebff0e1" kindref="member">TTL_create_int_tensor</ref>(</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_address,<sp/>import_shape,<sp/>internal_sub_tensor.<ref refid="structTTL__int__long__sub__tensor__t_1a3cf57e11cf419427af71866cee2e0988" kindref="member">tensor</ref>.<ref refid="structTTL__int__long__tensor__t_1a94dc8c1f175252e040599114aef54ebd" kindref="member">layout</ref>,<sp/>internal_sub_tensor.<ref refid="structTTL__int__long__sub__tensor__t_1a3cf57e11cf419427af71866cee2e0988" kindref="member">tensor</ref>.<ref refid="structTTL__int__long__tensor__t_1a58b0f4d5948b25d8387645b3bd8f1096" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref><sp/>import_ext_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_address,<sp/>import_shape,<sp/>const_external_tensor.<ref refid="structTTL__const__ext__long__tensor__t_1a9f6226626a8ffad39c66565ee837ce06" kindref="member">layout</ref>,<sp/><ref refid="tensors_2TTL__types_8h_1a74c02e5006557e50ccaf1fed19bdf5ec" kindref="member">TTL_create_offset</ref>(),<sp/>const_external_tensor.<ref refid="structTTL__const__ext__long__tensor__t_1ac04fca8a2c31fe872401977dca406c49" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(import_int_tensor,<sp/>import_ext_tensor,<sp/>event);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1240"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1241"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1242"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1243"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1244"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1245"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="1246"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1247"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1248"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249" refid="TTL__typed__import__export_8h_1aebcc7a23d12b6353bfc0b45c94be33af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__long__tensor__t" kindref="compound">TTL_const_int_long_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1255"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1257"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1258"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1262"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1263"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264" refid="TTL__typed__import__export_8h_1a1928e8bb5104f4a411c69d6e6f5e63f4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="1269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1271"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1272"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1273"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1274"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1275"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1276"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1277"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1278"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279" refid="TTL__typed__import__export_8h_1af1b6a3d907f9a0089f0ad13300c1e8e1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__long__tensor__t" kindref="compound">TTL_const_int_long_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="1282"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1284"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1285"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1286"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1287"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1288"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1289"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1290"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1291"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1292" refid="TTL__typed__import__export_8h_1a513211444d5ccd3e2a6d2c5b31620b59" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="1296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1298"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="1299"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1300"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="1301"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1302"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="1303"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1304"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="1305"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1306"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="1307"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1308"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="1309"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="1310"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="1311"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="1312"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1313"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1315"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1316"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1317"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1318"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1320"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="1321"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1322"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1323"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324" refid="TTL__typed__import__export_8h_1a07c0c55355b52d4d134e4d9c803b90d1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__ulong__tensor__t" kindref="compound">TTL_const_ext_ulong_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="1328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1330"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1331"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1332"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1333"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1334"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1335"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="1336"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1337"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1338"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339" refid="TTL__typed__import__export_8h_1ad275216158919cbc164fad8e6affc972" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a2b4efe45abbec1418972b980cc8c8c9b" kindref="member">TTL_import_base</ref>(</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor)),<sp/>event);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1346"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1347"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1348"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1349"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1350"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1351"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1352"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1353"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354" refid="TTL__typed__import__export_8h_1ade8d1936103fdac1aa0989f9d1cd8b85" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref><sp/>internal_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__ulong__tensor__t" kindref="compound">TTL_const_ext_ulong_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="1357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1359"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1360"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Import<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1361"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1362"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1363"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1364"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1365"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366" refid="TTL__typed__import__export_8h_1a08b0d08f30995f68fa60de14a64ee711" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a3aad054c3dd9f26e061a890a69cdf5aa" kindref="member">TTL_blocking_import</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__ulong__tensor__t" kindref="compound">TTL_const_ext_ulong_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cons_external_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;external_tensor);</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a964262b8639c48eeb40282f26d74062c" kindref="member">TTL_blocking_import_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(cons_external_tensor));</highlight></codeline>
<codeline lineno="1371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1373"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1374"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>TTL_import_sub_tensor</highlight></codeline>
<codeline lineno="1375"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1376"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_sub_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1377"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_external_tensor<sp/>A<sp/>TTL_const_ext_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1378"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="1379"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1380"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_import<sp/>for<sp/>full<sp/>API<sp/>and<sp/>parameter<sp/>information</highlight></codeline>
<codeline lineno="1381"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382" refid="TTL__typed__import__export_8h_1a8b1d31aa8f67ec11fa8a36b8e2fbef8d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref><sp/>internal_sub_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__ulong__tensor__t" kindref="compound">TTL_const_ext_ulong_tensor_t</ref><sp/>const_external_tensor,</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*dst_address;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src_address;</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__shape__t" kindref="compound">TTL_shape_t</ref><sp/>import_shape<sp/>=<sp/><ref refid="TTL__import__export_8h_1a0e9518a56044d18a2f3f36b6d507abde" kindref="member">TTL_import_pre_fill</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;internal_sub_tensor),</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;const_external_tensor),</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;dst_address,</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;src_address);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref><sp/>import_int_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a6898f4353f1e4009885dc306cebff0e1" kindref="member">TTL_create_int_tensor</ref>(</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_address,<sp/>import_shape,<sp/>internal_sub_tensor.<ref refid="structTTL__int__ulong__sub__tensor__t_1ad2731372f580163927a27aca9fa702b9" kindref="member">tensor</ref>.<ref refid="structTTL__int__ulong__tensor__t_1a33a8e7d599aff02335b77e2956691ac2" kindref="member">layout</ref>,<sp/>internal_sub_tensor.<ref refid="structTTL__int__ulong__sub__tensor__t_1ad2731372f580163927a27aca9fa702b9" kindref="member">tensor</ref>.<ref refid="structTTL__int__ulong__tensor__t_1ace5aaf707bd324a6d3f1f0a8f413eefa" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref><sp/>import_ext_tensor<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_address,<sp/>import_shape,<sp/>const_external_tensor.<ref refid="structTTL__const__ext__ulong__tensor__t_1a4f6401a53fbcaccee938276a52ae16c0" kindref="member">layout</ref>,<sp/><ref refid="tensors_2TTL__types_8h_1a74c02e5006557e50ccaf1fed19bdf5ec" kindref="member">TTL_create_offset</ref>(),<sp/>const_external_tensor.<ref refid="structTTL__const__ext__ulong__tensor__t_1a0d7daa0e6990379a224eb0c78094cc09" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a29df041dc2c716238a766a988b36a589" kindref="member">TTL_import</ref>(import_int_tensor,<sp/>import_ext_tensor,<sp/>event);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1402"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1403"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1404"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1405"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1406"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1407"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="1408"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1409"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1410"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411" refid="TTL__typed__import__export_8h_1a777be946be695cc0ffa1a4b5c9f7b7e8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__ulong__tensor__t" kindref="compound">TTL_const_int_ulong_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="1415"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1417"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1418"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1419"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1420"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1421"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1422"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>TTL_event_t<sp/>type<sp/>to<sp/>allow<sp/>detection<sp/>of<sp/>import<sp/>completion.</highlight></codeline>
<codeline lineno="1423"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1424"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1425"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426" refid="TTL__typed__import__export_8h_1ac8d681d98d0eaf97c7ebc458d3444c6c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/>external_tensor,</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__import__export_8h_1a5d7737bbf92e5ff98d3e8cfd3f2bda1c" kindref="member">TTL_export_base</ref>(</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor),<sp/>event);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1433"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1434"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1435"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1436"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1437"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>const<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1438"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1439"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1440"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441" refid="TTL__typed__import__export_8h_1a1ad8aa6c9db982a5f9923729835c282c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__ulong__tensor__t" kindref="compound">TTL_const_int_ulong_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;internal_tensor),<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="1444"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1446"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Export<sp/>the<sp/>external<sp/>tensor<sp/>to<sp/>the<sp/>internal<sp/>tensor<sp/>returning<sp/>when<sp/>complete</highlight></codeline>
<codeline lineno="1448"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1449"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="1450"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor<sp/>A<sp/>TTL_int_tensor_t<sp/>describing<sp/>the<sp/>external<sp/>tensor.</highlight></codeline>
<codeline lineno="1451"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1452"><highlight class="comment"><sp/>*<sp/>Complete<sp/>description<sp/>of<sp/>what<sp/>not<sp/>how<sp/>here.</highlight></codeline>
<codeline lineno="1453"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454" refid="TTL__typed__import__export_8h_1a092b276f0b1f9668a2d953c77bd5b691" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__typed__import__export_8h_1af682c5a6ed83c5811e88dfffbddcabbc" kindref="member">TTL_blocking_export</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/>external_tensor)<sp/>{</highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a7a80aace9fee264fc61af6884c3a0112" kindref="member">TTL_blocking_export_base</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;internal_tensor)),</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;external_tensor));</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="v7F17Om_TTL/import_export/TTL_typed_import_export.h"/>
  </compounddef>
</doxygen>
