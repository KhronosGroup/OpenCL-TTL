<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="TTL__double__scheme__template_8h" kind="file" language="C++">
    <compoundname>TTL_double_scheme_template.h</compoundname>
    <innerclass refid="structTTL__import__double__const__void__tensor__buffering__t" prot="public">TTL_import_double_const_void_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__export__double__const__void__tensor__buffering__t" prot="public">TTL_export_double_const_void_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__import__double__const__char__tensor__buffering__t" prot="public">TTL_import_double_const_char_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__export__double__const__char__tensor__buffering__t" prot="public">TTL_export_double_const_char_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__import__double__const__uchar__tensor__buffering__t" prot="public">TTL_import_double_const_uchar_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__export__double__const__uchar__tensor__buffering__t" prot="public">TTL_export_double_const_uchar_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__import__double__const__int__tensor__buffering__t" prot="public">TTL_import_double_const_int_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__export__double__const__int__tensor__buffering__t" prot="public">TTL_export_double_const_int_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__import__double__const__uint__tensor__buffering__t" prot="public">TTL_import_double_const_uint_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__export__double__const__uint__tensor__buffering__t" prot="public">TTL_export_double_const_uint_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__import__double__const__short__tensor__buffering__t" prot="public">TTL_import_double_const_short_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__export__double__const__short__tensor__buffering__t" prot="public">TTL_export_double_const_short_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__import__double__const__ushort__tensor__buffering__t" prot="public">TTL_import_double_const_ushort_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__export__double__const__ushort__tensor__buffering__t" prot="public">TTL_export_double_const_ushort_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__import__double__const__long__tensor__buffering__t" prot="public">TTL_import_double_const_long_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__export__double__const__long__tensor__buffering__t" prot="public">TTL_export_double_const_long_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__import__double__const__ulong__tensor__buffering__t" prot="public">TTL_import_double_const_ulong_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__export__double__const__ulong__tensor__buffering__t" prot="public">TTL_export_double_const_ulong_tensor_buffering_t</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__import__double__const__void__tensor__buffering__t" kindref="compound">TTL_import_double_const_void_tensor_buffering_t</ref></type>
        <definition>static TTL_import_double_const_void_tensor_buffering_t TTL_start_import_double_buffering</definition>
        <argsstring>(__local void *int_base1, __local void *int_base2, TTL_const_ext_void_tensor_t ext_tensor, TTL_event_t *event, TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_import_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> void *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> void *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__const__ext__void__tensor__t" kindref="compound">TTL_const_ext_void_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_import_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward (external to internal) transfer completion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_import_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="111" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="111" bodyend="127" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="105" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__void__sub__tensor__t" kindref="compound">TTL_int_void_sub_tensor_t</ref></type>
        <definition>static TTL_int_void_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_import_double_const_void_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__import__double__const__void__tensor__buffering__t" kindref="compound">TTL_import_double_const_void_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="107" column="43" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="107" declcolumn="43"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__export__double__const__void__tensor__buffering__t" kindref="compound">TTL_export_double_const_void_tensor_buffering_t</ref></type>
        <definition>static TTL_export_double_const_void_tensor_buffering_t TTL_start_export_double_buffering</definition>
        <argsstring>(__local void *int_base1, __local void *int_base2, TTL_ext_void_tensor_t ext_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_start_export_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> void *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> void *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Create a TTL_export_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward and outward transfer completion</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Solid description of single buffering here.</para>
<para><simplesect kind="return"><para>The TTL_export_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="243" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="243" bodyend="257" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="236" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1ab38550c9c854fef4b098110fa4d0b0dd" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__void__sub__tensor__t" kindref="compound">TTL_int_void_sub_tensor_t</ref></type>
        <definition>static TTL_int_void_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_export_double_const_void_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__export__double__const__void__tensor__buffering__t" kindref="compound">TTL_export_double_const_void_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="239" column="43" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="239" declcolumn="43"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1ae0a5fdec48e2fca545d74d354ca37c89" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__import__double__const__char__tensor__buffering__t" kindref="compound">TTL_import_double_const_char_tensor_buffering_t</ref></type>
        <definition>static TTL_import_double_const_char_tensor_buffering_t TTL_start_import_double_buffering</definition>
        <argsstring>(__local char *int_base1, __local char *int_base2, TTL_const_ext_char_tensor_t ext_tensor, TTL_event_t *event, TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_import_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> char *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> char *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__const__ext__char__tensor__t" kindref="compound">TTL_const_ext_char_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_import_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward (external to internal) transfer completion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_import_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="372" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="372" bodyend="388" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="366" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a748725523d20f2f1a0ead1681c2f959b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref></type>
        <definition>static TTL_int_char_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_import_double_const_char_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__import__double__const__char__tensor__buffering__t" kindref="compound">TTL_import_double_const_char_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="368" column="43" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="368" declcolumn="43"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a3a9c5d79da897294840a6813311794b5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__export__double__const__char__tensor__buffering__t" kindref="compound">TTL_export_double_const_char_tensor_buffering_t</ref></type>
        <definition>static TTL_export_double_const_char_tensor_buffering_t TTL_start_export_double_buffering</definition>
        <argsstring>(__local char *int_base1, __local char *int_base2, TTL_ext_char_tensor_t ext_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_start_export_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> char *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> char *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Create a TTL_export_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward and outward transfer completion</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Solid description of single buffering here.</para>
<para><simplesect kind="return"><para>The TTL_export_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="504" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="504" bodyend="518" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="497" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a5a9c3af53575d93369013496b3ef4f35" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref></type>
        <definition>static TTL_int_char_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_export_double_const_char_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__export__double__const__char__tensor__buffering__t" kindref="compound">TTL_export_double_const_char_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="500" column="43" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="500" declcolumn="43"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a07ac1e787198b1a5d1dbb48a523d568a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__import__double__const__uchar__tensor__buffering__t" kindref="compound">TTL_import_double_const_uchar_tensor_buffering_t</ref></type>
        <definition>static TTL_import_double_const_uchar_tensor_buffering_t TTL_start_import_double_buffering</definition>
        <argsstring>(__local uchar *int_base1, __local uchar *int_base2, TTL_const_ext_uchar_tensor_t ext_tensor, TTL_event_t *event, TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_import_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__const__ext__uchar__tensor__t" kindref="compound">TTL_const_ext_uchar_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_import_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward (external to internal) transfer completion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_import_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="633" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="633" bodyend="649" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="627" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a796dde9f50a5b527a8cb6810d0ff99de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref></type>
        <definition>static TTL_int_uchar_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_import_double_const_uchar_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__import__double__const__uchar__tensor__buffering__t" kindref="compound">TTL_import_double_const_uchar_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="629" column="44" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="629" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a4b45ef6509c20396ee42f254d1bf5fb1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__export__double__const__uchar__tensor__buffering__t" kindref="compound">TTL_export_double_const_uchar_tensor_buffering_t</ref></type>
        <definition>static TTL_export_double_const_uchar_tensor_buffering_t TTL_start_export_double_buffering</definition>
        <argsstring>(__local uchar *int_base1, __local uchar *int_base2, TTL_ext_uchar_tensor_t ext_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_start_export_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Create a TTL_export_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward and outward transfer completion</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Solid description of single buffering here.</para>
<para><simplesect kind="return"><para>The TTL_export_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="765" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="765" bodyend="779" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="758" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a17ad452992e36c00eeaf9f682192257c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref></type>
        <definition>static TTL_int_uchar_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_export_double_const_uchar_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__export__double__const__uchar__tensor__buffering__t" kindref="compound">TTL_export_double_const_uchar_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="761" column="44" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="761" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a999e16e668f106efca44b70a121e9e88" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__import__double__const__int__tensor__buffering__t" kindref="compound">TTL_import_double_const_int_tensor_buffering_t</ref></type>
        <definition>static TTL_import_double_const_int_tensor_buffering_t TTL_start_import_double_buffering</definition>
        <argsstring>(__local int *int_base1, __local int *int_base2, TTL_const_ext_int_tensor_t ext_tensor, TTL_event_t *event, TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_import_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> int *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> int *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__const__ext__int__tensor__t" kindref="compound">TTL_const_ext_int_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_import_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward (external to internal) transfer completion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_import_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="894" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="894" bodyend="910" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="888" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a8b9a1d48f3ff3474679602373cdd93a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref></type>
        <definition>static TTL_int_int_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_import_double_const_int_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__import__double__const__int__tensor__buffering__t" kindref="compound">TTL_import_double_const_int_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="890" column="42" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="890" declcolumn="42"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a05b9527be6edabb731cd64162f2d3b6c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__export__double__const__int__tensor__buffering__t" kindref="compound">TTL_export_double_const_int_tensor_buffering_t</ref></type>
        <definition>static TTL_export_double_const_int_tensor_buffering_t TTL_start_export_double_buffering</definition>
        <argsstring>(__local int *int_base1, __local int *int_base2, TTL_ext_int_tensor_t ext_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_start_export_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> int *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> int *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Create a TTL_export_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward and outward transfer completion</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Solid description of single buffering here.</para>
<para><simplesect kind="return"><para>The TTL_export_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1026" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="1026" bodyend="1040" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1019" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a9cb97b1a8a41ba99350017d1a4c6c017" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref></type>
        <definition>static TTL_int_int_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_export_double_const_int_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__export__double__const__int__tensor__buffering__t" kindref="compound">TTL_export_double_const_int_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1022" column="42" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1022" declcolumn="42"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1af0e56192cf366ed0433e1b9e42bc68f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__import__double__const__uint__tensor__buffering__t" kindref="compound">TTL_import_double_const_uint_tensor_buffering_t</ref></type>
        <definition>static TTL_import_double_const_uint_tensor_buffering_t TTL_start_import_double_buffering</definition>
        <argsstring>(__local uint *int_base1, __local uint *int_base2, TTL_const_ext_uint_tensor_t ext_tensor, TTL_event_t *event, TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_import_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref> *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref> *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__const__ext__uint__tensor__t" kindref="compound">TTL_const_ext_uint_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_import_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward (external to internal) transfer completion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_import_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1155" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="1155" bodyend="1171" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1149" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1af0e8d5c4e6063c86129cd044ec0ae961" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref></type>
        <definition>static TTL_int_uint_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_import_double_const_uint_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__import__double__const__uint__tensor__buffering__t" kindref="compound">TTL_import_double_const_uint_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1151" column="43" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1151" declcolumn="43"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1acf521689205a68633b6d731a22bf4243" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__export__double__const__uint__tensor__buffering__t" kindref="compound">TTL_export_double_const_uint_tensor_buffering_t</ref></type>
        <definition>static TTL_export_double_const_uint_tensor_buffering_t TTL_start_export_double_buffering</definition>
        <argsstring>(__local uint *int_base1, __local uint *int_base2, TTL_ext_uint_tensor_t ext_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_start_export_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref> *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref> *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Create a TTL_export_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward and outward transfer completion</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Solid description of single buffering here.</para>
<para><simplesect kind="return"><para>The TTL_export_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1287" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="1287" bodyend="1301" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1280" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1ab9152aad1a9c166de949aa711c64c907" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref></type>
        <definition>static TTL_int_uint_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_export_double_const_uint_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__export__double__const__uint__tensor__buffering__t" kindref="compound">TTL_export_double_const_uint_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1283" column="43" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1283" declcolumn="43"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1ac15c8e8c250f7aaa2866d7ec813a8e18" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__import__double__const__short__tensor__buffering__t" kindref="compound">TTL_import_double_const_short_tensor_buffering_t</ref></type>
        <definition>static TTL_import_double_const_short_tensor_buffering_t TTL_start_import_double_buffering</definition>
        <argsstring>(__local short *int_base1, __local short *int_base2, TTL_const_ext_short_tensor_t ext_tensor, TTL_event_t *event, TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_import_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> short *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> short *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__const__ext__short__tensor__t" kindref="compound">TTL_const_ext_short_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_import_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward (external to internal) transfer completion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_import_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1416" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="1416" bodyend="1432" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1410" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a5863965943acf9e0b6e922cad717d077" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref></type>
        <definition>static TTL_int_short_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_import_double_const_short_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__import__double__const__short__tensor__buffering__t" kindref="compound">TTL_import_double_const_short_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1412" column="44" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1412" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a62684298b5d0e0aaa1bb3e96261a39d6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__export__double__const__short__tensor__buffering__t" kindref="compound">TTL_export_double_const_short_tensor_buffering_t</ref></type>
        <definition>static TTL_export_double_const_short_tensor_buffering_t TTL_start_export_double_buffering</definition>
        <argsstring>(__local short *int_base1, __local short *int_base2, TTL_ext_short_tensor_t ext_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_start_export_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> short *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> short *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Create a TTL_export_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward and outward transfer completion</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Solid description of single buffering here.</para>
<para><simplesect kind="return"><para>The TTL_export_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1548" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="1548" bodyend="1562" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1541" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1aa51e6bd76a8dba3983f73f11ce034b03" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref></type>
        <definition>static TTL_int_short_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_export_double_const_short_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__export__double__const__short__tensor__buffering__t" kindref="compound">TTL_export_double_const_short_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1544" column="44" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1544" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a7f344591e59e6fadd08f7e1d4d372cb3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__import__double__const__ushort__tensor__buffering__t" kindref="compound">TTL_import_double_const_ushort_tensor_buffering_t</ref></type>
        <definition>static TTL_import_double_const_ushort_tensor_buffering_t TTL_start_import_double_buffering</definition>
        <argsstring>(__local ushort *int_base1, __local ushort *int_base2, TTL_const_ext_ushort_tensor_t ext_tensor, TTL_event_t *event, TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_import_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref> *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref> *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__const__ext__ushort__tensor__t" kindref="compound">TTL_const_ext_ushort_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_import_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward (external to internal) transfer completion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_import_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1677" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="1677" bodyend="1693" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1671" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a2eecaecb941743f4bdbec5fbd2e80c50" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref></type>
        <definition>static TTL_int_ushort_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_import_double_const_ushort_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__import__double__const__ushort__tensor__buffering__t" kindref="compound">TTL_import_double_const_ushort_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1673" column="45" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1673" declcolumn="45"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1ae61226199173b82cad5236dbc26dd760" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__export__double__const__ushort__tensor__buffering__t" kindref="compound">TTL_export_double_const_ushort_tensor_buffering_t</ref></type>
        <definition>static TTL_export_double_const_ushort_tensor_buffering_t TTL_start_export_double_buffering</definition>
        <argsstring>(__local ushort *int_base1, __local ushort *int_base2, TTL_ext_ushort_tensor_t ext_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_start_export_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref> *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref> *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Create a TTL_export_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward and outward transfer completion</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Solid description of single buffering here.</para>
<para><simplesect kind="return"><para>The TTL_export_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1809" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="1809" bodyend="1823" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1802" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1aaf5c21982e2da3dae7e775c15a9cf1d7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref></type>
        <definition>static TTL_int_ushort_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_export_double_const_ushort_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__export__double__const__ushort__tensor__buffering__t" kindref="compound">TTL_export_double_const_ushort_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1805" column="45" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1805" declcolumn="45"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a7ec669a8ea12fea03bd77955b516f258" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__import__double__const__long__tensor__buffering__t" kindref="compound">TTL_import_double_const_long_tensor_buffering_t</ref></type>
        <definition>static TTL_import_double_const_long_tensor_buffering_t TTL_start_import_double_buffering</definition>
        <argsstring>(__local long *int_base1, __local long *int_base2, TTL_const_ext_long_tensor_t ext_tensor, TTL_event_t *event, TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_import_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> long *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> long *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__const__ext__long__tensor__t" kindref="compound">TTL_const_ext_long_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_import_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward (external to internal) transfer completion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_import_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1938" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="1938" bodyend="1954" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1932" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1aa834618125b4f74942dc0a5767bf3d2f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref></type>
        <definition>static TTL_int_long_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_import_double_const_long_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__import__double__const__long__tensor__buffering__t" kindref="compound">TTL_import_double_const_long_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="1934" column="43" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="1934" declcolumn="43"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1ab4572b1808c48468adaadd4024395303" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__export__double__const__long__tensor__buffering__t" kindref="compound">TTL_export_double_const_long_tensor_buffering_t</ref></type>
        <definition>static TTL_export_double_const_long_tensor_buffering_t TTL_start_export_double_buffering</definition>
        <argsstring>(__local long *int_base1, __local long *int_base2, TTL_ext_long_tensor_t ext_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_start_export_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> long *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> long *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Create a TTL_export_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward and outward transfer completion</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Solid description of single buffering here.</para>
<para><simplesect kind="return"><para>The TTL_export_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="2070" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="2070" bodyend="2084" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="2063" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1af3362fd10ae2b192e22cf26e30149ed4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref></type>
        <definition>static TTL_int_long_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_export_double_const_long_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__export__double__const__long__tensor__buffering__t" kindref="compound">TTL_export_double_const_long_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="2066" column="43" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="2066" declcolumn="43"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a5ac618a874f20b593bca2b76476cd033" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__import__double__const__ulong__tensor__buffering__t" kindref="compound">TTL_import_double_const_ulong_tensor_buffering_t</ref></type>
        <definition>static TTL_import_double_const_ulong_tensor_buffering_t TTL_start_import_double_buffering</definition>
        <argsstring>(__local ulong *int_base1, __local ulong *int_base2, TTL_const_ext_ulong_tensor_t ext_tensor, TTL_event_t *event, TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_import_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref> *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref> *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__const__ext__ulong__tensor__t" kindref="compound">TTL_const_ext_ulong_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_import_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward (external to internal) transfer completion </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_import_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="2199" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="2199" bodyend="2215" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="2193" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a0f5059aff1d4d3a6af57c70cadfb7c12" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref></type>
        <definition>static TTL_int_ulong_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_import_double_const_ulong_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__import__double__const__ulong__tensor__buffering__t" kindref="compound">TTL_import_double_const_ulong_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="2195" column="44" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="2195" declcolumn="44"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1a4be00ac72a419289d3fd91200a2d46be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__export__double__const__ulong__tensor__buffering__t" kindref="compound">TTL_export_double_const_ulong_tensor_buffering_t</ref></type>
        <definition>static TTL_export_double_const_ulong_tensor_buffering_t TTL_start_export_double_buffering</definition>
        <argsstring>(__local ulong *int_base1, __local ulong *int_base2, TTL_ext_ulong_tensor_t ext_tensor, TTL_event_t *event)</argsstring>
        <name>TTL_start_export_double_buffering</name>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref> *</type>
          <declname>int_base1</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref> *</type>
          <declname>int_base2</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref></type>
          <declname>ext_tensor</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref> *</type>
          <declname>event</declname>
        </param>
        <briefdescription>
<para>Create a TTL_export_double_buffering_t and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>int_base1</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 1st local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base2</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the 2nd local buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>event</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the event to use for the inward and outward transfer completion</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Solid description of single buffering here.</para>
<para><simplesect kind="return"><para>The TTL_export_double_buffering_t created from the input parameters.</para>
</simplesect>
Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline><highlight class="normal">TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
</programlisting> <linebreak/>
 This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start


stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="2331" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" bodystart="2331" bodyend="2345" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="2324" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="TTL__double__scheme__template_8h_1ad55c8d104cd28d259af694f08996be46" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref></type>
        <definition>static TTL_int_ulong_sub_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_export_double_const_ulong_tensor_buffering_t *const db, const TTL_tile_t next_tile)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__export__double__const__ulong__tensor__buffering__t" kindref="compound">TTL_export_double_const_ulong_tensor_buffering_t</ref> *const</type>
          <declname>db</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>next_tile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" line="2327" column="44" declfile="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h" declline="2327" declcolumn="44"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>TTL_double_buffering pipelines a duplex import or export transaction using two internal buffers.</para>
<para>The following table draws the pipelined actions performed in double buffering. It specifies which tile is processed in each iteration:</para>
<para><table rows="6" cols="9"><row>
<entry thead="yes"><para>Action\Iteration   </para>
</entry><entry thead="yes"><para>#-1   </para>
</entry><entry thead="yes"><para>#0   </para>
</entry><entry thead="yes"><para>#1   </para>
</entry><entry thead="yes"><para>#2   </para>
</entry><entry thead="yes"><para>#i (2:NumOfTiles-2)   </para>
</entry><entry thead="yes"><para>#NumOfTiles-1   </para>
</entry><entry thead="yes"><para>#NumOfTiles   </para>
</entry><entry thead="yes"><para>#NumOfTiles+1    </para>
</entry></row>
<row>
<entry thead="no"><para><bold>Wait Import</bold>   </para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para>0   </para>
</entry><entry thead="no"><para>1   </para>
</entry><entry thead="no"><para>2   </para>
</entry><entry thead="no"><para>i   </para>
</entry><entry thead="no"><para>NumOfTiles-1   </para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><bold>Import</bold>   </para>
</entry><entry thead="no"><para>0   </para>
</entry><entry thead="no"><para>1   </para>
</entry><entry thead="no"><para>2   </para>
</entry><entry thead="no"><para>3   </para>
</entry><entry thead="no"><para>i+1   </para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><bold>WaitExport</bold>   </para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para>0   </para>
</entry><entry thead="no"><para>i-2   </para>
</entry><entry thead="no"><para>NumOfTiles-3   </para>
</entry><entry thead="no"><para>NumOfTiles-2   </para>
</entry><entry thead="no"><para>NumOfTiles-1    </para>
</entry></row>
<row>
<entry thead="no"><para><bold>Export</bold>   </para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para>0   </para>
</entry><entry thead="no"><para>1   </para>
</entry><entry thead="no"><para>i-1   </para>
</entry><entry thead="no"><para>NumOfTiles-2   </para>
</entry><entry thead="no"><para>NumOfTiles-1   </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><bold>Compute</bold>   </para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para>0   </para>
</entry><entry thead="no"><para>1   </para>
</entry><entry thead="no"><para>2   </para>
</entry><entry thead="no"><para>i   </para>
</entry><entry thead="no"><para>NumOfTiles-1   </para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para></para>
</entry></row>
</table>
</para>
<para>Notice the prolog (at iteration number -1) and the 2 epilogs (at iterations number NumOfTiles and NumOfTiles+1) which add in total 3 extra iterations. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="53"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="structTTL__import__double__const__void__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="62" refid="structTTL__import__double__const__void__tensor__buffering__t_1aa77f5f6b70ff7f8ba14c724f10b4d6c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__void__tensor__buffering__t_1aa77f5f6b70ff7f8ba14c724f10b4d6c9" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="structTTL__import__double__const__void__tensor__buffering__t_1a3ee04ce36dbac0b7d3284af9b465d1c8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__import__double__const__void__tensor__buffering__t_1a3ee04ce36dbac0b7d3284af9b465d1c8" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="structTTL__import__double__const__void__tensor__buffering__t_1ab9694dc0d78d2299668c932cc8f9a288" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__void__tensor__t" kindref="compound">TTL_const_ext_void_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__void__tensor__buffering__t_1ab9694dc0d78d2299668c932cc8f9a288" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="structTTL__import__double__const__void__tensor__buffering__t_1a03f573a67614b573afa6a7dbbf18cd85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__void__tensor__t" kindref="compound">TTL_const_ext_void_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__void__tensor__buffering__t_1a03f573a67614b573afa6a7dbbf18cd85" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="structTTL__import__double__const__void__tensor__buffering__t_1a5291da7d9078014c75c6394eecf47e90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structTTL__import__double__const__void__tensor__buffering__t_1aa1654cfe54c90dc801982369e237755b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__import__double__const__void__tensor__buffering__t_1aa1654cfe54c90dc801982369e237755b" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structTTL__import__double__const__void__tensor__buffering__t_1a64ed557c20ee705fc3cff6739285e8e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__import__double__const__void__tensor__buffering__t_1a64ed557c20ee705fc3cff6739285e8e5" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">}<sp/><ref refid="structTTL__import__double__const__void__tensor__buffering__t" kindref="compound">TTL_import_double_const_void_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="72"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_import_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>(external<sp/>to</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>internal)<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_import_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__void__tensor__buffering__t" kindref="compound">TTL_import_double_const_void_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*int_base2,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__void__tensor__t" kindref="compound">TTL_const_ext_void_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile);</highlight></codeline>
<codeline lineno="107" refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__void__sub__tensor__t" kindref="compound">TTL_int_void_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__void__tensor__buffering__t" kindref="compound">TTL_import_double_const_void_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__void__tensor__buffering__t" kindref="compound">TTL_import_double_const_void_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="111" refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*int_base2,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__void__tensor__t" kindref="compound">TTL_const_ext_void_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__void__tensor__buffering__t" kindref="compound">TTL_import_double_const_void_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__void__tensor__buffering__t_1a5291da7d9078014c75c6394eecf47e90" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__void__tensor__buffering__t_1a3ee04ce36dbac0b7d3284af9b465d1c8" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__void__tensor__buffering__t_1a5291da7d9078014c75c6394eecf47e90" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__void__tensor__buffering__t_1a3ee04ce36dbac0b7d3284af9b465d1c8" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__void__tensor__buffering__t_1a5291da7d9078014c75c6394eecf47e90" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__void__tensor__buffering__t_1ab9694dc0d78d2299668c932cc8f9a288" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__void__tensor__buffering__t_1aa1654cfe54c90dc801982369e237755b" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__void__tensor__buffering__t_1a5291da7d9078014c75c6394eecf47e90" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__void__tensor__buffering__t_1aa77f5f6b70ff7f8ba14c724f10b4d6c9" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__void__tensor__buffering__t_1a64ed557c20ee705fc3cff6739285e8e5" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="127"><highlight class="normal">}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="151"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="181"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="184"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="structTTL__export__double__const__void__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="193" refid="structTTL__export__double__const__void__tensor__buffering__t_1a8ce5915a7e234b9f3120a616e64df7d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__void__tensor__buffering__t_1a8ce5915a7e234b9f3120a616e64df7d4" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195" refid="structTTL__export__double__const__void__tensor__buffering__t_1aa8ff4c9bf37c65471fbf0fee75b0f9d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__export__double__const__void__tensor__buffering__t_1aa8ff4c9bf37c65471fbf0fee75b0f9d3" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="structTTL__export__double__const__void__tensor__buffering__t_1ac6c7f49d83138fc3d2f32576a92223f6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__void__tensor__buffering__t_1ac6c7f49d83138fc3d2f32576a92223f6" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197" refid="structTTL__export__double__const__void__tensor__buffering__t_1aa4b2deda91a62b9e540900b7a786bc56" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__void__tensor__buffering__t_1aa4b2deda91a62b9e540900b7a786bc56" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198" refid="structTTL__export__double__const__void__tensor__buffering__t_1aec8dcf9e187affc85aa395a63cdafaa7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="structTTL__export__double__const__void__tensor__buffering__t_1a056f95ba92d483134c02486be40a2d50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__export__double__const__void__tensor__buffering__t_1a056f95ba92d483134c02486be40a2d50" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="structTTL__export__double__const__void__tensor__buffering__t_1a12550351f48759db1826503966e3874d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__export__double__const__void__tensor__buffering__t_1a12550351f48759db1826503966e3874d" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal">}<sp/><ref refid="structTTL__export__double__const__void__tensor__buffering__t" kindref="compound">TTL_export_double_const_void_tensor_buffering_t</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_export_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/><sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="208"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>and<sp/>outward</highlight></codeline>
<codeline lineno="209"><highlight class="comment"><sp/>*<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>single<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_export_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/>TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="222"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="234"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__void__tensor__buffering__t" kindref="compound">TTL_export_double_const_void_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*int_base2,<sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="TTL__double__scheme__template_8h_1ab38550c9c854fef4b098110fa4d0b0dd" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__void__sub__tensor__t" kindref="compound">TTL_int_void_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__void__tensor__buffering__t" kindref="compound">TTL_export_double_const_void_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__void__tensor__buffering__t" kindref="compound">TTL_export_double_const_void_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="243" refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*int_base2,<sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__void__tensor__buffering__t" kindref="compound">TTL_export_double_const_void_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__void__tensor__buffering__t_1aec8dcf9e187affc85aa395a63cdafaa7" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__void__tensor__buffering__t_1aa8ff4c9bf37c65471fbf0fee75b0f9d3" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__void__tensor__buffering__t_1aec8dcf9e187affc85aa395a63cdafaa7" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__void__tensor__buffering__t_1aa8ff4c9bf37c65471fbf0fee75b0f9d3" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__void__tensor__buffering__t_1aec8dcf9e187affc85aa395a63cdafaa7" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__void__tensor__buffering__t_1ac6c7f49d83138fc3d2f32576a92223f6" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__void__tensor__buffering__t_1a056f95ba92d483134c02486be40a2d50" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__void__tensor__buffering__t_1aec8dcf9e187affc85aa395a63cdafaa7" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__void__tensor__buffering__t_1a8ce5915a7e234b9f3120a616e64df7d4" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__void__tensor__buffering__t_1a12550351f48759db1826503966e3874d" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="281"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="311"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="312"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="314"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="319"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="320"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321" refid="structTTL__import__double__const__char__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="323" refid="structTTL__import__double__const__char__tensor__buffering__t_1a1400d2db0dd64b6cccf23558a0c3fa30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__char__tensor__buffering__t_1a1400d2db0dd64b6cccf23558a0c3fa30" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325" refid="structTTL__import__double__const__char__tensor__buffering__t_1a2c697e78204f343c4f2a8f9f9118128f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__import__double__const__char__tensor__buffering__t_1a2c697e78204f343c4f2a8f9f9118128f" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="structTTL__import__double__const__char__tensor__buffering__t_1a1a5f56330ebe7789d13cf21d1eb009fb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__char__tensor__t" kindref="compound">TTL_const_ext_char_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__char__tensor__buffering__t_1a1a5f56330ebe7789d13cf21d1eb009fb" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327" refid="structTTL__import__double__const__char__tensor__buffering__t_1ae57aef3dd4db6885dd92a4870cebfb46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__char__tensor__t" kindref="compound">TTL_const_ext_char_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__char__tensor__buffering__t_1ae57aef3dd4db6885dd92a4870cebfb46" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328" refid="structTTL__import__double__const__char__tensor__buffering__t_1ab45263270e00e8e506e39c6739c1aa89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329" refid="structTTL__import__double__const__char__tensor__buffering__t_1a1d075e38f62a2fcc1863609e5ed90f0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__import__double__const__char__tensor__buffering__t_1a1d075e38f62a2fcc1863609e5ed90f0a" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="structTTL__import__double__const__char__tensor__buffering__t_1a1f3b6146bb9b098ceb54b3183e88e78c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__import__double__const__char__tensor__buffering__t_1a1f3b6146bb9b098ceb54b3183e88e78c" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal">}<sp/><ref refid="structTTL__import__double__const__char__tensor__buffering__t" kindref="compound">TTL_import_double_const_char_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="333"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_import_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>(external<sp/>to</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*<sp/>internal)<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_import_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*<sp/>TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__char__tensor__buffering__t" kindref="compound">TTL_import_double_const_char_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*int_base2,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__char__tensor__t" kindref="compound">TTL_const_ext_char_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile);</highlight></codeline>
<codeline lineno="368" refid="TTL__double__scheme__template_8h_1a748725523d20f2f1a0ead1681c2f959b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__char__tensor__buffering__t" kindref="compound">TTL_import_double_const_char_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__char__tensor__buffering__t" kindref="compound">TTL_import_double_const_char_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="372" refid="TTL__double__scheme__template_8h_1ae0a5fdec48e2fca545d74d354ca37c89" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*int_base2,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__char__tensor__t" kindref="compound">TTL_const_ext_char_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__char__tensor__buffering__t" kindref="compound">TTL_import_double_const_char_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__char__tensor__buffering__t_1ab45263270e00e8e506e39c6739c1aa89" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__char__tensor__buffering__t_1a2c697e78204f343c4f2a8f9f9118128f" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__char__tensor__buffering__t_1ab45263270e00e8e506e39c6739c1aa89" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__char__tensor__buffering__t_1a2c697e78204f343c4f2a8f9f9118128f" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__char__tensor__buffering__t_1ab45263270e00e8e506e39c6739c1aa89" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__char__tensor__buffering__t_1a1a5f56330ebe7789d13cf21d1eb009fb" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__char__tensor__buffering__t_1a1d075e38f62a2fcc1863609e5ed90f0a" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__char__tensor__buffering__t_1ab45263270e00e8e506e39c6739c1aa89" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__char__tensor__buffering__t_1a1400d2db0dd64b6cccf23558a0c3fa30" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__char__tensor__buffering__t_1a1f3b6146bb9b098ceb54b3183e88e78c" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="388"><highlight class="normal">}</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="412"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="442"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="443"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="444"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="445"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452" refid="structTTL__export__double__const__char__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="454" refid="structTTL__export__double__const__char__tensor__buffering__t_1a3e2cea2fced90e3285aec4f80c4336c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__char__tensor__buffering__t_1a3e2cea2fced90e3285aec4f80c4336c2" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="structTTL__export__double__const__char__tensor__buffering__t_1acd00e2468766c9f7bdc5e4424fde9c7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__export__double__const__char__tensor__buffering__t_1acd00e2468766c9f7bdc5e4424fde9c7b" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457" refid="structTTL__export__double__const__char__tensor__buffering__t_1a87896235061b544812c2069ed7510d5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__char__tensor__buffering__t_1a87896235061b544812c2069ed7510d5c" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="structTTL__export__double__const__char__tensor__buffering__t_1a172ef1008bc1a589371021ce11166f30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__char__tensor__buffering__t_1a172ef1008bc1a589371021ce11166f30" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459" refid="structTTL__export__double__const__char__tensor__buffering__t_1a5065539c4b27910912e1c57c2a31e4c5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460" refid="structTTL__export__double__const__char__tensor__buffering__t_1a01acb2fbbf519e75d709a5e18beb90d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__export__double__const__char__tensor__buffering__t_1a01acb2fbbf519e75d709a5e18beb90d4" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461" refid="structTTL__export__double__const__char__tensor__buffering__t_1a4b3c75078804d3be8c1fdef64d5617dc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__export__double__const__char__tensor__buffering__t_1a4b3c75078804d3be8c1fdef64d5617dc" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal">}<sp/><ref refid="structTTL__export__double__const__char__tensor__buffering__t" kindref="compound">TTL_export_double_const_char_tensor_buffering_t</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="463"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_export_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="466"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="467"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="468"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/><sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>and<sp/>outward</highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>single<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_export_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*<sp/>TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="490"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="491"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__char__tensor__buffering__t" kindref="compound">TTL_export_double_const_char_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*int_base2,<sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500" refid="TTL__double__scheme__template_8h_1a5a9c3af53575d93369013496b3ef4f35" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__char__tensor__buffering__t" kindref="compound">TTL_export_double_const_char_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__char__tensor__buffering__t" kindref="compound">TTL_export_double_const_char_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="504" refid="TTL__double__scheme__template_8h_1a3a9c5d79da897294840a6813311794b5" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*int_base2,<sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__char__tensor__buffering__t" kindref="compound">TTL_export_double_const_char_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__char__tensor__buffering__t_1a5065539c4b27910912e1c57c2a31e4c5" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__char__tensor__buffering__t_1acd00e2468766c9f7bdc5e4424fde9c7b" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__char__tensor__buffering__t_1a5065539c4b27910912e1c57c2a31e4c5" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__char__tensor__buffering__t_1acd00e2468766c9f7bdc5e4424fde9c7b" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__char__tensor__buffering__t_1a5065539c4b27910912e1c57c2a31e4c5" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__char__tensor__buffering__t_1a87896235061b544812c2069ed7510d5c" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__char__tensor__buffering__t_1a01acb2fbbf519e75d709a5e18beb90d4" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__char__tensor__buffering__t_1a5065539c4b27910912e1c57c2a31e4c5" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__char__tensor__buffering__t_1a3e2cea2fced90e3285aec4f80c4336c2" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__char__tensor__buffering__t_1a4b3c75078804d3be8c1fdef64d5617dc" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="532"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="533"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="534"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="542"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="543"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="572"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="575"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582" refid="structTTL__import__double__const__uchar__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="584" refid="structTTL__import__double__const__uchar__tensor__buffering__t_1a9c44e321ba62039f1b3d919a82b3c5d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1a9c44e321ba62039f1b3d919a82b3c5d6" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="585"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="structTTL__import__double__const__uchar__tensor__buffering__t_1ae342a8c379a8ca2a3731cbc5f2dc426f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*<ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1ae342a8c379a8ca2a3731cbc5f2dc426f" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="structTTL__import__double__const__uchar__tensor__buffering__t_1a6c56021c7f02f7979d7b6845158c2228" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__uchar__tensor__t" kindref="compound">TTL_const_ext_uchar_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1a6c56021c7f02f7979d7b6845158c2228" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="structTTL__import__double__const__uchar__tensor__buffering__t_1a5f8c8073fe7955d2a5eb45f918a55b45" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__uchar__tensor__t" kindref="compound">TTL_const_ext_uchar_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1a5f8c8073fe7955d2a5eb45f918a55b45" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="structTTL__import__double__const__uchar__tensor__buffering__t_1ac3a153823f5da84cb3eac6c4a4adfb0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="structTTL__import__double__const__uchar__tensor__buffering__t_1aa146a2bec834d4e7a58ba89389388857" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1aa146a2bec834d4e7a58ba89389388857" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591" refid="structTTL__import__double__const__uchar__tensor__buffering__t_1a0b0763b30bd5e8009f8373f36360938e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1a0b0763b30bd5e8009f8373f36360938e" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal">}<sp/><ref refid="structTTL__import__double__const__uchar__tensor__buffering__t" kindref="compound">TTL_import_double_const_uchar_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="594"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="595"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_import_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>(external<sp/>to</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/>*<sp/>internal)<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_import_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>*<sp/>TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
<codeline lineno="611"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="612"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="613"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__uchar__tensor__buffering__t" kindref="compound">TTL_import_double_const_uchar_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*int_base2,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__uchar__tensor__t" kindref="compound">TTL_const_ext_uchar_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile);</highlight></codeline>
<codeline lineno="629" refid="TTL__double__scheme__template_8h_1a796dde9f50a5b527a8cb6810d0ff99de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__uchar__tensor__buffering__t" kindref="compound">TTL_import_double_const_uchar_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__uchar__tensor__buffering__t" kindref="compound">TTL_import_double_const_uchar_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="633" refid="TTL__double__scheme__template_8h_1a07ac1e787198b1a5d1dbb48a523d568a" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*int_base2,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__uchar__tensor__t" kindref="compound">TTL_const_ext_uchar_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__uchar__tensor__buffering__t" kindref="compound">TTL_import_double_const_uchar_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1ac3a153823f5da84cb3eac6c4a4adfb0e" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1ae342a8c379a8ca2a3731cbc5f2dc426f" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1ac3a153823f5da84cb3eac6c4a4adfb0e" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1ae342a8c379a8ca2a3731cbc5f2dc426f" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1ac3a153823f5da84cb3eac6c4a4adfb0e" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1a6c56021c7f02f7979d7b6845158c2228" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1aa146a2bec834d4e7a58ba89389388857" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1ac3a153823f5da84cb3eac6c4a4adfb0e" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1a9c44e321ba62039f1b3d919a82b3c5d6" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__uchar__tensor__buffering__t_1a0b0763b30bd5e8009f8373f36360938e" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="649"><highlight class="normal">}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="673"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="694"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="703"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="705"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="706"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="707"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="708"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="709"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="710"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="711"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="712"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="structTTL__export__double__const__uchar__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="715" refid="structTTL__export__double__const__uchar__tensor__buffering__t_1ad7e566bf89df701b8da7df15b82d76e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1ad7e566bf89df701b8da7df15b82d76e8" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="716"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717" refid="structTTL__export__double__const__uchar__tensor__buffering__t_1acca6307d3a7fa9aa5a53d876058d342e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*<ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1acca6307d3a7fa9aa5a53d876058d342e" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718" refid="structTTL__export__double__const__uchar__tensor__buffering__t_1ad29c7f9150dfdc02c81071c81d653f50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1ad29c7f9150dfdc02c81071c81d653f50" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="719" refid="structTTL__export__double__const__uchar__tensor__buffering__t_1ac93978c591c9fda3039683942622b5ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1ac93978c591c9fda3039683942622b5ff" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720" refid="structTTL__export__double__const__uchar__tensor__buffering__t_1a873731a0a8b03f795202f7c7e7cd3825" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721" refid="structTTL__export__double__const__uchar__tensor__buffering__t_1a504f4133c98f5e4ef48bd8281d621496" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1a504f4133c98f5e4ef48bd8281d621496" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="722" refid="structTTL__export__double__const__uchar__tensor__buffering__t_1a41d11f2a6b757e27b82bae0becb1aed0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1a41d11f2a6b757e27b82bae0becb1aed0" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal">}<sp/><ref refid="structTTL__export__double__const__uchar__tensor__buffering__t" kindref="compound">TTL_export_double_const_uchar_tensor_buffering_t</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="724"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_export_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/><sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>and<sp/>outward</highlight></codeline>
<codeline lineno="731"><highlight class="comment"><sp/>*<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="732"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="733"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>single<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="734"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_export_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="737"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="738"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="739"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="740"><highlight class="comment"><sp/>*<sp/>TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline lineno="741"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
<codeline lineno="742"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="743"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="744"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="745"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__uchar__tensor__buffering__t" kindref="compound">TTL_export_double_const_uchar_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*int_base2,<sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761" refid="TTL__double__scheme__template_8h_1a17ad452992e36c00eeaf9f682192257c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__uchar__tensor__buffering__t" kindref="compound">TTL_export_double_const_uchar_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__uchar__tensor__buffering__t" kindref="compound">TTL_export_double_const_uchar_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="765" refid="TTL__double__scheme__template_8h_1a4b45ef6509c20396ee42f254d1bf5fb1" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*int_base2,<sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__uchar__tensor__buffering__t" kindref="compound">TTL_export_double_const_uchar_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1a873731a0a8b03f795202f7c7e7cd3825" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1acca6307d3a7fa9aa5a53d876058d342e" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1a873731a0a8b03f795202f7c7e7cd3825" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1acca6307d3a7fa9aa5a53d876058d342e" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1a873731a0a8b03f795202f7c7e7cd3825" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1ad29c7f9150dfdc02c81071c81d653f50" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1a504f4133c98f5e4ef48bd8281d621496" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1a873731a0a8b03f795202f7c7e7cd3825" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1ad7e566bf89df701b8da7df15b82d76e8" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__uchar__tensor__buffering__t_1a41d11f2a6b757e27b82bae0becb1aed0" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="779"><highlight class="normal">}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="790"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="803"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="806"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="808"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="809"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="818"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="833"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="834"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="835"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="836"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="837"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="838"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="839"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="840"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="841"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="842"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843" refid="structTTL__import__double__const__int__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="845" refid="structTTL__import__double__const__int__tensor__buffering__t_1adc04b416b2329ad58c189116e49ec4e9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__int__tensor__buffering__t_1adc04b416b2329ad58c189116e49ec4e9" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="846"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847" refid="structTTL__import__double__const__int__tensor__buffering__t_1a1742874c673767dbb739b458957ef5a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__import__double__const__int__tensor__buffering__t_1a1742874c673767dbb739b458957ef5a1" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848" refid="structTTL__import__double__const__int__tensor__buffering__t_1af786c950be62b9e80054133da18d5c20" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__int__tensor__t" kindref="compound">TTL_const_ext_int_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__int__tensor__buffering__t_1af786c950be62b9e80054133da18d5c20" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849" refid="structTTL__import__double__const__int__tensor__buffering__t_1a326b403d84eaf84e3a76964643c8b784" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__int__tensor__t" kindref="compound">TTL_const_ext_int_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__int__tensor__buffering__t_1a326b403d84eaf84e3a76964643c8b784" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="structTTL__import__double__const__int__tensor__buffering__t_1a54839b87fd124310dddfac0bec72cfac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851" refid="structTTL__import__double__const__int__tensor__buffering__t_1ae35441a001d6d4e0bb6f993e61a05505" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__import__double__const__int__tensor__buffering__t_1ae35441a001d6d4e0bb6f993e61a05505" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852" refid="structTTL__import__double__const__int__tensor__buffering__t_1a437f91824ce0937ed4ba6034c6007e7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__import__double__const__int__tensor__buffering__t_1a437f91824ce0937ed4ba6034c6007e7b" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal">}<sp/><ref refid="structTTL__import__double__const__int__tensor__buffering__t" kindref="compound">TTL_import_double_const_int_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="855"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_import_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="858"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="859"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="860"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="861"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>(external<sp/>to</highlight></codeline>
<codeline lineno="862"><highlight class="comment"><sp/>*<sp/>internal)<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="863"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_import_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="867"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="868"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="869"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="870"><highlight class="comment"><sp/>*<sp/>TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline lineno="871"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
<codeline lineno="872"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="873"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="876"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="877"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="878"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="880"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="881"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="882"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="883"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__int__tensor__buffering__t" kindref="compound">TTL_import_double_const_int_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*int_base2,<sp/><ref refid="structTTL__const__ext__int__tensor__t" kindref="compound">TTL_const_ext_int_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile);</highlight></codeline>
<codeline lineno="890" refid="TTL__double__scheme__template_8h_1a8b9a1d48f3ff3474679602373cdd93a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__int__tensor__buffering__t" kindref="compound">TTL_import_double_const_int_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__int__tensor__buffering__t" kindref="compound">TTL_import_double_const_int_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="894" refid="TTL__double__scheme__template_8h_1a999e16e668f106efca44b70a121e9e88" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*int_base2,<sp/><ref refid="structTTL__const__ext__int__tensor__t" kindref="compound">TTL_const_ext_int_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__int__tensor__buffering__t" kindref="compound">TTL_import_double_const_int_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__int__tensor__buffering__t_1a54839b87fd124310dddfac0bec72cfac" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__int__tensor__buffering__t_1a1742874c673767dbb739b458957ef5a1" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__int__tensor__buffering__t_1a54839b87fd124310dddfac0bec72cfac" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__int__tensor__buffering__t_1a1742874c673767dbb739b458957ef5a1" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__int__tensor__buffering__t_1a54839b87fd124310dddfac0bec72cfac" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__int__tensor__buffering__t_1af786c950be62b9e80054133da18d5c20" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__int__tensor__buffering__t_1ae35441a001d6d4e0bb6f993e61a05505" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__int__tensor__buffering__t_1a54839b87fd124310dddfac0bec72cfac" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__int__tensor__buffering__t_1adc04b416b2329ad58c189116e49ec4e9" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__int__tensor__buffering__t_1a437f91824ce0937ed4ba6034c6007e7b" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="916"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="917"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="918"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="920"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="921"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="922"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="923"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="924"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="925"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="928"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="930"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="934"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="939"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="940"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="941"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="942"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="943"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="952"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="955"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="964"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="965"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="966"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="967"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="968"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="969"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="970"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="971"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="972"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="973"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974" refid="structTTL__export__double__const__int__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="976" refid="structTTL__export__double__const__int__tensor__buffering__t_1a826d23cb3b099cacfa23750144505e63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__int__tensor__buffering__t_1a826d23cb3b099cacfa23750144505e63" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="977"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978" refid="structTTL__export__double__const__int__tensor__buffering__t_1a2187661832524aaab5a581336a563571" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__export__double__const__int__tensor__buffering__t_1a2187661832524aaab5a581336a563571" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979" refid="structTTL__export__double__const__int__tensor__buffering__t_1a7c58f31b19227b525c9001d7a908dbbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__int__tensor__buffering__t_1a7c58f31b19227b525c9001d7a908dbbd" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980" refid="structTTL__export__double__const__int__tensor__buffering__t_1a0fb82f0d9622c7f403dffff7ab2e2e30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__int__tensor__buffering__t_1a0fb82f0d9622c7f403dffff7ab2e2e30" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981" refid="structTTL__export__double__const__int__tensor__buffering__t_1acbfcc05beaebc083a13b8800af7a078f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982" refid="structTTL__export__double__const__int__tensor__buffering__t_1a70ad38bb5df252a0d86c269a4343b800" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__export__double__const__int__tensor__buffering__t_1a70ad38bb5df252a0d86c269a4343b800" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983" refid="structTTL__export__double__const__int__tensor__buffering__t_1a1519131bd75e447432d36a880aa62af9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__export__double__const__int__tensor__buffering__t_1a1519131bd75e447432d36a880aa62af9" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal">}<sp/><ref refid="structTTL__export__double__const__int__tensor__buffering__t" kindref="compound">TTL_export_double_const_int_tensor_buffering_t</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="985"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="986"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_export_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="987"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="988"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="989"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="990"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/><sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="991"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>and<sp/>outward</highlight></codeline>
<codeline lineno="992"><highlight class="comment"><sp/>*<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="993"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="994"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>single<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="995"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="996"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_export_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="997"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="998"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="999"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="1000"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="1001"><highlight class="comment"><sp/>*<sp/>TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline lineno="1002"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
<codeline lineno="1003"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="1004"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="1005"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1006"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="1007"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="1008"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1012"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1013"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1014"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1015"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1016"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1017"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__int__tensor__buffering__t" kindref="compound">TTL_export_double_const_int_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*int_base2,<sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event);</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022" refid="TTL__double__scheme__template_8h_1a9cb97b1a8a41ba99350017d1a4c6c017" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__int__tensor__buffering__t" kindref="compound">TTL_export_double_const_int_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__int__tensor__buffering__t" kindref="compound">TTL_export_double_const_int_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1026" refid="TTL__double__scheme__template_8h_1a05b9527be6edabb731cd64162f2d3b6c" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*int_base2,<sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__int__tensor__buffering__t" kindref="compound">TTL_export_double_const_int_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__int__tensor__buffering__t_1acbfcc05beaebc083a13b8800af7a078f" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__int__tensor__buffering__t_1a2187661832524aaab5a581336a563571" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__int__tensor__buffering__t_1acbfcc05beaebc083a13b8800af7a078f" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__int__tensor__buffering__t_1a2187661832524aaab5a581336a563571" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__int__tensor__buffering__t_1acbfcc05beaebc083a13b8800af7a078f" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__int__tensor__buffering__t_1a7c58f31b19227b525c9001d7a908dbbd" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__int__tensor__buffering__t_1a70ad38bb5df252a0d86c269a4343b800" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__int__tensor__buffering__t_1acbfcc05beaebc083a13b8800af7a078f" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__int__tensor__buffering__t_1a826d23cb3b099cacfa23750144505e63" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__int__tensor__buffering__t_1a1519131bd75e447432d36a880aa62af9" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1046"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="1047"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1048"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="1049"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1050"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="1051"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1052"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="1053"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="1055"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1056"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="1057"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="1058"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="1059"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="1060"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1061"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1064"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1065"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="1066"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1067"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="1068"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="1069"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1070"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="1071"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="1072"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1073"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="1074"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="1075"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1076"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1077"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1078"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1079"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1080"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1081"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="1082"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="1083"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1084"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="1085"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1094"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1095"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="1096"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1097"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1098"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="1099"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1100"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="1102"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="1103"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104" refid="structTTL__import__double__const__uint__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1106" refid="structTTL__import__double__const__uint__tensor__buffering__t_1a2bb0efc96dbc2652ff7b9628674bcff2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1a2bb0efc96dbc2652ff7b9628674bcff2" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="1107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108" refid="structTTL__import__double__const__uint__tensor__buffering__t_1a8122faec0bc8b9bd4c2ecaeaa1bd220f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*<ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1a8122faec0bc8b9bd4c2ecaeaa1bd220f" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109" refid="structTTL__import__double__const__uint__tensor__buffering__t_1a05d62689e38d70a1b8b77d566155027b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__uint__tensor__t" kindref="compound">TTL_const_ext_uint_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1a05d62689e38d70a1b8b77d566155027b" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110" refid="structTTL__import__double__const__uint__tensor__buffering__t_1ada68e2f3b9e3c33175f8a3f65eeba380" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__uint__tensor__t" kindref="compound">TTL_const_ext_uint_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1ada68e2f3b9e3c33175f8a3f65eeba380" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111" refid="structTTL__import__double__const__uint__tensor__buffering__t_1a7530034989b892904f995145f8aa8727" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112" refid="structTTL__import__double__const__uint__tensor__buffering__t_1afd80e71f62b8eb92fd918f08b84e5397" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1afd80e71f62b8eb92fd918f08b84e5397" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113" refid="structTTL__import__double__const__uint__tensor__buffering__t_1af79f0bfee5f4aff2b7ccaf8efa7ce4d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1af79f0bfee5f4aff2b7ccaf8efa7ce4d0" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal">}<sp/><ref refid="structTTL__import__double__const__uint__tensor__buffering__t" kindref="compound">TTL_import_double_const_uint_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1116"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1117"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_import_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="1118"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1119"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="1120"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="1121"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1122"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>(external<sp/>to</highlight></codeline>
<codeline lineno="1123"><highlight class="comment"><sp/>*<sp/>internal)<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="1124"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="1125"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1126"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_import_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1128"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="1129"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="1130"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="1131"><highlight class="comment"><sp/>*<sp/>TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline lineno="1132"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
<codeline lineno="1133"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="1134"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="1135"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1136"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="1137"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="1138"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1139"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1140"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1141"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1142"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1143"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1144"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1145"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1146"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1147"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__uint__tensor__buffering__t" kindref="compound">TTL_import_double_const_uint_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*int_base2,</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__uint__tensor__t" kindref="compound">TTL_const_ext_uint_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile);</highlight></codeline>
<codeline lineno="1151" refid="TTL__double__scheme__template_8h_1af0e8d5c4e6063c86129cd044ec0ae961" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__uint__tensor__buffering__t" kindref="compound">TTL_import_double_const_uint_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__uint__tensor__buffering__t" kindref="compound">TTL_import_double_const_uint_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1155" refid="TTL__double__scheme__template_8h_1af0e56192cf366ed0433e1b9e42bc68f2" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*int_base2,</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__uint__tensor__t" kindref="compound">TTL_const_ext_uint_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__uint__tensor__buffering__t" kindref="compound">TTL_import_double_const_uint_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1a7530034989b892904f995145f8aa8727" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1a8122faec0bc8b9bd4c2ecaeaa1bd220f" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1a7530034989b892904f995145f8aa8727" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1a8122faec0bc8b9bd4c2ecaeaa1bd220f" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1a7530034989b892904f995145f8aa8727" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1a05d62689e38d70a1b8b77d566155027b" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1afd80e71f62b8eb92fd918f08b84e5397" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1a7530034989b892904f995145f8aa8727" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1a2bb0efc96dbc2652ff7b9628674bcff2" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__uint__tensor__buffering__t_1af79f0bfee5f4aff2b7ccaf8efa7ce4d0" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1171"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1177"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="1178"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1179"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="1180"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1181"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="1182"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1183"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="1184"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1185"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="1186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1187"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="1188"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="1189"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="1190"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="1191"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1192"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1195"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1196"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="1197"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1198"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="1199"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="1200"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1201"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="1202"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="1203"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1204"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="1205"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="1206"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1207"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1208"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1209"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1210"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1211"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1212"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="1213"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="1214"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1215"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="1216"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1225"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1226"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="1227"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1228"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1229"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="1230"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1231"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="1232"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="1233"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="1234"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235" refid="structTTL__export__double__const__uint__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1237" refid="structTTL__export__double__const__uint__tensor__buffering__t_1a705102d6301220183e33be2a8c5b36a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1a705102d6301220183e33be2a8c5b36a3" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="1238"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239" refid="structTTL__export__double__const__uint__tensor__buffering__t_1ad76e146a90af8286cbc36b85c72bfb8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*<ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1ad76e146a90af8286cbc36b85c72bfb8b" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240" refid="structTTL__export__double__const__uint__tensor__buffering__t_1a0893fd5f61b7048d48faef8d1b971ec1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1a0893fd5f61b7048d48faef8d1b971ec1" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241" refid="structTTL__export__double__const__uint__tensor__buffering__t_1a56d6b11c5c4134e3bc46b70e6b2a097c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1a56d6b11c5c4134e3bc46b70e6b2a097c" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242" refid="structTTL__export__double__const__uint__tensor__buffering__t_1a94b3718cab1427a9c66353f2aa049371" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243" refid="structTTL__export__double__const__uint__tensor__buffering__t_1aa224c1bad3f10132984f931d6fd47b92" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1aa224c1bad3f10132984f931d6fd47b92" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244" refid="structTTL__export__double__const__uint__tensor__buffering__t_1a4f775ffea5b59b9941985c44467aebd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1a4f775ffea5b59b9941985c44467aebd9" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal">}<sp/><ref refid="structTTL__export__double__const__uint__tensor__buffering__t" kindref="compound">TTL_export_double_const_uint_tensor_buffering_t</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1246"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1247"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_export_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="1248"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1249"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="1250"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="1251"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/><sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1252"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>and<sp/>outward</highlight></codeline>
<codeline lineno="1253"><highlight class="comment"><sp/>*<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="1254"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1255"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>single<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="1256"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1257"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_export_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1258"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1259"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="1260"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="1261"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="1262"><highlight class="comment"><sp/>*<sp/>TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline lineno="1263"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
<codeline lineno="1264"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="1265"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="1266"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1267"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="1268"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="1269"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1270"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1271"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1272"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1273"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1274"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1275"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1276"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1277"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1278"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__uint__tensor__buffering__t" kindref="compound">TTL_export_double_const_uint_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*int_base2,<sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event);</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283" refid="TTL__double__scheme__template_8h_1ab9152aad1a9c166de949aa711c64c907" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__uint__tensor__buffering__t" kindref="compound">TTL_export_double_const_uint_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__uint__tensor__buffering__t" kindref="compound">TTL_export_double_const_uint_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1287" refid="TTL__double__scheme__template_8h_1acf521689205a68633b6d731a22bf4243" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*int_base2,<sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__uint__tensor__buffering__t" kindref="compound">TTL_export_double_const_uint_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1a94b3718cab1427a9c66353f2aa049371" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1ad76e146a90af8286cbc36b85c72bfb8b" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1a94b3718cab1427a9c66353f2aa049371" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1ad76e146a90af8286cbc36b85c72bfb8b" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1a94b3718cab1427a9c66353f2aa049371" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1a0893fd5f61b7048d48faef8d1b971ec1" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1aa224c1bad3f10132984f931d6fd47b92" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1a94b3718cab1427a9c66353f2aa049371" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1a705102d6301220183e33be2a8c5b36a3" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__uint__tensor__buffering__t_1a4f775ffea5b59b9941985c44467aebd9" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1307"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="1308"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1309"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="1310"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1311"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="1312"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1313"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="1314"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1315"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="1316"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1317"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="1318"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="1320"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="1321"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1322"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1325"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1326"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1328"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="1329"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="1330"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1331"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="1332"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="1333"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1334"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="1335"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="1336"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1337"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1338"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1339"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1340"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1341"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1342"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="1343"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="1344"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1345"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="1346"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1355"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1356"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="1357"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1358"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1359"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="1360"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1361"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="1362"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="1363"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="1364"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365" refid="structTTL__import__double__const__short__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1367" refid="structTTL__import__double__const__short__tensor__buffering__t_1a0c1040bad9fd7c58287e48d54ebbe3f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__short__tensor__buffering__t_1a0c1040bad9fd7c58287e48d54ebbe3f5" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="1368"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369" refid="structTTL__import__double__const__short__tensor__buffering__t_1ab43a0dc2955d66df94edb57310fd0ea4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__import__double__const__short__tensor__buffering__t_1ab43a0dc2955d66df94edb57310fd0ea4" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370" refid="structTTL__import__double__const__short__tensor__buffering__t_1aa271f291e93c8db3e810ddf3dd80c7a5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__short__tensor__t" kindref="compound">TTL_const_ext_short_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__short__tensor__buffering__t_1aa271f291e93c8db3e810ddf3dd80c7a5" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371" refid="structTTL__import__double__const__short__tensor__buffering__t_1af8bf0f02dbcf334c5d35d5f7ee533346" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__short__tensor__t" kindref="compound">TTL_const_ext_short_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__short__tensor__buffering__t_1af8bf0f02dbcf334c5d35d5f7ee533346" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372" refid="structTTL__import__double__const__short__tensor__buffering__t_1abd5baf4a4e5bd8b4a9845b74586e4ba2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373" refid="structTTL__import__double__const__short__tensor__buffering__t_1a63b10eece1726ea9650e663c729346d4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__import__double__const__short__tensor__buffering__t_1a63b10eece1726ea9650e663c729346d4" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374" refid="structTTL__import__double__const__short__tensor__buffering__t_1ad8b833f124f91d03ff5eb790e8cc0397" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__import__double__const__short__tensor__buffering__t_1ad8b833f124f91d03ff5eb790e8cc0397" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal">}<sp/><ref refid="structTTL__import__double__const__short__tensor__buffering__t" kindref="compound">TTL_import_double_const_short_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1377"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1378"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_import_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="1379"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1380"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="1381"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="1382"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1383"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>(external<sp/>to</highlight></codeline>
<codeline lineno="1384"><highlight class="comment"><sp/>*<sp/>internal)<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="1385"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="1386"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1387"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_import_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1388"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1389"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="1390"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="1391"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="1392"><highlight class="comment"><sp/>*<sp/>TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline lineno="1393"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
<codeline lineno="1394"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="1396"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1397"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="1398"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="1399"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1400"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1401"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1402"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1403"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1404"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1405"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1406"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1407"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1408"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__short__tensor__buffering__t" kindref="compound">TTL_import_double_const_short_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*int_base2,</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__short__tensor__t" kindref="compound">TTL_const_ext_short_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile);</highlight></codeline>
<codeline lineno="1412" refid="TTL__double__scheme__template_8h_1a5863965943acf9e0b6e922cad717d077" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__short__tensor__buffering__t" kindref="compound">TTL_import_double_const_short_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__short__tensor__buffering__t" kindref="compound">TTL_import_double_const_short_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1416" refid="TTL__double__scheme__template_8h_1ac15c8e8c250f7aaa2866d7ec813a8e18" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*int_base2,</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__short__tensor__t" kindref="compound">TTL_const_ext_short_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__short__tensor__buffering__t" kindref="compound">TTL_import_double_const_short_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__short__tensor__buffering__t_1abd5baf4a4e5bd8b4a9845b74586e4ba2" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__short__tensor__buffering__t_1ab43a0dc2955d66df94edb57310fd0ea4" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__short__tensor__buffering__t_1abd5baf4a4e5bd8b4a9845b74586e4ba2" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__short__tensor__buffering__t_1ab43a0dc2955d66df94edb57310fd0ea4" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__short__tensor__buffering__t_1abd5baf4a4e5bd8b4a9845b74586e4ba2" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__short__tensor__buffering__t_1aa271f291e93c8db3e810ddf3dd80c7a5" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__short__tensor__buffering__t_1a63b10eece1726ea9650e663c729346d4" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__short__tensor__buffering__t_1abd5baf4a4e5bd8b4a9845b74586e4ba2" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__short__tensor__buffering__t_1a0c1040bad9fd7c58287e48d54ebbe3f5" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__short__tensor__buffering__t_1ad8b833f124f91d03ff5eb790e8cc0397" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1432"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1438"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="1439"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1440"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="1441"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1442"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="1443"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1444"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="1445"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1446"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1448"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="1449"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="1450"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="1451"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="1452"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1453"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1456"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1457"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="1458"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1459"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="1460"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="1461"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1462"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="1463"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="1464"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1465"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="1466"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="1467"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1468"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1469"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1470"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1471"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1472"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1473"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="1474"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="1475"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1476"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="1477"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1486"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1487"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="1488"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1489"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1490"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="1491"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1492"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="1493"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="1494"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="1495"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496" refid="structTTL__export__double__const__short__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1498" refid="structTTL__export__double__const__short__tensor__buffering__t_1a3b61021126026ed8058069fd7ac7aef7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__short__tensor__buffering__t_1a3b61021126026ed8058069fd7ac7aef7" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="1499"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500" refid="structTTL__export__double__const__short__tensor__buffering__t_1a51c0a58a2419609962d2ea867bc90b18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__export__double__const__short__tensor__buffering__t_1a51c0a58a2419609962d2ea867bc90b18" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501" refid="structTTL__export__double__const__short__tensor__buffering__t_1adc9698bc59b7f999e2706f2436369178" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__short__tensor__buffering__t_1adc9698bc59b7f999e2706f2436369178" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502" refid="structTTL__export__double__const__short__tensor__buffering__t_1a247fd7ac9d3e99bb1f227fae6fd2066e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__short__tensor__buffering__t_1a247fd7ac9d3e99bb1f227fae6fd2066e" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503" refid="structTTL__export__double__const__short__tensor__buffering__t_1a91402afe2bd45037bc52ed2d55e4e854" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504" refid="structTTL__export__double__const__short__tensor__buffering__t_1a00f3ab4a759011d5806bc04c216e0d58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__export__double__const__short__tensor__buffering__t_1a00f3ab4a759011d5806bc04c216e0d58" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505" refid="structTTL__export__double__const__short__tensor__buffering__t_1af9338e5f4445bb0cbe9422964a9c1a05" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__export__double__const__short__tensor__buffering__t_1af9338e5f4445bb0cbe9422964a9c1a05" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal">}<sp/><ref refid="structTTL__export__double__const__short__tensor__buffering__t" kindref="compound">TTL_export_double_const_short_tensor_buffering_t</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1507"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1508"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_export_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="1509"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1510"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="1511"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="1512"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/><sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1513"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>and<sp/>outward</highlight></codeline>
<codeline lineno="1514"><highlight class="comment"><sp/>*<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="1515"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1516"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>single<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="1517"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1518"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_export_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1519"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1520"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="1521"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="1522"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="1523"><highlight class="comment"><sp/>*<sp/>TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline lineno="1524"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
<codeline lineno="1525"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="1526"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="1527"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1528"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="1529"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="1530"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1531"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1532"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1533"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1534"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1535"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1536"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1537"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1538"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1539"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__short__tensor__buffering__t" kindref="compound">TTL_export_double_const_short_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*int_base2,<sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544" refid="TTL__double__scheme__template_8h_1aa51e6bd76a8dba3983f73f11ce034b03" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__short__tensor__buffering__t" kindref="compound">TTL_export_double_const_short_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__short__tensor__buffering__t" kindref="compound">TTL_export_double_const_short_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1548" refid="TTL__double__scheme__template_8h_1a62684298b5d0e0aaa1bb3e96261a39d6" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*int_base2,<sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__short__tensor__buffering__t" kindref="compound">TTL_export_double_const_short_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__short__tensor__buffering__t_1a91402afe2bd45037bc52ed2d55e4e854" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__short__tensor__buffering__t_1a51c0a58a2419609962d2ea867bc90b18" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__short__tensor__buffering__t_1a91402afe2bd45037bc52ed2d55e4e854" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__short__tensor__buffering__t_1a51c0a58a2419609962d2ea867bc90b18" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__short__tensor__buffering__t_1a91402afe2bd45037bc52ed2d55e4e854" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__short__tensor__buffering__t_1adc9698bc59b7f999e2706f2436369178" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__short__tensor__buffering__t_1a00f3ab4a759011d5806bc04c216e0d58" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__short__tensor__buffering__t_1a91402afe2bd45037bc52ed2d55e4e854" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__short__tensor__buffering__t_1a3b61021126026ed8058069fd7ac7aef7" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__short__tensor__buffering__t_1af9338e5f4445bb0cbe9422964a9c1a05" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1562"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1567"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1568"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1570"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="1571"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1572"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="1573"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1574"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="1575"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1576"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="1577"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1578"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="1579"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="1580"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="1581"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="1582"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1583"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1586"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1587"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="1588"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1589"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="1590"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="1591"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1592"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="1593"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="1594"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1595"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="1596"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="1597"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1598"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1599"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1600"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1601"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1602"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1603"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="1604"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="1605"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1606"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="1607"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1612"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1616"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1617"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="1618"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1619"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1620"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="1621"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1622"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="1623"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="1624"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="1625"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626" refid="structTTL__import__double__const__ushort__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1628" refid="structTTL__import__double__const__ushort__tensor__buffering__t_1afcdf5f7666c98d624bdecd26dab74843" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1afcdf5f7666c98d624bdecd26dab74843" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="1629"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630" refid="structTTL__import__double__const__ushort__tensor__buffering__t_1aa145f54653bf8545cb10561d1191f507" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*<ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1aa145f54653bf8545cb10561d1191f507" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631" refid="structTTL__import__double__const__ushort__tensor__buffering__t_1af7e59558e0b1f8d309f5f10057df990b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__ushort__tensor__t" kindref="compound">TTL_const_ext_ushort_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1af7e59558e0b1f8d309f5f10057df990b" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1632" refid="structTTL__import__double__const__ushort__tensor__buffering__t_1a72e9c33202f0123c965db84e22423fde" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__ushort__tensor__t" kindref="compound">TTL_const_ext_ushort_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1a72e9c33202f0123c965db84e22423fde" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633" refid="structTTL__import__double__const__ushort__tensor__buffering__t_1ae71df4e0676c060ec9297c2873a92498" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634" refid="structTTL__import__double__const__ushort__tensor__buffering__t_1a96e61be172f0033046ab69437c875c00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1a96e61be172f0033046ab69437c875c00" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635" refid="structTTL__import__double__const__ushort__tensor__buffering__t_1a2ea265571c422655cfbd0aad29620a6d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1a2ea265571c422655cfbd0aad29620a6d" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal">}<sp/><ref refid="structTTL__import__double__const__ushort__tensor__buffering__t" kindref="compound">TTL_import_double_const_ushort_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1638"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1639"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_import_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="1640"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1641"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="1642"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="1643"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1644"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>(external<sp/>to</highlight></codeline>
<codeline lineno="1645"><highlight class="comment"><sp/>*<sp/>internal)<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="1646"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="1647"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1648"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_import_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1649"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1650"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="1651"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="1652"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="1653"><highlight class="comment"><sp/>*<sp/>TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline lineno="1654"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
<codeline lineno="1655"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="1656"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="1657"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1658"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="1659"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="1660"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1661"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1662"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1663"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1664"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1665"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1666"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1667"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1668"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1669"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__ushort__tensor__buffering__t" kindref="compound">TTL_import_double_const_ushort_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*int_base2,</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__ushort__tensor__t" kindref="compound">TTL_const_ext_ushort_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile);</highlight></codeline>
<codeline lineno="1673" refid="TTL__double__scheme__template_8h_1a2eecaecb941743f4bdbec5fbd2e80c50" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__ushort__tensor__buffering__t" kindref="compound">TTL_import_double_const_ushort_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__ushort__tensor__buffering__t" kindref="compound">TTL_import_double_const_ushort_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1677" refid="TTL__double__scheme__template_8h_1a7f344591e59e6fadd08f7e1d4d372cb3" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*int_base2,</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__ushort__tensor__t" kindref="compound">TTL_const_ext_ushort_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__ushort__tensor__buffering__t" kindref="compound">TTL_import_double_const_ushort_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1ae71df4e0676c060ec9297c2873a92498" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1aa145f54653bf8545cb10561d1191f507" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1ae71df4e0676c060ec9297c2873a92498" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1aa145f54653bf8545cb10561d1191f507" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1ae71df4e0676c060ec9297c2873a92498" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1af7e59558e0b1f8d309f5f10057df990b" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1a96e61be172f0033046ab69437c875c00" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1ae71df4e0676c060ec9297c2873a92498" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1afcdf5f7666c98d624bdecd26dab74843" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__ushort__tensor__buffering__t_1a2ea265571c422655cfbd0aad29620a6d" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1699"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="1700"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1701"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="1702"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1703"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="1704"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1705"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="1706"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1707"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="1708"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1709"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="1710"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="1711"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="1712"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="1713"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1714"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1717"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1718"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="1719"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1720"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="1721"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="1722"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1723"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="1724"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="1725"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1726"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="1727"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="1728"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1729"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1730"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1731"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1732"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1733"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1734"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="1735"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="1736"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1737"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="1738"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1747"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1748"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="1749"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1750"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1751"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="1752"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1753"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="1754"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="1755"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="1756"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757" refid="structTTL__export__double__const__ushort__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1759" refid="structTTL__export__double__const__ushort__tensor__buffering__t_1ae158d4fa9bd39b74aef01641b30a467f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1ae158d4fa9bd39b74aef01641b30a467f" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="1760"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761" refid="structTTL__export__double__const__ushort__tensor__buffering__t_1ac64f8e25ecdee3beb1b4fd4c6c1c0afa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*<ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1ac64f8e25ecdee3beb1b4fd4c6c1c0afa" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762" refid="structTTL__export__double__const__ushort__tensor__buffering__t_1a14b2dec97c2861615667a75295a180ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1a14b2dec97c2861615667a75295a180ff" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1763" refid="structTTL__export__double__const__ushort__tensor__buffering__t_1aab4b3a8178d6cd2b540eabba9b556991" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1aab4b3a8178d6cd2b540eabba9b556991" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1764" refid="structTTL__export__double__const__ushort__tensor__buffering__t_1afc394850ee2603fc47c921a05c9e399e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1765" refid="structTTL__export__double__const__ushort__tensor__buffering__t_1aded957f2b6a617646e75757c2dbdd44c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1aded957f2b6a617646e75757c2dbdd44c" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766" refid="structTTL__export__double__const__ushort__tensor__buffering__t_1ac2c9027d9fa37b58dc1560dfbf11cf55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1ac2c9027d9fa37b58dc1560dfbf11cf55" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal">}<sp/><ref refid="structTTL__export__double__const__ushort__tensor__buffering__t" kindref="compound">TTL_export_double_const_ushort_tensor_buffering_t</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1768"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1769"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_export_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="1770"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1771"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="1772"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="1773"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/><sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1774"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>and<sp/>outward</highlight></codeline>
<codeline lineno="1775"><highlight class="comment"><sp/>*<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="1776"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1777"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>single<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="1778"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1779"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_export_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1780"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1781"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="1782"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="1783"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="1784"><highlight class="comment"><sp/>*<sp/>TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline lineno="1785"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
<codeline lineno="1786"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="1787"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="1788"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1789"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="1790"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="1791"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1792"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1793"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1794"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1795"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1796"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1797"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1798"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1799"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1800"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__ushort__tensor__buffering__t" kindref="compound">TTL_export_double_const_ushort_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*int_base2,</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event);</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight></codeline>
<codeline lineno="1805" refid="TTL__double__scheme__template_8h_1aaf5c21982e2da3dae7e775c15a9cf1d7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__ushort__tensor__buffering__t" kindref="compound">TTL_export_double_const_ushort_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__ushort__tensor__buffering__t" kindref="compound">TTL_export_double_const_ushort_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1809" refid="TTL__double__scheme__template_8h_1ae61226199173b82cad5236dbc26dd760" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*int_base2,</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__ushort__tensor__buffering__t" kindref="compound">TTL_export_double_const_ushort_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1afc394850ee2603fc47c921a05c9e399e" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1ac64f8e25ecdee3beb1b4fd4c6c1c0afa" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1afc394850ee2603fc47c921a05c9e399e" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1ac64f8e25ecdee3beb1b4fd4c6c1c0afa" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1afc394850ee2603fc47c921a05c9e399e" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1a14b2dec97c2861615667a75295a180ff" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1aded957f2b6a617646e75757c2dbdd44c" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1afc394850ee2603fc47c921a05c9e399e" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1ae158d4fa9bd39b74aef01641b30a467f" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__ushort__tensor__buffering__t_1ac2c9027d9fa37b58dc1560dfbf11cf55" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1823"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1829"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="1830"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1831"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="1832"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1833"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="1834"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1835"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="1836"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1837"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="1838"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1839"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="1840"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="1841"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="1842"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="1843"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1844"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1847"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1848"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="1849"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1850"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="1851"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="1852"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1853"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="1854"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="1855"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1856"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="1857"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="1858"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1859"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1860"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1861"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1862"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1863"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1864"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="1865"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="1866"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1867"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="1868"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1877"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1878"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="1879"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1880"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1881"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="1882"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1883"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="1884"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="1885"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="1886"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887" refid="structTTL__import__double__const__long__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1889" refid="structTTL__import__double__const__long__tensor__buffering__t_1a11a0df7a39a7ff440e7ba156419a6316" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a11a0df7a39a7ff440e7ba156419a6316" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="1890"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891" refid="structTTL__import__double__const__long__tensor__buffering__t_1a162b26b6289680454459e9bee4c24ca0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a162b26b6289680454459e9bee4c24ca0" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1892" refid="structTTL__import__double__const__long__tensor__buffering__t_1a68b59a0f4a8056add889f81eced1f479" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__long__tensor__t" kindref="compound">TTL_const_ext_long_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a68b59a0f4a8056add889f81eced1f479" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1893" refid="structTTL__import__double__const__long__tensor__buffering__t_1a835537dd8d4c84835ffaea23e15b2228" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__long__tensor__t" kindref="compound">TTL_const_ext_long_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a835537dd8d4c84835ffaea23e15b2228" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894" refid="structTTL__import__double__const__long__tensor__buffering__t_1a98e19a01e0866f8b7cfc4dd98cd5967d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895" refid="structTTL__import__double__const__long__tensor__buffering__t_1a7d1317d4d85c670363fd648e104430b0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a7d1317d4d85c670363fd648e104430b0" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1896" refid="structTTL__import__double__const__long__tensor__buffering__t_1a10887371d5bc33b0fd84c5af2d1604fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a10887371d5bc33b0fd84c5af2d1604fa" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal">}<sp/><ref refid="structTTL__import__double__const__long__tensor__buffering__t" kindref="compound">TTL_import_double_const_long_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1899"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1900"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_import_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="1901"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1902"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="1903"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="1904"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1905"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>(external<sp/>to</highlight></codeline>
<codeline lineno="1906"><highlight class="comment"><sp/>*<sp/>internal)<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="1907"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="1908"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1909"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_import_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1910"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1911"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="1912"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="1913"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="1914"><highlight class="comment"><sp/>*<sp/>TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline lineno="1915"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
<codeline lineno="1916"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="1917"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="1918"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1919"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="1920"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="1921"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1922"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1923"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1924"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1925"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1926"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1927"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1928"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1929"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1930"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__long__tensor__buffering__t" kindref="compound">TTL_import_double_const_long_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*int_base2,</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__long__tensor__t" kindref="compound">TTL_const_ext_long_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile);</highlight></codeline>
<codeline lineno="1934" refid="TTL__double__scheme__template_8h_1aa834618125b4f74942dc0a5767bf3d2f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__long__tensor__buffering__t" kindref="compound">TTL_import_double_const_long_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__long__tensor__buffering__t" kindref="compound">TTL_import_double_const_long_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="1938" refid="TTL__double__scheme__template_8h_1a7ec669a8ea12fea03bd77955b516f258" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*int_base2,</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__long__tensor__t" kindref="compound">TTL_const_ext_long_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__long__tensor__buffering__t" kindref="compound">TTL_import_double_const_long_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a98e19a01e0866f8b7cfc4dd98cd5967d" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a162b26b6289680454459e9bee4c24ca0" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a98e19a01e0866f8b7cfc4dd98cd5967d" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a162b26b6289680454459e9bee4c24ca0" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a98e19a01e0866f8b7cfc4dd98cd5967d" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a68b59a0f4a8056add889f81eced1f479" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a7d1317d4d85c670363fd648e104430b0" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a98e19a01e0866f8b7cfc4dd98cd5967d" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a11a0df7a39a7ff440e7ba156419a6316" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__long__tensor__buffering__t_1a10887371d5bc33b0fd84c5af2d1604fa" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile);</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1960"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="1961"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1962"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="1963"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1964"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="1965"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1966"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="1967"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1968"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="1969"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1970"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="1971"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="1972"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="1973"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="1974"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1975"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1978"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1979"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="1980"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1981"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="1982"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="1983"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1984"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="1985"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="1986"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1987"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="1988"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="1989"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1990"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1991"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1992"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1993"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1994"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1995"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="1996"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="1997"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1998"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="1999"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2008"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2009"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="2010"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2011"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2012"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="2013"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2014"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="2015"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="2016"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="2017"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2018" refid="structTTL__export__double__const__long__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2020" refid="structTTL__export__double__const__long__tensor__buffering__t_1a941d4df3fd525c1a2b5b1384121f57fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__long__tensor__buffering__t_1a941d4df3fd525c1a2b5b1384121f57fe" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="2021"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2022" refid="structTTL__export__double__const__long__tensor__buffering__t_1a97aefb5dbf2a2bd400be410746ea131d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__export__double__const__long__tensor__buffering__t_1a97aefb5dbf2a2bd400be410746ea131d" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023" refid="structTTL__export__double__const__long__tensor__buffering__t_1ae549dc741fe0844156facaeca17bde9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__long__tensor__buffering__t_1ae549dc741fe0844156facaeca17bde9c" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024" refid="structTTL__export__double__const__long__tensor__buffering__t_1ac726caaaaba53ee5f07fe2e8a1cf7ad5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__long__tensor__buffering__t_1ac726caaaaba53ee5f07fe2e8a1cf7ad5" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025" refid="structTTL__export__double__const__long__tensor__buffering__t_1a76291d40de2ce34fc2a7f05291db1af7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026" refid="structTTL__export__double__const__long__tensor__buffering__t_1ae3cc7a9481c2f053e52c230fcf5aaa61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__export__double__const__long__tensor__buffering__t_1ae3cc7a9481c2f053e52c230fcf5aaa61" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027" refid="structTTL__export__double__const__long__tensor__buffering__t_1ac645d8b2d4e22c51fc8f91b0ea6fa824" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__export__double__const__long__tensor__buffering__t_1ac645d8b2d4e22c51fc8f91b0ea6fa824" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal">}<sp/><ref refid="structTTL__export__double__const__long__tensor__buffering__t" kindref="compound">TTL_export_double_const_long_tensor_buffering_t</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2029"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2030"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_export_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="2031"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2032"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="2033"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="2034"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/><sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="2035"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>and<sp/>outward</highlight></codeline>
<codeline lineno="2036"><highlight class="comment"><sp/>*<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="2037"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2038"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>single<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="2039"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2040"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_export_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="2041"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2042"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="2043"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="2044"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="2045"><highlight class="comment"><sp/>*<sp/>TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline lineno="2046"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
<codeline lineno="2047"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="2048"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="2049"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2050"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="2051"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="2052"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2053"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="2054"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2055"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="2056"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2057"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2058"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="2059"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2060"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="2061"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__long__tensor__buffering__t" kindref="compound">TTL_export_double_const_long_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*int_base2,<sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event);</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"></highlight></codeline>
<codeline lineno="2066" refid="TTL__double__scheme__template_8h_1af3362fd10ae2b192e22cf26e30149ed4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__long__tensor__buffering__t" kindref="compound">TTL_export_double_const_long_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__long__tensor__buffering__t" kindref="compound">TTL_export_double_const_long_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="2070" refid="TTL__double__scheme__template_8h_1ab4572b1808c48468adaadd4024395303" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*int_base2,<sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__long__tensor__buffering__t" kindref="compound">TTL_export_double_const_long_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="2073"><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__long__tensor__buffering__t_1a76291d40de2ce34fc2a7f05291db1af7" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__long__tensor__buffering__t_1a97aefb5dbf2a2bd400be410746ea131d" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__long__tensor__buffering__t_1a76291d40de2ce34fc2a7f05291db1af7" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__long__tensor__buffering__t_1a97aefb5dbf2a2bd400be410746ea131d" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__long__tensor__buffering__t_1a76291d40de2ce34fc2a7f05291db1af7" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__long__tensor__buffering__t_1ae549dc741fe0844156facaeca17bde9c" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__long__tensor__buffering__t_1ae3cc7a9481c2f053e52c230fcf5aaa61" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__long__tensor__buffering__t_1a76291d40de2ce34fc2a7f05291db1af7" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__long__tensor__buffering__t_1a941d4df3fd525c1a2b5b1384121f57fe" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__long__tensor__buffering__t_1ac645d8b2d4e22c51fc8f91b0ea6fa824" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2084"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2090"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="2091"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2092"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="2093"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2094"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="2095"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="2096"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="2097"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2098"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="2099"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2100"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="2101"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="2102"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="2103"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="2104"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="2105"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2108"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2109"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="2110"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2111"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="2112"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="2113"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2114"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="2115"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="2116"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2117"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="2118"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="2119"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2120"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2121"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2122"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2123"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2124"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2125"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="2126"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="2127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2128"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="2129"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2138"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2139"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="2140"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2141"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2142"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="2143"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2144"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="2145"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="2146"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="2147"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148" refid="structTTL__import__double__const__ulong__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2150" refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a2c201bea1c63355833c0a5bae975b422" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a2c201bea1c63355833c0a5bae975b422" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="2151"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2152" refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a43c618fcaf0136024067ef4e6818c164" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*<ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a43c618fcaf0136024067ef4e6818c164" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153" refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a6e1de162762e8e10b6dd0dadea61b3e2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__ulong__tensor__t" kindref="compound">TTL_const_ext_ulong_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a6e1de162762e8e10b6dd0dadea61b3e2" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154" refid="structTTL__import__double__const__ulong__tensor__buffering__t_1ab7f0bdca82a31a07df5bdb7a608fceb9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__ulong__tensor__t" kindref="compound">TTL_const_ext_ulong_tensor_t</ref><sp/><ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1ab7f0bdca82a31a07df5bdb7a608fceb9" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2155" refid="structTTL__import__double__const__ulong__tensor__buffering__t_1ac85cb1d0c76c18639c987d98639d8180" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156" refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a67e6e3d33122d099111097a76866c132" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a67e6e3d33122d099111097a76866c132" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157" refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a1283baf45e22a90bb5ca82be54dbc737" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a1283baf45e22a90bb5ca82be54dbc737" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal">}<sp/><ref refid="structTTL__import__double__const__ulong__tensor__buffering__t" kindref="compound">TTL_import_double_const_ulong_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2160"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2161"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_import_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="2162"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2163"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="2164"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="2165"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="2166"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>(external<sp/>to</highlight></codeline>
<codeline lineno="2167"><highlight class="comment"><sp/>*<sp/>internal)<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="2168"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="2169"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2170"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_import_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="2171"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2172"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="2173"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="2174"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>import_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="2175"><highlight class="comment"><sp/>*<sp/>TTL_import_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_import_double_buffering(</highlight></codeline>
<codeline lineno="2176"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;import_DB_e);</highlight></codeline>
<codeline lineno="2177"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="2178"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="2179"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2180"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="2181"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="2182"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2183"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="2184"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2185"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="2186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2187"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2188"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="2189"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2190"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="2191"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__ulong__tensor__buffering__t" kindref="compound">TTL_import_double_const_ulong_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*int_base2,</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__ulong__tensor__t" kindref="compound">TTL_const_ext_ulong_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile);</highlight></codeline>
<codeline lineno="2195" refid="TTL__double__scheme__template_8h_1a0f5059aff1d4d3a6af57c70cadfb7c12" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__ulong__tensor__buffering__t" kindref="compound">TTL_import_double_const_ulong_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__import__double__const__ulong__tensor__buffering__t" kindref="compound">TTL_import_double_const_ulong_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="2199" refid="TTL__double__scheme__template_8h_1a5ac618a874f20b593bca2b76476cd033" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1af48346308548d7ee4fb27152a025edb3" kindref="member">TTL_start_import_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*int_base2,</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__ext__ulong__tensor__t" kindref="compound">TTL_const_ext_ulong_tensor_t</ref><sp/>ext_tensor,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__import__double__const__ulong__tensor__buffering__t" kindref="compound">TTL_import_double_const_ulong_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1ac85cb1d0c76c18639c987d98639d8180" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a43c618fcaf0136024067ef4e6818c164" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1ac85cb1d0c76c18639c987d98639d8180" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a43c618fcaf0136024067ef4e6818c164" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1ac85cb1d0c76c18639c987d98639d8180" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a6e1de162762e8e10b6dd0dadea61b3e2" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a67e6e3d33122d099111097a76866c132" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1ac85cb1d0c76c18639c987d98639d8180" kindref="member">common</ref>.<ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a2c201bea1c63355833c0a5bae975b422" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__import__double__const__ulong__tensor__buffering__t_1a1283baf45e22a90bb5ca82be54dbc737" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile);</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2221"><highlight class="comment"><sp/>*<sp/>TTL_double_scheme_template.h</highlight></codeline>
<codeline lineno="2222"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2223"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="2224"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2225"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="2226"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="2227"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="2228"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2229"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="2230"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2231"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="2232"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="2233"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="2234"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="2235"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="2236"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2239"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2240"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="2241"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2242"><highlight class="comment"><sp/>*<sp/>TTL_double_buffering<sp/>pipelines<sp/>a<sp/>duplex<sp/>import<sp/>or<sp/>export<sp/>transaction<sp/>using<sp/>two</highlight></codeline>
<codeline lineno="2243"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers.</highlight></codeline>
<codeline lineno="2244"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2245"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>double<sp/>buffering.</highlight></codeline>
<codeline lineno="2246"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="2247"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2248"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#-1<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#2<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-2)<sp/>|<sp/>\#NumOfTiles-1<sp/>|<sp/>\#NumOfTiles<sp/>|<sp/>\#NumOfTiles+1<sp/>|</highlight></codeline>
<codeline lineno="2249"><highlight class="comment"><sp/>*<sp/>|-------------------|------|-----|-----|-----|----------------------|----------------|--------------|----------------|</highlight></codeline>
<codeline lineno="2250"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2251"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>3<sp/><sp/><sp/>|<sp/>i+1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2252"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-3<sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2253"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-2<sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2254"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>2<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2255"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2256"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>prolog<sp/>(at<sp/>iteration<sp/>number<sp/>-1)<sp/>and<sp/>the<sp/>2<sp/>epilogs<sp/>(at<sp/>iterations</highlight></codeline>
<codeline lineno="2257"><highlight class="comment"><sp/>*<sp/>number<sp/>NumOfTiles<sp/>and<sp/>NumOfTiles+1)<sp/>which<sp/>add<sp/>in<sp/>total<sp/>3<sp/>extra<sp/>iterations.</highlight></codeline>
<codeline lineno="2258"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2259"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_double_buffering.cl</highlight></codeline>
<codeline lineno="2260"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2269"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2270"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="2271"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2272"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2273"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>double<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="2274"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2275"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_import_double_buffering<sp/>and</highlight></codeline>
<codeline lineno="2276"><highlight class="comment"><sp/>*<sp/>TTL_start_export_double_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>double<sp/>buffer</highlight></codeline>
<codeline lineno="2277"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="2278"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2279" refid="structTTL__export__double__const__ulong__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2281" refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a9c744742caa4ef0594461d3d1fb98c6b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a9c744742caa4ef0594461d3d1fb98c6b" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="2282"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283" refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a1080a94f9b6b2148fc0f6e6fdf2073e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*<ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a1080a94f9b6b2148fc0f6e6fdf2073e0" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284" refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a8747b473f193edc47679c481f22655ce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a8747b473f193edc47679c481f22655ce" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2285" refid="structTTL__export__double__const__ulong__tensor__buffering__t_1ac25bd697954d920434b228595030840a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/><ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1ac25bd697954d920434b228595030840a" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2286" refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a2df343bea9a8fee44cfcc270c2a0fc9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287" refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a5ff7bf6a5ef8c390be6615f78fbafd64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*<ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a5ff7bf6a5ef8c390be6615f78fbafd64" kindref="member">event</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>that<sp/>is<sp/>used<sp/>to<sp/>track<sp/>the<sp/>progress<sp/>of<sp/>the<sp/>transfer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2288" refid="structTTL__export__double__const__ulong__tensor__buffering__t_1aa56479bae8ae22787f099a3de77140bf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/><ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1aa56479bae8ae22787f099a3de77140bf" kindref="member">prev_tile</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>Store<sp/>of<sp/>the<sp/>previous<sp/>imported/exported<sp/>tile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal">}<sp/><ref refid="structTTL__export__double__const__ulong__tensor__buffering__t" kindref="compound">TTL_export_double_const_ulong_tensor_buffering_t</ref>;</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2290"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2291"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_export_double_buffering_t<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="2292"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2293"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base1<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>1st<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="2294"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base2<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>2nd<sp/>local<sp/>buffer</highlight></codeline>
<codeline lineno="2295"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor<sp/><sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="2296"><highlight class="comment"><sp/>*<sp/>@param<sp/>event<sp/>A<sp/>pointer<sp/>to<sp/>the<sp/>event<sp/>to<sp/>use<sp/>for<sp/>the<sp/>inward<sp/>and<sp/>outward</highlight></codeline>
<codeline lineno="2297"><highlight class="comment"><sp/>*<sp/>transfer<sp/>completion</highlight></codeline>
<codeline lineno="2298"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2299"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>single<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="2300"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2301"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_export_double_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="2302"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2303"><highlight class="comment"><sp/>*<sp/>Example:</highlight></codeline>
<codeline lineno="2304"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="2305"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>export_DB_e<sp/>=<sp/>TTL_get_event();</highlight></codeline>
<codeline lineno="2306"><highlight class="comment"><sp/>*<sp/>TTL_export_double_buffering_t<sp/>import_db<sp/>=<sp/>TTL_start_export_double_buffering(</highlight></codeline>
<codeline lineno="2307"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>l_in1,<sp/>l_in2,<sp/>ext_base_in,<sp/>ext_layout_in,<sp/>&amp;export_DB_e);</highlight></codeline>
<codeline lineno="2308"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="2309"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="2310"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2311"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="2312"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="2313"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2314"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="2315"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2316"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="2317"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2318"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2319"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="2320"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2321"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="2322"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__ulong__tensor__buffering__t" kindref="compound">TTL_export_double_const_ulong_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*int_base2,<sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event);</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"></highlight></codeline>
<codeline lineno="2327" refid="TTL__double__scheme__template_8h_1ad55c8d104cd28d259af694f08996be46" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__double__scheme__template_8h_1a20ce9f4cbe6ee89375bd60110506047f" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__ulong__tensor__buffering__t" kindref="compound">TTL_export_double_const_ulong_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>db,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>next_tile);</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__export__double__const__ulong__tensor__buffering__t" kindref="compound">TTL_export_double_const_ulong_tensor_buffering_t</ref><sp/>__attribute__((overloadable))</highlight></codeline>
<codeline lineno="2331" refid="TTL__double__scheme__template_8h_1a4be00ac72a419289d3fd91200a2d46be" refkind="member"><highlight class="normal"><ref refid="TTL__double__scheme__template_8h_1a4e2b9ab90fb92e2c6e8765ee9474de56" kindref="member">TTL_start_export_double_buffering</ref>(<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*int_base1,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*int_base2,<sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/>ext_tensor,</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__export__double__const__ulong__tensor__buffering__t" kindref="compound">TTL_export_double_const_ulong_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a2df343bea9a8fee44cfcc270c2a0fc9a" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a1080a94f9b6b2148fc0f6e6fdf2073e0" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base1;</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a2df343bea9a8fee44cfcc270c2a0fc9a" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a1080a94f9b6b2148fc0f6e6fdf2073e0" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base2;</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a2df343bea9a8fee44cfcc270c2a0fc9a" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a8747b473f193edc47679c481f22655ce" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a5ff7bf6a5ef8c390be6615f78fbafd64" kindref="member">event</ref><sp/>=<sp/>event;</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a2df343bea9a8fee44cfcc270c2a0fc9a" kindref="member">common</ref>.<ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1a9c744742caa4ef0594461d3d1fb98c6b" kindref="member">index</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__export__double__const__ulong__tensor__buffering__t_1aa56479bae8ae22787f099a3de77140bf" kindref="member">prev_tile</ref><sp/>=<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>();</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clear<sp/>up<sp/>the<sp/>mess<sp/>we<sp/>made!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"></highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#undef<sp/>TTL_EXT_TENSOR_TYPE</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="v7F17Om_TTL/pipelines/TTL_double_scheme_template.h"/>
  </compounddef>
</doxygen>
