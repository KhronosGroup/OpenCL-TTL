<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="TTL__tensors__common_8h" kind="file" language="C++">
    <compoundname>TTL_tensors_common.h</compoundname>
    <innerclass refid="structTTL__layout__t" prot="public">TTL_layout_t</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="TTL__tensors__common_8h_1a631ec76c3a069194d724aae98337fbe5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref></type>
        <definition>static TTL_layout_t TTL_create_layout</definition>
        <argsstring>(const TTL_dim_t row_spacing, const TTL_dim_t plane_spacing)</argsstring>
        <name>TTL_create_layout</name>
        <param>
          <type>const <ref refid="opencl_2TTL__types_8h_1ac23a033f2d901aaa292396a1af7b401d" kindref="member">TTL_dim_t</ref></type>
          <declname>row_spacing</declname>
        </param>
        <param>
          <type>const <ref refid="opencl_2TTL__types_8h_1ac23a033f2d901aaa292396a1af7b401d" kindref="member">TTL_dim_t</ref></type>
          <declname>plane_spacing</declname>
        </param>
        <briefdescription>
<para>Create a 3D Description of a Tensor layout in memory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref> for more information.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row_spacing;</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance between the start of consequtive rows in units of elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>plane_spacing;</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance between the start of consequtive planes in units of elements.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref> describing in 3D the layout requested. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensors_common.h" line="65" column="30" bodyfile="v7F17Om_TTL/tensors/TTL_tensors_common.h" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensors__common_8h_1a9889e5e72c5aa9934508163103fd13be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref></type>
        <definition>static TTL_layout_t TTL_create_layout</definition>
        <argsstring>(const TTL_dim_t row_spacing)</argsstring>
        <name>TTL_create_layout</name>
        <param>
          <type>const <ref refid="opencl_2TTL__types_8h_1ac23a033f2d901aaa292396a1af7b401d" kindref="member">TTL_dim_t</ref></type>
          <declname>row_spacing</declname>
        </param>
        <briefdescription>
<para>Create a 2D Description of a Tensor layout in memory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref> for more information.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>row_spacing</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance between the start of consequtive rows in units of elements.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The plane spacing is set to 0 - as no planes exist to be spaced.</para>
<para><simplesect kind="return"><para>A <ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref> describing in 3D the layout requested. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensors_common.h" line="82" column="30" bodyfile="v7F17Om_TTL/tensors/TTL_tensors_common.h" bodystart="82" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref></type>
        <definition>static TTL_layout_t TTL_create_layout</definition>
        <argsstring>(void)</argsstring>
        <name>TTL_create_layout</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Create a 1D Description of a Tensor layout in memory. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref> for more information.</para>
</simplesect>
The row spacing is set to 0 - as no rows exist to be spaced. The plane spacing is set to 0 - as no planes exist to be spaced.</para>
<para><simplesect kind="return"><para>A <ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref> describing in 3D the layout requested. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensors_common.h" line="96" column="30" bodyfile="v7F17Om_TTL/tensors/TTL_tensors_common.h" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensors__common_8h_1ab2c1c1870130aa7c22a0c05f60b5107c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="opencl_2TTL__types_8h_1ae7914fc6449e057de2f5e6716fc6cf93" kindref="member">TTL_offset_dim_t</ref></type>
        <definition>static TTL_offset_dim_t TTL_linearize</definition>
        <argsstring>(const TTL_offset_t offset, const TTL_layout_t layout)</argsstring>
        <name>TTL_linearize</name>
        <param>
          <type>const <ref refid="structTTL__offset__t" kindref="compound">TTL_offset_t</ref></type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const <ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref></type>
          <declname>layout</declname>
        </param>
        <briefdescription>
<para>Calculate the absolute linear offset in elements, based on a given tensor offset and layout. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The 3D offset of the required linear offset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>layout</parametername>
</parameternamelist>
<parameterdescription>
<para>The layout of the offset being calculated</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The offset in linear address space of the 3D offset </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensors_common.h" line="109" column="32" bodyfile="v7F17Om_TTL/tensors/TTL_tensors_common.h" bodystart="109" bodyend="111"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************************************************</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Allow<sp/>for<sp/>sizeof<sp/>anything<sp/>-<sp/>deals<sp/>with<sp/>sizeof(void)</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>@def<sp/>TTL_SIZEOF</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>@brief<sp/>opencl<sp/>doesn&apos;t<sp/>like<sp/>sizeof(void)<sp/>so<sp/>for<sp/>it<sp/>to<sp/>be<sp/>1<sp/>like<sp/>normal<sp/>c</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>OpenCl<sp/>will<sp/>produce<sp/>error:<sp/>invalid<sp/>application<sp/>of<sp/>&apos;sizeof&apos;<sp/>to<sp/>a<sp/>void<sp/>type</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>This<sp/>will<sp/>need<sp/>to<sp/>be<sp/>expanded<sp/>with<sp/>more<sp/>types<sp/>-<sp/>or<sp/>a<sp/>different<sp/>language<sp/>used!</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************************************************</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>Define<sp/>Layout</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>***********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="37"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Description<sp/>of<sp/>a<sp/>Tensor<sp/>layout<sp/>in<sp/>memory</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>Each<sp/>logical<sp/>tensor<sp/>is<sp/>embedded<sp/>in<sp/>both<sp/>global<sp/>and<sp/>local<sp/>memories<sp/>within<sp/>some</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>enclosing<sp/>physical<sp/>tensors.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>This<sp/>embedding<sp/>is<sp/>referred<sp/>to<sp/>as<sp/>&apos;layout&apos;,<sp/>which<sp/>specifies<sp/>the<sp/>actual<sp/>distance<sp/>in<sp/>elements</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>between<sp/>the<sp/>start<sp/>of<sp/>consecutive<sp/>data<sp/>elements<sp/>in<sp/>each<sp/>dimension.</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>For<sp/>the<sp/>first<sp/>axis<sp/>the<sp/>distance<sp/>is<sp/>always<sp/>1<sp/>element<sp/>and<sp/>and<sp/>so<sp/>this<sp/>value<sp/>is<sp/>not<sp/>stored.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>line_length<sp/>and<sp/>plane_area<sp/>in<sp/>memory,<sp/>in<sp/>units<sp/>of<sp/>an<sp/>element.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structTTL__layout__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="51" refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__types_8h_1ac23a033f2d901aaa292396a1af7b401d" kindref="member">TTL_dim_t</ref><sp/><ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>distance<sp/>between<sp/>the<sp/>start<sp/>of<sp/>consequtive<sp/>rows<sp/>in<sp/>units<sp/>of<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__types_8h_1ac23a033f2d901aaa292396a1af7b401d" kindref="member">TTL_dim_t</ref><sp/><ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref>;<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>distance<sp/>between<sp/>the<sp/>start<sp/>of<sp/>consequtive<sp/>planes<sp/>in<sp/>units<sp/>of<sp/>elements.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">}<sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="55"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>3D<sp/>Description<sp/>of<sp/>a<sp/>Tensor<sp/>layout<sp/>in<sp/>memory</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_layout_t<sp/>for<sp/>more<sp/>information.</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>@param<sp/>row_spacing;<sp/><sp/><sp/>The<sp/>distance<sp/>between<sp/>the<sp/>start<sp/>of<sp/>consequtive<sp/>rows<sp/>in<sp/>units<sp/>of<sp/>elements.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>@param<sp/>plane_spacing;<sp/><sp/><sp/>The<sp/>distance<sp/>between<sp/>the<sp/>start<sp/>of<sp/>consequtive<sp/>planes<sp/>in<sp/>units<sp/>of<sp/>elements.</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>TTL_layout_t<sp/>describing<sp/>in<sp/>3D<sp/>the<sp/>layout<sp/>requested.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="TTL__tensors__common_8h_1a631ec76c3a069194d724aae98337fbe5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__types_8h_1ac23a033f2d901aaa292396a1af7b401d" kindref="member">TTL_dim_t</ref><sp/>row_spacing,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__types_8h_1ac23a033f2d901aaa292396a1af7b401d" kindref="member">TTL_dim_t</ref><sp/>plane_spacing)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>res<sp/>=<sp/>{<sp/>row_spacing,<sp/>plane_spacing<sp/>};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="69"><highlight class="normal">}</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="71"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>2D<sp/>Description<sp/>of<sp/>a<sp/>Tensor<sp/>layout<sp/>in<sp/>memory</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_layout_t<sp/>for<sp/>more<sp/>information.</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>@param<sp/>row_spacing<sp/>The<sp/>distance<sp/>between<sp/>the<sp/>start<sp/>of<sp/>consequtive<sp/>rows<sp/>in<sp/>units<sp/>of<sp/>elements.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>The<sp/>plane<sp/>spacing<sp/>is<sp/>set<sp/>to<sp/>0<sp/>-<sp/>as<sp/>no<sp/>planes<sp/>exist<sp/>to<sp/>be<sp/>spaced.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>TTL_layout_t<sp/>describing<sp/>in<sp/>3D<sp/>the<sp/>layout<sp/>requested.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="TTL__tensors__common_8h_1a9889e5e72c5aa9934508163103fd13be" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__types_8h_1ac23a033f2d901aaa292396a1af7b401d" kindref="member">TTL_dim_t</ref><sp/>row_spacing)<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(row_spacing,<sp/>0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="86"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>1D<sp/>Description<sp/>of<sp/>a<sp/>Tensor<sp/>layout<sp/>in<sp/>memory</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_layout_t<sp/>for<sp/>more<sp/>information.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>The<sp/>row<sp/>spacing<sp/>is<sp/>set<sp/>to<sp/>0<sp/>-<sp/>as<sp/>no<sp/>rows<sp/>exist<sp/>to<sp/>be<sp/>spaced.</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>The<sp/>plane<sp/>spacing<sp/>is<sp/>set<sp/>to<sp/>0<sp/>-<sp/>as<sp/>no<sp/>planes<sp/>exist<sp/>to<sp/>be<sp/>spaced.</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>**</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>@return<sp/>A<sp/>TTL_layout_t<sp/>describing<sp/>in<sp/>3D<sp/>the<sp/>layout<sp/>requested.</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(0,<sp/>0);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Calculate<sp/>the<sp/>absolute<sp/>linear<sp/>offset<sp/>in<sp/>elements,<sp/>based<sp/>on<sp/>a<sp/>given</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>tensor<sp/>offset<sp/>and<sp/>layout</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>@param<sp/>offset<sp/>The<sp/>3D<sp/>offset<sp/>of<sp/>the<sp/>required<sp/>linear<sp/>offset.</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>@param<sp/>layout<sp/>The<sp/>layout<sp/>of<sp/>the<sp/>offset<sp/>being<sp/>calculated</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>offset<sp/>in<sp/>linear<sp/>address<sp/>space<sp/>of<sp/>the<sp/>3D<sp/>offset</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="TTL__tensors__common_8h_1ab2c1c1870130aa7c22a0c05f60b5107c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="opencl_2TTL__types_8h_1ae7914fc6449e057de2f5e6716fc6cf93" kindref="member">TTL_offset_dim_t</ref><sp/><ref refid="TTL__tensors__common_8h_1ab2c1c1870130aa7c22a0c05f60b5107c" kindref="member">TTL_linearize</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__offset__t" kindref="compound">TTL_offset_t</ref><sp/>offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>layout)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((offset.<ref refid="structTTL__offset__t_1a9966699158adc499f07c4499c972cc75" kindref="member">z</ref><sp/>*<sp/>layout.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref>)<sp/>+<sp/>(offset.<ref refid="structTTL__offset__t_1aae0c2bbb96222eb5e580367dc2f2b12c" kindref="member">y</ref><sp/>*<sp/>layout.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref>)<sp/>+<sp/>offset.<ref refid="structTTL__offset__t_1abe9df04b12aa2c98c76241d6b74dbc22" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************************************************</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>Structure<sp/>of<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>***********************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>@def<sp/>__TTL_typedef_tensor_t</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>@brief<sp/>A<sp/>poor<sp/>mans<sp/>base<sp/>class<sp/>for<sp/>an<sp/>a<sp/>tensor<sp/>in<sp/>the<sp/>passed<sp/>address<sp/>space</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>TTL_int_tensor_base_t<sp/>contains<sp/>both<sp/>the<sp/>logical<sp/>dimensions<sp/>of<sp/>a<sp/>tile<sp/>as<sp/>well<sp/>as</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>its<sp/>physical<sp/>mapping<sp/>to<sp/>memory.</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>@param<sp/>TTL_scope<sp/>The<sp/>scope<sp/>of<sp/>the<sp/>creation<sp/>can<sp/>be<sp/>TTL_global<sp/>or<sp/>TTL_local</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_1<sp/>The<sp/>const<sp/>name<sp/>to<sp/>place<sp/>after<sp/>the<sp/>prefix<sp/>-<sp/>should<sp/>be<sp/>empty<sp/>or<sp/>const_</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>@param<sp/>location<sp/>The<sp/>location<sp/>of<sp/>the<sp/>tensor<sp/>-<sp/>should<sp/>be<sp/>ext<sp/>or<sp/>int</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>@param<sp/>type<sp/>The<sp/>type<sp/>of<sp/>the<sp/>tensor<sp/>-<sp/>should<sp/>be<sp/>any<sp/>valid<sp/>c<sp/>type</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_2<sp/>The<sp/>const<sp/>type<sp/>to<sp/>create<sp/>-<sp/>should<sp/>be<sp/>empty<sp/>or<sp/>const</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>@def<sp/>__TTL_typedef_sub_tensor_t</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>@brief<sp/>A<sp/>tensor<sp/>plus<sp/>its<sp/>reference<sp/>to<sp/>its<sp/>parent<sp/>tensor</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>__TTL_sub_tensor_t<sp/>contains<sp/>both<sp/>the<sp/>logical<sp/>dimensions<sp/>of<sp/>a<sp/>tile<sp/>as<sp/>well<sp/>as</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>its<sp/>physical<sp/>mapping<sp/>to<sp/>memory.</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>@param<sp/>TTL_scope<sp/>The<sp/>scope<sp/>of<sp/>the<sp/>creation<sp/>can<sp/>be<sp/>TTL_global<sp/>or<sp/>TTL_local</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_1<sp/>The<sp/>const<sp/>name<sp/>to<sp/>place<sp/>after<sp/>the<sp/>prefix<sp/>-<sp/>should<sp/>be<sp/>empty<sp/>or<sp/>const_</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>@param<sp/>location<sp/>The<sp/>location<sp/>of<sp/>the<sp/>tensor<sp/>-<sp/>should<sp/>be<sp/>ext<sp/>or<sp/>int</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>@param<sp/>type<sp/>The<sp/>type<sp/>of<sp/>the<sp/>tensor<sp/>-<sp/>should<sp/>be<sp/>any<sp/>valid<sp/>c<sp/>type</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_2<sp/>The<sp/>const<sp/>type<sp/>to<sp/>create<sp/>-<sp/>should<sp/>be<sp/>empty<sp/>or<sp/>const</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************************************************</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>Creation<sp/>of<sp/>tensors</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="149"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>TTL_create_int_tensor</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_create_int_tensor<sp/>for<sp/>full<sp/>API<sp/>and<sp/>parameter<sp/>information</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>@param<sp/>TTL_scope<sp/>The<sp/>scope<sp/>of<sp/>the<sp/>creation<sp/>can<sp/>be<sp/>TTL_global<sp/>or<sp/>TTL_local</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_1<sp/>The<sp/>const<sp/>name<sp/>to<sp/>place<sp/>after<sp/>the<sp/>prefix<sp/>-<sp/>should<sp/>be<sp/>empty<sp/>or<sp/>const_</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>@param<sp/>location<sp/>The<sp/>location<sp/>of<sp/>the<sp/>tensor<sp/>-<sp/>should<sp/>be<sp/>ext<sp/>or<sp/>int</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>@param<sp/>type<sp/>The<sp/>type<sp/>of<sp/>the<sp/>tensor<sp/>-<sp/>should<sp/>be<sp/>any<sp/>valid<sp/>c<sp/>type</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>@param<sp/>const_2<sp/>The<sp/>const<sp/>type<sp/>to<sp/>create<sp/>-<sp/>should<sp/>be<sp/>empty<sp/>or<sp/>const</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="160"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Implementation<sp/>of<sp/>TTL_create_int_sub_tensor</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_create_int_sub_tensor<sp/>for<sp/>full<sp/>API<sp/>and<sp/>parameter<sp/>information</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">/************************************************************************************************************</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>Create<sp/>the<sp/>create<sp/>tensor<sp/>functions<sp/>for<sp/>different<sp/>overloads</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>************************************************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="v7F17Om_TTL/tensors/TTL_tensors_common.h"/>
  </compounddef>
</doxygen>
