<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="TTL__tensor__rw_8h" kind="file" language="C++">
    <compoundname>TTL_tensor_rw.h</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>static char TTL_read_tensor</definition>
        <argsstring>(const TTL_int_char_tensor_t tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="31" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="31" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a57e175fc1eda6bfb9839079546914aeb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>static char TTL_read_tensor</definition>
        <argsstring>(const TTL_int_char_tensor_t tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="37" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a05ebd2bc6a4716d74c702f48a3f476ee" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>static char TTL_read_tensor</definition>
        <argsstring>(const TTL_int_char_tensor_t tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="42" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ab73deeb3d410ccb83d599920b217f790" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>static char TTL_read_tensor</definition>
        <argsstring>(const TTL_int_char_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_sub_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="59" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="59" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1aaefd8a97324aa7845ee3b6022fd3e282" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>static char TTL_read_tensor</definition>
        <argsstring>(const TTL_int_char_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="65" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1af3b20dade8c24043644134ee8c8a6dfe" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>char</type>
        <definition>static char TTL_read_tensor</definition>
        <argsstring>(const TTL_int_char_sub_tensor_t sub_tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="70" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="70" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_char_tensor_t tensor, const char value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="84" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="84" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ab81c3b08c9f33d52eb372af8b9688581" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_char_tensor_t tensor, const char value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="90" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ab07e0fe0f4cabe5cc35cb97769a782a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_char_tensor_t tensor, const char value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="95" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="95" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a8d69d13118f961da812d5e632934837e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_char_sub_tensor_t sub_tensor, const char value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="109" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a1715fcdbeb861a873a2d0f45065e95cc" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_char_sub_tensor_t sub_tensor, const char value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="115" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="115" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a8c55048c1facb9566eb5086cb7897eac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_char_sub_tensor_t sub_tensor, const char value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const char</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="121" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a38ea3a7cf8a1591f81d48cc871525a8d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>static uchar TTL_read_tensor</definition>
        <argsstring>(const TTL_int_uchar_tensor_t tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="155" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a9c95945612cf6271cd7ff026c96d7ece" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>static uchar TTL_read_tensor</definition>
        <argsstring>(const TTL_int_uchar_tensor_t tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="161" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1acef5295e918b07ed5876bce1677df245" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>static uchar TTL_read_tensor</definition>
        <argsstring>(const TTL_int_uchar_tensor_t tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="166" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ab97e5c5dc62b8c4285c70e19726ffe8a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>static uchar TTL_read_tensor</definition>
        <argsstring>(const TTL_int_uchar_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_sub_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="183" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="183" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1aca1612e4f39f214a8ef68ad4c76bc503" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>static uchar TTL_read_tensor</definition>
        <argsstring>(const TTL_int_uchar_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="189" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="189" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a2a6fab5ba7466cb8659f00f51af583f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
        <definition>static uchar TTL_read_tensor</definition>
        <argsstring>(const TTL_int_uchar_sub_tensor_t sub_tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="194" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="194" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a709fc66474f81526fd40ff39afc673e0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_uchar_tensor_t tensor, const uchar value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="208" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="208" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a7f8f1866a430d494c94da3a1bfe99397" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_uchar_tensor_t tensor, const uchar value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="214" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="214" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ad63468a436ba6c10a463b32614e68657" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_uchar_tensor_t tensor, const uchar value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="220" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a86ab10fc9fc9556fdb5fe8f2635a4f2c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_uchar_sub_tensor_t sub_tensor, const uchar value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="234" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="234" bodyend="238"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ad3471d7d907c4073b820bcca918c44db" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_uchar_sub_tensor_t sub_tensor, const uchar value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="240" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="240" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a26dadcb1f53be6edbd26e5f487ee593c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_uchar_sub_tensor_t sub_tensor, const uchar value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="246" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="246" bodyend="249"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a0f054a901ab70f9c1de384d6159deb8a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int TTL_read_tensor</definition>
        <argsstring>(const TTL_int_int_tensor_t tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="280" column="21" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a30c673849eff2af6305374b40e316d81" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int TTL_read_tensor</definition>
        <argsstring>(const TTL_int_int_tensor_t tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="285" column="21" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1aa2a05be24e803dcd5a8901e8809a2b4e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int TTL_read_tensor</definition>
        <argsstring>(const TTL_int_int_tensor_t tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="290" column="21" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="290" bodyend="293"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a02e46fe4a377096383abd2da8c4d9036" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int TTL_read_tensor</definition>
        <argsstring>(const TTL_int_int_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_sub_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="307" column="21" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="307" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ab1a5198f300af54283164ecf6ca50c72" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int TTL_read_tensor</definition>
        <argsstring>(const TTL_int_int_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="313" column="21" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="313" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a3c8247d62fe1742219a6b943897c747e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int TTL_read_tensor</definition>
        <argsstring>(const TTL_int_int_sub_tensor_t sub_tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="318" column="21" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="318" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a20ea15e775c7499a583f4831fbc544c0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_int_tensor_t tensor, const int value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="332" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="332" bodyend="336"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a72a891bd9a536f9f5ff40bbef3b3597e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_int_tensor_t tensor, const int value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="338" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a89873437b7ea3700092bf63bdc5e93ff" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_int_tensor_t tensor, const int value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="343" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="343" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ae14c1558b5270f33bd010ea1f756b5d5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_int_sub_tensor_t sub_tensor, const int value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="357" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="357" bodyend="361"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a315e647eb161d244f29046bb5dc71cc1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_int_sub_tensor_t sub_tensor, const int value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="363" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="363" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a742b56ec6a11febfb179418119cfd5ef" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_int_sub_tensor_t sub_tensor, const int value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="369" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="369" bodyend="372"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a9c3963dc89e75a1f1ee81c396e8f311f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>static uint TTL_read_tensor</definition>
        <argsstring>(const TTL_int_uint_tensor_t tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="403" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="403" bodyend="407"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a655ef1801a688287b24c10a820f00edb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>static uint TTL_read_tensor</definition>
        <argsstring>(const TTL_int_uint_tensor_t tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="409" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="409" bodyend="412"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a62a235e16e4f68561da327484ce17b08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>static uint TTL_read_tensor</definition>
        <argsstring>(const TTL_int_uint_tensor_t tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="414" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="414" bodyend="417"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1abaa3d8f0544b2ef214639f2593489e4c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>static uint TTL_read_tensor</definition>
        <argsstring>(const TTL_int_uint_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_sub_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="431" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="431" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a25c8f7d14a508680185fde38f1d14524" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>static uint TTL_read_tensor</definition>
        <argsstring>(const TTL_int_uint_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="437" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="437" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a3ef45c013893470a451e5be04700e1ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
        <definition>static uint TTL_read_tensor</definition>
        <argsstring>(const TTL_int_uint_sub_tensor_t sub_tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="442" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="442" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a4ee483a7e6e6e81831774ffd19078894" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_uint_tensor_t tensor, const uint value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="456" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="456" bodyend="460"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a3dd1dd56fbb099f224c47d0edab14294" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_uint_tensor_t tensor, const uint value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="462" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="462" bodyend="465"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1adf04d9d7d9c50e1cd8d786bbf450a788" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_uint_tensor_t tensor, const uint value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="467" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="467" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ab53ae122e406a3a2ab5446d7ea22a7b5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_uint_sub_tensor_t sub_tensor, const uint value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="481" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="481" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a4beee29255e6a480df1a1a21e5ab0c08" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_uint_sub_tensor_t sub_tensor, const uint value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="487" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="487" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a41d067b04a14b097e7bda9cb84910a62" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_uint_sub_tensor_t sub_tensor, const uint value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="493" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="493" bodyend="496"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a5d1e8e89ac5726e4f43e9d2d4e25ac9a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>short</type>
        <definition>static short TTL_read_tensor</definition>
        <argsstring>(const TTL_int_short_tensor_t tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="527" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="527" bodyend="531"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1aae5b17644fe2a9cfff36f7edc3f63fdb" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>short</type>
        <definition>static short TTL_read_tensor</definition>
        <argsstring>(const TTL_int_short_tensor_t tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="533" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="533" bodyend="536"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ad6c176f212d4c883944f886896f59ce8" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>short</type>
        <definition>static short TTL_read_tensor</definition>
        <argsstring>(const TTL_int_short_tensor_t tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="538" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="538" bodyend="541"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a0102a70356f24ee16e3cf34590fe5255" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>short</type>
        <definition>static short TTL_read_tensor</definition>
        <argsstring>(const TTL_int_short_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_sub_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="555" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="555" bodyend="559"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a647a39c3b4a8e336ec829e3bb03d5eb6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>short</type>
        <definition>static short TTL_read_tensor</definition>
        <argsstring>(const TTL_int_short_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="561" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="561" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a5486da3df50a12e36fb02bde6dc87a23" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>short</type>
        <definition>static short TTL_read_tensor</definition>
        <argsstring>(const TTL_int_short_sub_tensor_t sub_tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="566" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="566" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a1eb5f4da9ed9c876c619e8ce1bb8c318" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_short_tensor_t tensor, const short value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const short</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="580" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="580" bodyend="584"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a2556d43bf3b6394ba18d01bbe76efed4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_short_tensor_t tensor, const short value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const short</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="586" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="586" bodyend="590"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ad355e0b72850834886dc28c50b7e5db9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_short_tensor_t tensor, const short value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const short</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="592" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="592" bodyend="595"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a30fc6f5db3af78da9e0f21fbbe9855ed" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_short_sub_tensor_t sub_tensor, const short value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const short</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="606" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="606" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1aaf3cbe3816d679d340ee8fcef35283a2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_short_sub_tensor_t sub_tensor, const short value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const short</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="612" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="612" bodyend="616"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a32c2198cd81c646c2be26690e2cbe1fa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_short_sub_tensor_t sub_tensor, const short value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const short</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="618" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="618" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ad69c498ba3465a1530ccbe80d54ddda7" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
        <definition>static ushort TTL_read_tensor</definition>
        <argsstring>(const TTL_int_ushort_tensor_t tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="652" column="24" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="652" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a81f7030985ff2afce72885cc91a3b2ac" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
        <definition>static ushort TTL_read_tensor</definition>
        <argsstring>(const TTL_int_ushort_tensor_t tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="658" column="24" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="658" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a3c9ffd3bec91fd149da56bcab95f7c18" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
        <definition>static ushort TTL_read_tensor</definition>
        <argsstring>(const TTL_int_ushort_tensor_t tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="663" column="24" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="663" bodyend="666"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a21b012d987955719f6ade7cec5c421e9" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
        <definition>static ushort TTL_read_tensor</definition>
        <argsstring>(const TTL_int_ushort_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_sub_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="680" column="24" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="680" bodyend="684"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a5d7e9fb00c539de9ef5f3393c348a767" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
        <definition>static ushort TTL_read_tensor</definition>
        <argsstring>(const TTL_int_ushort_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="686" column="24" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="686" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a9318af6f7636f5d7036bc096cfa98c6f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
        <definition>static ushort TTL_read_tensor</definition>
        <argsstring>(const TTL_int_ushort_sub_tensor_t sub_tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="691" column="24" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="691" bodyend="694"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a9b2e6d2a6ab632fbcc61dc60e25662b2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_ushort_tensor_t tensor, const ushort value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="705" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="705" bodyend="709"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ad5fc7d817b2890d216370ac540a39183" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_ushort_tensor_t tensor, const ushort value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="711" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="711" bodyend="715"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a6f20f7428fe513d496705f218777d48b" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_ushort_tensor_t tensor, const ushort value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="717" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="717" bodyend="720"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ac255153c05bc2804ccc2714ab3eea22c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_ushort_sub_tensor_t sub_tensor, const ushort value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="731" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="731" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1aa22a40c86178390d7fc089babb2cde9a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_ushort_sub_tensor_t sub_tensor, const ushort value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="737" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="737" bodyend="741"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a0f4134c676e68751a8d9ef3f4cc0ca39" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_ushort_sub_tensor_t sub_tensor, const ushort value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="743" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="743" bodyend="746"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a83460949deccd27f57c4735e68ddd5de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long TTL_read_tensor</definition>
        <argsstring>(const TTL_int_long_tensor_t tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="777" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="777" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a89d9efbd86d59e4f386defb1e8d2a251" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long TTL_read_tensor</definition>
        <argsstring>(const TTL_int_long_tensor_t tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="783" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="783" bodyend="786"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1af2d1a0cce163a76fd3ca19f67275095a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long TTL_read_tensor</definition>
        <argsstring>(const TTL_int_long_tensor_t tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="788" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="788" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a2d5d1351f4dc4ba506babb28d8fdbd4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long TTL_read_tensor</definition>
        <argsstring>(const TTL_int_long_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_sub_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="805" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="805" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ad47b0226450a1fe9e20252dd91083382" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long TTL_read_tensor</definition>
        <argsstring>(const TTL_int_long_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="811" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="811" bodyend="814"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a1d73e429ed3b4f3ac653975190f05734" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>long</type>
        <definition>static long TTL_read_tensor</definition>
        <argsstring>(const TTL_int_long_sub_tensor_t sub_tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="816" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="816" bodyend="819"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a81f8c764816986aa84e7ced4edbbcf1d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_long_tensor_t tensor, const long value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="830" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="830" bodyend="834"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ae10bb7ae11864ecd26f327026a59e8b0" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_long_tensor_t tensor, const long value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="836" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="836" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a268ac889fa8b255ea962f3b35845df3e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_long_tensor_t tensor, const long value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="841" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="841" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a75edfa8b7e86e1a601e608ccfde0629a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_long_sub_tensor_t sub_tensor, const long value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="855" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="855" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a6858e9269c808f24de650963814e6690" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_long_sub_tensor_t sub_tensor, const long value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="861" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="861" bodyend="865"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a874e9635ae230336fd59d50d3689aa4a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_long_sub_tensor_t sub_tensor, const long value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="867" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="867" bodyend="870"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a5421e5111c98d9a1d49d4d51c0d0e4e6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref></type>
        <definition>static ulong TTL_read_tensor</definition>
        <argsstring>(const TTL_int_ulong_tensor_t tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="901" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="901" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1ac8adfaa77b0510ac698ea75f3f7c4a8e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref></type>
        <definition>static ulong TTL_read_tensor</definition>
        <argsstring>(const TTL_int_ulong_tensor_t tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="907" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="907" bodyend="910"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a9f46a0f8a37c6bd67288d1b529ad8b96" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref></type>
        <definition>static ulong TTL_read_tensor</definition>
        <argsstring>(const TTL_int_ulong_tensor_t tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="912" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="912" bodyend="915"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a9ba31e6d1878b67fb3e4a6a2312cbc4d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref></type>
        <definition>static ulong TTL_read_tensor</definition>
        <argsstring>(const TTL_int_ulong_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Read a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_sub_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension</para>
</parameterdescription>
</parameteritem>
</parameterlist>
No bounds checking is performed.</para>
<para><simplesect kind="return"><para>The value read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="929" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="929" bodyend="933"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a01bb6d0b03419098824c3755abf2d072" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref></type>
        <definition>static ulong TTL_read_tensor</definition>
        <argsstring>(const TTL_int_ulong_sub_tensor_t sub_tensor, const unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="935" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="935" bodyend="938"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a6ce348487c40cc138ffce810b602c199" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref></type>
        <definition>static ulong TTL_read_tensor</definition>
        <argsstring>(const TTL_int_ulong_sub_tensor_t sub_tensor, const unsigned int x)</argsstring>
        <name>TTL_read_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="940" column="23" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="940" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a24287a39c9c21a3cba1146c87624cfc3" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_ulong_tensor_t tensor, const ulong value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="954" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="954" bodyend="958"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1afc1ce068aba42c30f198dd5e058576ae" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_ulong_tensor_t tensor, const ulong value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="960" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="960" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a3ed14e622a96a9960dc32106a3f86691" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_ulong_tensor_t tensor, const ulong value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref></type>
          <declname>tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="966" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="966" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a641bba153f27141e579ba62a6c219612" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_ulong_sub_tensor_t sub_tensor, const ulong value, const unsigned int x, const unsigned int y, const unsigned int z)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>z</declname>
        </param>
        <briefdescription>
<para>Write a value from a tensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>sub_tensor</parametername>
</parameternamelist>
<parameterdescription>
<para>A TTL_int_[type]_tensor_t describing the internal tensor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to right </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the x dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the y dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>z</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset in the z dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="980" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="980" bodyend="984"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a55446f926d40ab51ac0cd815b3a1074d" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_ulong_sub_tensor_t sub_tensor, const ulong value, unsigned int x, const unsigned int y)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="986" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="986" bodyend="990"/>
      </memberdef>
      <memberdef kind="function" id="TTL__tensor__rw_8h_1a2a428049dfb49ca264e7840e9f4feb4e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_write_tensor</definition>
        <argsstring>(const TTL_int_ulong_sub_tensor_t sub_tensor, const ulong value, const unsigned int x)</argsstring>
        <name>TTL_write_tensor</name>
        <param>
          <type>const <ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref></type>
          <declname>sub_tensor</declname>
        </param>
        <param>
          <type>const <ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref></type>
          <declname>value</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h" line="992" column="22" bodyfile="v7F17Om_TTL/tensors/TTL_tensor_rw.h" bodystart="992" bodyend="995"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.<ref refid="structTTL__int__char__tensor__t_1ab164313d3a5b9f84c0efd82507e99cb3" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__char__tensor__t_1a83e35371dfbd6809dc23a45431225383" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__char__tensor__t_1a83e35371dfbd6809dc23a45431225383" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)];</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="TTL__tensor__rw_8h_1a57e175fc1eda6bfb9839079546914aeb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="TTL__tensor__rw_8h_1a05ebd2bc6a4716d74c702f48a3f476ee" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="47"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_sub_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="TTL__tensor__rw_8h_1ab73deeb3d410ccb83d599920b217f790" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__char__sub__tensor__t_1ac40da05a058ce5c747c09e8cac6126f4" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="63"><highlight class="normal">}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="TTL__tensor__rw_8h_1aaefd8a97324aa7845ee3b6022fd3e282" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__char__sub__tensor__t_1ac40da05a058ce5c747c09e8cac6126f4" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="TTL__tensor__rw_8h_1af3b20dade8c24043644134ee8c8a6dfe" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__char__sub__tensor__t_1ac40da05a058ce5c747c09e8cac6126f4" kindref="member">tensor</ref>,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal">}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor.<ref refid="structTTL__int__char__tensor__t_1ab164313d3a5b9f84c0efd82507e99cb3" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__char__tensor__t_1a83e35371dfbd6809dc23a45431225383" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__char__tensor__t_1a83e35371dfbd6809dc23a45431225383" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="88"><highlight class="normal">}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="TTL__tensor__rw_8h_1ab81c3b08c9f33d52eb372af8b9688581" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="93"><highlight class="normal">}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="TTL__tensor__rw_8h_1ab07e0fe0f4cabe5cc35cb97769a782a1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__tensor__t" kindref="compound">TTL_int_char_tensor_t</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="TTL__tensor__rw_8h_1a8d69d13118f961da812d5e632934837e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__char__sub__tensor__t_1ac40da05a058ce5c747c09e8cac6126f4" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="TTL__tensor__rw_8h_1a1715fcdbeb861a873a2d0f45065e95cc" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__char__sub__tensor__t_1ac40da05a058ce5c747c09e8cac6126f4" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="TTL__tensor__rw_8h_1a8c55048c1facb9566eb5086cb7897eac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__char__sub__tensor__t_1ac40da05a058ce5c747c09e8cac6126f4" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="TTL__tensor__rw_8h_1a38ea3a7cf8a1591f81d48cc871525a8d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.<ref refid="structTTL__int__uchar__tensor__t_1a642357dd35719822ec6163a5414ec6ec" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__uchar__tensor__t_1a5103a8339da091e682ab05d6a368e3c7" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__uchar__tensor__t_1a5103a8339da091e682ab05d6a368e3c7" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)];</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="TTL__tensor__rw_8h_1a9c95945612cf6271cd7ff026c96d7ece" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="TTL__tensor__rw_8h_1acef5295e918b07ed5876bce1677df245" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="171"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_sub_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="TTL__tensor__rw_8h_1ab97e5c5dc62b8c4285c70e19726ffe8a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__uchar__sub__tensor__t_1a5877c1955a452d871aeb663a28d53787" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189" refid="TTL__tensor__rw_8h_1aca1612e4f39f214a8ef68ad4c76bc503" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__uchar__sub__tensor__t_1a5877c1955a452d871aeb663a28d53787" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194" refid="TTL__tensor__rw_8h_1a2a6fab5ba7466cb8659f00f51af583f2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__uchar__sub__tensor__t_1a5877c1955a452d871aeb663a28d53787" kindref="member">tensor</ref>,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">}</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="199"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="TTL__tensor__rw_8h_1a709fc66474f81526fd40ff39afc673e0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor.<ref refid="structTTL__int__uchar__tensor__t_1a642357dd35719822ec6163a5414ec6ec" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__uchar__tensor__t_1a5103a8339da091e682ab05d6a368e3c7" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__uchar__tensor__t_1a5103a8339da091e682ab05d6a368e3c7" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="212"><highlight class="normal">}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214" refid="TTL__tensor__rw_8h_1a7f8f1866a430d494c94da3a1bfe99397" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="218"><highlight class="normal">}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220" refid="TTL__tensor__rw_8h_1ad63468a436ba6c10a463b32614e68657" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__tensor__t" kindref="compound">TTL_int_uchar_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="225"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="TTL__tensor__rw_8h_1a86ab10fc9fc9556fdb5fe8f2635a4f2c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__uchar__sub__tensor__t_1a5877c1955a452d871aeb663a28d53787" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="238"><highlight class="normal">}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="TTL__tensor__rw_8h_1ad3471d7d907c4073b820bcca918c44db" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__uchar__sub__tensor__t_1a5877c1955a452d871aeb663a28d53787" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="TTL__tensor__rw_8h_1a26dadcb1f53be6edbd26e5f487ee593c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__uchar__sub__tensor__t_1a5877c1955a452d871aeb663a28d53787" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="268"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="TTL__tensor__rw_8h_1a0f054a901ab70f9c1de384d6159deb8a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.<ref refid="structTTL__int__int__tensor__t_1a0d372ec0f24a8a405106ecd7c8565da0" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__int__tensor__t_1a6d3b8410f829667531130c08f470dc8e" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__int__tensor__t_1a6d3b8410f829667531130c08f470dc8e" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)];</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="TTL__tensor__rw_8h_1a30c673849eff2af6305374b40e316d81" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="288"><highlight class="normal">}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290" refid="TTL__tensor__rw_8h_1aa2a05be24e803dcd5a8901e8809a2b4e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="293"><highlight class="normal">}</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="295"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_sub_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307" refid="TTL__tensor__rw_8h_1a02e46fe4a377096383abd2da8c4d9036" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__int__sub__tensor__t_1abc64a66102cbdcac18218d068f9ce273" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="TTL__tensor__rw_8h_1ab1a5198f300af54283164ecf6ca50c72" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__int__sub__tensor__t_1abc64a66102cbdcac18218d068f9ce273" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="TTL__tensor__rw_8h_1a3c8247d62fe1742219a6b943897c747e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__int__sub__tensor__t_1abc64a66102cbdcac18218d068f9ce273" kindref="member">tensor</ref>,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="323"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="331"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="TTL__tensor__rw_8h_1a20ea15e775c7499a583f4831fbc544c0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor.<ref refid="structTTL__int__int__tensor__t_1a0d372ec0f24a8a405106ecd7c8565da0" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__int__tensor__t_1a6d3b8410f829667531130c08f470dc8e" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__int__tensor__t_1a6d3b8410f829667531130c08f470dc8e" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338" refid="TTL__tensor__rw_8h_1a72a891bd9a536f9f5ff40bbef3b3597e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="341"><highlight class="normal">}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343" refid="TTL__tensor__rw_8h_1a89873437b7ea3700092bf63bdc5e93ff" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__tensor__t" kindref="compound">TTL_int_int_tensor_t</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="348"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="352"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357" refid="TTL__tensor__rw_8h_1ae14c1558b5270f33bd010ea1f756b5d5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__int__sub__tensor__t_1abc64a66102cbdcac18218d068f9ce273" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="361"><highlight class="normal">}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight></codeline>
<codeline lineno="363" refid="TTL__tensor__rw_8h_1a315e647eb161d244f29046bb5dc71cc1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__int__sub__tensor__t_1abc64a66102cbdcac18218d068f9ce273" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="369" refid="TTL__tensor__rw_8h_1a742b56ec6a11febfb179418119cfd5ef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__int__sub__tensor__t_1abc64a66102cbdcac18218d068f9ce273" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="372"><highlight class="normal">}</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="391"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403" refid="TTL__tensor__rw_8h_1a9c3963dc89e75a1f1ee81c396e8f311f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.<ref refid="structTTL__int__uint__tensor__t_1a971551fddb3ed539f156a21ac590257a" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__uint__tensor__t_1aa69799c5c94d7b0e40a5e80bc52a70e7" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__uint__tensor__t_1aa69799c5c94d7b0e40a5e80bc52a70e7" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)];</highlight></codeline>
<codeline lineno="407"><highlight class="normal">}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409" refid="TTL__tensor__rw_8h_1a655ef1801a688287b24c10a820f00edb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="412"><highlight class="normal">}</highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414" refid="TTL__tensor__rw_8h_1a62a235e16e4f68561da327484ce17b08" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="417"><highlight class="normal">}</highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="419"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_sub_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431" refid="TTL__tensor__rw_8h_1abaa3d8f0544b2ef214639f2593489e4c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__uint__sub__tensor__t_1a03768790d06607c59f887eaaa0a290d0" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="435"><highlight class="normal">}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="437" refid="TTL__tensor__rw_8h_1a25c8f7d14a508680185fde38f1d14524" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__uint__sub__tensor__t_1a03768790d06607c59f887eaaa0a290d0" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442" refid="TTL__tensor__rw_8h_1a3ef45c013893470a451e5be04700e1ab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__uint__sub__tensor__t_1a03768790d06607c59f887eaaa0a290d0" kindref="member">tensor</ref>,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="447"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="453"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="454"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="455"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456" refid="TTL__tensor__rw_8h_1a4ee483a7e6e6e81831774ffd19078894" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>value,</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor.<ref refid="structTTL__int__uint__tensor__t_1a971551fddb3ed539f156a21ac590257a" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__uint__tensor__t_1aa69799c5c94d7b0e40a5e80bc52a70e7" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__uint__tensor__t_1aa69799c5c94d7b0e40a5e80bc52a70e7" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="460"><highlight class="normal">}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight></codeline>
<codeline lineno="462" refid="TTL__tensor__rw_8h_1a3dd1dd56fbb099f224c47d0edab14294" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>value,</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="465"><highlight class="normal">}</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467" refid="TTL__tensor__rw_8h_1adf04d9d7d9c50e1cd8d786bbf450a788" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__tensor__t" kindref="compound">TTL_int_uint_tensor_t</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>value,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="472"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="476"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="477"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="478"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="TTL__tensor__rw_8h_1ab53ae122e406a3a2ab5446d7ea22a7b5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__uint__sub__tensor__t_1a03768790d06607c59f887eaaa0a290d0" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487" refid="TTL__tensor__rw_8h_1a4beee29255e6a480df1a1a21e5ab0c08" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__uint__sub__tensor__t_1a03768790d06607c59f887eaaa0a290d0" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="491"><highlight class="normal">}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493" refid="TTL__tensor__rw_8h_1a41d067b04a14b097e7bda9cb84910a62" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__uint__sub__tensor__t_1a03768790d06607c59f887eaaa0a290d0" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="507"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="508"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="509"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="510"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="511"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="512"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="513"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="515"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527" refid="TTL__tensor__rw_8h_1a5d1e8e89ac5726e4f43e9d2d4e25ac9a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.<ref refid="structTTL__int__short__tensor__t_1a33365c3c813c7d574297fd4b316cd808" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__short__tensor__t_1a629ea49daef867ccb05a66e64676b235" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__short__tensor__t_1a629ea49daef867ccb05a66e64676b235" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)];</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533" refid="TTL__tensor__rw_8h_1aae5b17644fe2a9cfff36f7edc3f63fdb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538" refid="TTL__tensor__rw_8h_1ad6c176f212d4c883944f886896f59ce8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="541"><highlight class="normal">}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="543"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_sub_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555" refid="TTL__tensor__rw_8h_1a0102a70356f24ee16e3cf34590fe5255" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__short__sub__tensor__t_1ab9bf46962bbfab0c27f3549bf3aedc56" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="559"><highlight class="normal">}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561" refid="TTL__tensor__rw_8h_1a647a39c3b4a8e336ec829e3bb03d5eb6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__short__sub__tensor__t_1ab9bf46962bbfab0c27f3549bf3aedc56" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566" refid="TTL__tensor__rw_8h_1a5486da3df50a12e36fb02bde6dc87a23" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__short__sub__tensor__t_1ab9bf46962bbfab0c27f3549bf3aedc56" kindref="member">tensor</ref>,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="571"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="572"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="573"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="576"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="577"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580" refid="TTL__tensor__rw_8h_1a1eb5f4da9ed9c876c619e8ce1bb8c318" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor.<ref refid="structTTL__int__short__tensor__t_1a33365c3c813c7d574297fd4b316cd808" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__short__tensor__t_1a629ea49daef867ccb05a66e64676b235" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__short__tensor__t_1a629ea49daef867ccb05a66e64676b235" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="584"><highlight class="normal">}</highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight></codeline>
<codeline lineno="586" refid="TTL__tensor__rw_8h_1a2556d43bf3b6394ba18d01bbe76efed4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="590"><highlight class="normal">}</highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="TTL__tensor__rw_8h_1ad355e0b72850834886dc28c50b7e5db9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__tensor__t" kindref="compound">TTL_int_short_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="597"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="600"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="601"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="602"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="603"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="604"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="605"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606" refid="TTL__tensor__rw_8h_1a30fc6f5db3af78da9e0f21fbbe9855ed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__short__sub__tensor__t_1ab9bf46962bbfab0c27f3549bf3aedc56" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612" refid="TTL__tensor__rw_8h_1aaf3cbe3816d679d340ee8fcef35283a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__short__sub__tensor__t_1ab9bf46962bbfab0c27f3549bf3aedc56" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="616"><highlight class="normal">}</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618" refid="TTL__tensor__rw_8h_1a32c2198cd81c646c2be26690e2cbe1fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__short__sub__tensor__t_1ab9bf46962bbfab0c27f3549bf3aedc56" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="621"><highlight class="normal">}</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="640"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652" refid="TTL__tensor__rw_8h_1ad69c498ba3465a1530ccbe80d54ddda7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.<ref refid="structTTL__int__ushort__tensor__t_1a341272872eedbdafadd200b3cca53a8d" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__ushort__tensor__t_1a285cf20128a0b9381dc98a0cf37b836c" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__ushort__tensor__t_1a285cf20128a0b9381dc98a0cf37b836c" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)];</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658" refid="TTL__tensor__rw_8h_1a81f7030985ff2afce72885cc91a3b2ac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="661"><highlight class="normal">}</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663" refid="TTL__tensor__rw_8h_1a3c9ffd3bec91fd149da56bcab95f7c18" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="666"><highlight class="normal">}</highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="668"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_sub_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="673"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680" refid="TTL__tensor__rw_8h_1a21b012d987955719f6ade7cec5c421e9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__ushort__sub__tensor__t_1af494e64a3c121a3501c97f47a456f534" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="686" refid="TTL__tensor__rw_8h_1a5d7e9fb00c539de9ef5f3393c348a767" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__ushort__sub__tensor__t_1af494e64a3c121a3501c97f47a456f534" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="689"><highlight class="normal">}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="TTL__tensor__rw_8h_1a9318af6f7636f5d7036bc096cfa98c6f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__ushort__sub__tensor__t_1af494e64a3c121a3501c97f47a456f534" kindref="member">tensor</ref>,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="694"><highlight class="normal">}</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="696"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="697"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="698"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="699"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="700"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="701"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="702"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="703"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="704"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705" refid="TTL__tensor__rw_8h_1a9b2e6d2a6ab632fbcc61dc60e25662b2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor.<ref refid="structTTL__int__ushort__tensor__t_1a341272872eedbdafadd200b3cca53a8d" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__ushort__tensor__t_1a285cf20128a0b9381dc98a0cf37b836c" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__ushort__tensor__t_1a285cf20128a0b9381dc98a0cf37b836c" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="709"><highlight class="normal">}</highlight></codeline>
<codeline lineno="710"><highlight class="normal"></highlight></codeline>
<codeline lineno="711" refid="TTL__tensor__rw_8h_1ad5fc7d817b2890d216370ac540a39183" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="715"><highlight class="normal">}</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717" refid="TTL__tensor__rw_8h_1a6f20f7428fe513d496705f218777d48b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__tensor__t" kindref="compound">TTL_int_ushort_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="722"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="723"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="724"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="725"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="726"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="727"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="728"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="729"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="730"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731" refid="TTL__tensor__rw_8h_1ac255153c05bc2804ccc2714ab3eea22c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__ushort__sub__tensor__t_1af494e64a3c121a3501c97f47a456f534" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737" refid="TTL__tensor__rw_8h_1aa22a40c86178390d7fc089babb2cde9a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__ushort__sub__tensor__t_1af494e64a3c121a3501c97f47a456f534" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743" refid="TTL__tensor__rw_8h_1a0f4134c676e68751a8d9ef3f4cc0ca39" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__ushort__sub__tensor__t_1af494e64a3c121a3501c97f47a456f534" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="748"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="749"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="750"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="751"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="752"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="753"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="754"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="755"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="758"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="759"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="760"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="761"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="762"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="763"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="765"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="766"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="767"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="768"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="769"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="770"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="771"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="772"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="773"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777" refid="TTL__tensor__rw_8h_1a83460949deccd27f57c4735e68ddd5de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.<ref refid="structTTL__int__long__tensor__t_1aa56d39d8b0713e89b74ff8ab08ed78e6" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__long__tensor__t_1a94dc8c1f175252e040599114aef54ebd" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__long__tensor__t_1a94dc8c1f175252e040599114aef54ebd" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)];</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight></codeline>
<codeline lineno="783" refid="TTL__tensor__rw_8h_1a89d9efbd86d59e4f386defb1e8d2a251" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="788" refid="TTL__tensor__rw_8h_1af2d1a0cce163a76fd3ca19f67275095a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="791"><highlight class="normal">}</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="793"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_sub_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="801"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="802"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805" refid="TTL__tensor__rw_8h_1a2d5d1351f4dc4ba506babb28d8fdbd4a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__long__sub__tensor__t_1a3cf57e11cf419427af71866cee2e0988" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="809"><highlight class="normal">}</highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight></codeline>
<codeline lineno="811" refid="TTL__tensor__rw_8h_1ad47b0226450a1fe9e20252dd91083382" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__long__sub__tensor__t_1a3cf57e11cf419427af71866cee2e0988" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight></codeline>
<codeline lineno="816" refid="TTL__tensor__rw_8h_1a1d73e429ed3b4f3ac653975190f05734" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__long__sub__tensor__t_1a3cf57e11cf419427af71866cee2e0988" kindref="member">tensor</ref>,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="819"><highlight class="normal">}</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="821"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="823"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="824"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="825"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="826"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="827"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="828"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830" refid="TTL__tensor__rw_8h_1a81f8c764816986aa84e7ced4edbbcf1d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor.<ref refid="structTTL__int__long__tensor__t_1aa56d39d8b0713e89b74ff8ab08ed78e6" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__long__tensor__t_1a94dc8c1f175252e040599114aef54ebd" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__long__tensor__t_1a94dc8c1f175252e040599114aef54ebd" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="834"><highlight class="normal">}</highlight></codeline>
<codeline lineno="835"><highlight class="normal"></highlight></codeline>
<codeline lineno="836" refid="TTL__tensor__rw_8h_1ae10bb7ae11864ecd26f327026a59e8b0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841" refid="TTL__tensor__rw_8h_1a268ac889fa8b255ea962f3b35845df3e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__tensor__t" kindref="compound">TTL_int_long_tensor_t</ref><sp/>tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value,</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="844"><highlight class="normal">}</highlight></codeline>
<codeline lineno="845"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="846"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="847"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="848"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="849"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="850"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855" refid="TTL__tensor__rw_8h_1a75edfa8b7e86e1a601e608ccfde0629a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__long__sub__tensor__t_1a3cf57e11cf419427af71866cee2e0988" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="859"><highlight class="normal">}</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight></codeline>
<codeline lineno="861" refid="TTL__tensor__rw_8h_1a6858e9269c808f24de650963814e6690" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__long__sub__tensor__t_1a3cf57e11cf419427af71866cee2e0988" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="865"><highlight class="normal">}</highlight></codeline>
<codeline lineno="866"><highlight class="normal"></highlight></codeline>
<codeline lineno="867" refid="TTL__tensor__rw_8h_1a874e9635ae230336fd59d50d3689aa4a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__long__sub__tensor__t_1a3cf57e11cf419427af71866cee2e0988" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="871"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="872"><highlight class="comment"><sp/>*<sp/>TTL_tensors_common.h</highlight></codeline>
<codeline lineno="873"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="876"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="877"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="878"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="880"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="881"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="882"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="883"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="889"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="890"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="891"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="893"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="894"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="895"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="896"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="897"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="898"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="899"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="900"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901" refid="TTL__tensor__rw_8h_1a5421e5111c98d9a1d49d4d51c0d0e4e6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tensor.<ref refid="structTTL__int__ulong__tensor__t_1a206930cb834ee05938ca4d6f3509ebc8" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__ulong__tensor__t_1a33a8e7d599aff02335b77e2956691ac2" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__ulong__tensor__t_1a33a8e7d599aff02335b77e2956691ac2" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)];</highlight></codeline>
<codeline lineno="905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="906"><highlight class="normal"></highlight></codeline>
<codeline lineno="907" refid="TTL__tensor__rw_8h_1ac8adfaa77b0510ac698ea75f3f7c4a8e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912" refid="TTL__tensor__rw_8h_1a9f46a0f8a37c6bd67288d1b529ad8b96" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(tensor,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="915"><highlight class="normal">}</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="917"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="918"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Read<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="920"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_sub_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="921"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="922"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="923"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="924"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="925"><highlight class="comment"><sp/>*<sp/>No<sp/>bounds<sp/>checking<sp/>is<sp/>performed.</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>value<sp/>read</highlight></codeline>
<codeline lineno="928"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="929" refid="TTL__tensor__rw_8h_1a9ba31e6d1878b67fb3e4a6a2312cbc4d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__ulong__sub__tensor__t_1ad2731372f580163927a27aca9fa702b9" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="933"><highlight class="normal">}</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935" refid="TTL__tensor__rw_8h_1a01bb6d0b03419098824c3755abf2d072" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__ulong__sub__tensor__t_1ad2731372f580163927a27aca9fa702b9" kindref="member">tensor</ref>,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="938"><highlight class="normal">}</highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight></codeline>
<codeline lineno="940" refid="TTL__tensor__rw_8h_1a6ce348487c40cc138ffce810b602c199" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__tensor__rw_8h_1a98511f1008a0c5b1645ded95fe9072df" kindref="member">TTL_read_tensor</ref>(sub_tensor.<ref refid="structTTL__int__ulong__sub__tensor__t_1ad2731372f580163927a27aca9fa702b9" kindref="member">tensor</ref>,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="945"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/>*<sp/>@param<sp/>tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="952"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954" refid="TTL__tensor__rw_8h_1a24287a39c9c21a3cba1146c87624cfc3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>tensor.<ref refid="structTTL__int__ulong__tensor__t_1a206930cb834ee05938ca4d6f3509ebc8" kindref="member">base</ref>[x<sp/>+<sp/>(tensor.<ref refid="structTTL__int__ulong__tensor__t_1a33a8e7d599aff02335b77e2956691ac2" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref><sp/>*<sp/>y)<sp/>+<sp/>(tensor.<ref refid="structTTL__int__ulong__tensor__t_1a33a8e7d599aff02335b77e2956691ac2" kindref="member">layout</ref>.<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref><sp/>*<sp/>z)]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight></codeline>
<codeline lineno="960" refid="TTL__tensor__rw_8h_1afc1ce068aba42c30f198dd5e058576ae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="964"><highlight class="normal">}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966" refid="TTL__tensor__rw_8h_1a3ed14e622a96a9960dc32106a3f86691" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__tensor__t" kindref="compound">TTL_int_ulong_tensor_t</ref><sp/>tensor,</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(tensor,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="971"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="972"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>Write<sp/>a<sp/>value<sp/>from<sp/>a<sp/>tensor</highlight></codeline>
<codeline lineno="973"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="974"><highlight class="comment"><sp/>*<sp/>@param<sp/>sub_tensor<sp/>A<sp/>TTL_int_[type]_tensor_t<sp/>describing<sp/>the<sp/>internal<sp/>tensor.</highlight></codeline>
<codeline lineno="975"><highlight class="comment"><sp/>*<sp/>@param<sp/>value<sp/>The<sp/>value<sp/>to<sp/>right</highlight></codeline>
<codeline lineno="976"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>x<sp/>dimension</highlight></codeline>
<codeline lineno="977"><highlight class="comment"><sp/>*<sp/>@param<sp/>y<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>y<sp/>dimension</highlight></codeline>
<codeline lineno="978"><highlight class="comment"><sp/>*<sp/>@param<sp/>z<sp/>The<sp/>offset<sp/>in<sp/>the<sp/>z<sp/>dimension</highlight></codeline>
<codeline lineno="979"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980" refid="TTL__tensor__rw_8h_1a641bba153f27141e579ba62a6c219612" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>z)<sp/>{</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__ulong__sub__tensor__t_1ad2731372f580163927a27aca9fa702b9" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>z);</highlight></codeline>
<codeline lineno="984"><highlight class="normal">}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986" refid="TTL__tensor__rw_8h_1a55446f926d40ab51ac0cd815b3a1074d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__ulong__sub__tensor__t_1ad2731372f580163927a27aca9fa702b9" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>y,<sp/>0);</highlight></codeline>
<codeline lineno="990"><highlight class="normal">}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992" refid="TTL__tensor__rw_8h_1a2a428049dfb49ca264e7840e9f4feb4e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref><sp/>sub_tensor,</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__tensor__rw_8h_1a7866db0c276518213b59a0ff02960059" kindref="member">TTL_write_tensor</ref>(sub_tensor.<ref refid="structTTL__int__ulong__sub__tensor__t_1ad2731372f580163927a27aca9fa702b9" kindref="member">tensor</ref>,<sp/>value,<sp/>x,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="995"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="v7F17Om_TTL/tensors/TTL_tensor_rw.h"/>
  </compounddef>
</doxygen>
