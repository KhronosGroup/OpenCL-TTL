<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="TTL__debug_8h" kind="file" language="C++">
    <compoundname>TTL_debug.h</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>TTL_debug.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="19"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>@def<sp/>__TTL_create_dumper</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>call<sp/>the<sp/>provides<sp/>a<sp/>CR<sp/>as<sp/>well</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>When<sp/>using<sp/>dump<sp/>functions<sp/>from<sp/>the<sp/>code<sp/>we<sp/>generally<sp/>want<sp/>a<sp/>CR.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="26"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Print<sp/>a<sp/>debug<sp/>copy<sp/>of<sp/>a<sp/>TTL_shape_t<sp/>type</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>Output<sp/>debug<sp/>of<sp/>the<sp/>TTL_shape_t<sp/>passed<sp/>using<sp/>printf</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>@param<sp/>ttl_shape<sp/>The<sp/>tile<sp/>to<sp/>print<sp/>debug<sp/>info<sp/>for.</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_shape_t(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__shape__t" kindref="compound">TTL_shape_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ttl_shape)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TTL_shape_t:<sp/>%d,%d,%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>ttl_shape-&gt;<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>ttl_shape-&gt;<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>,<sp/>ttl_shape-&gt;<ref refid="structTTL__shape__t_1a2c3f2f41aa722076083862ada659fade" kindref="member">depth</ref>);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_shape(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__shape__t" kindref="compound">TTL_shape_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>variable)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_shape_t(variable);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">};</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Print<sp/>a<sp/>debug<sp/>copy<sp/>of<sp/>a<sp/>TTL_layout_t<sp/>type</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>Output<sp/>debug<sp/>of<sp/>the<sp/>TTL_layout_t<sp/>passed<sp/>using<sp/>printf</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>@param<sp/>ttl_layout<sp/>The<sp/>tile<sp/>to<sp/>print<sp/>debug<sp/>info<sp/>for.</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_layout_t(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ttl_layout)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TTL_layout_t:<sp/>%d,%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>ttl_layout-&gt;<ref refid="structTTL__layout__t_1a3cc6d96665a9c516f3e8ec3bb68124f8" kindref="member">row_spacing</ref>,<sp/>ttl_layout-&gt;<ref refid="structTTL__layout__t_1ab76e2e1fcb6e0416f9e234686c07584c" kindref="member">plane_spacing</ref>);</highlight></codeline>
<codeline lineno="51"><highlight class="normal">}</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_layout(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>variable)<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_layout_t(variable);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Print<sp/>a<sp/>debug<sp/>copy<sp/>of<sp/>a<sp/>TTL_offset_t<sp/>type</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>Output<sp/>debug<sp/>of<sp/>the<sp/>TTL_offset_t<sp/>passed<sp/>using<sp/>printf</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>@param<sp/>ttl_offset<sp/>The<sp/>offset<sp/>3d<sp/>to<sp/>print<sp/>debug<sp/>info<sp/>for.</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_offset_t(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__offset__t" kindref="compound">TTL_offset_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ttl_offset)<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TTL_offset_t:<sp/>%d,%d,%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>ttl_offset-&gt;<ref refid="structTTL__offset__t_1abe9df04b12aa2c98c76241d6b74dbc22" kindref="member">x</ref>,<sp/>ttl_offset-&gt;<ref refid="structTTL__offset__t_1aae0c2bbb96222eb5e580367dc2f2b12c" kindref="member">y</ref>,<sp/>ttl_offset-&gt;<ref refid="structTTL__offset__t_1a9966699158adc499f07c4499c972cc75" kindref="member">z</ref>);</highlight></codeline>
<codeline lineno="67"><highlight class="normal">}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_offset(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__offset__t" kindref="compound">TTL_offset_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>variable)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_offset_t(variable);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="72"><highlight class="normal">};</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Print<sp/>a<sp/>debug<sp/>copy<sp/>of<sp/>a<sp/>TTL_overlap_t<sp/>type</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>Output<sp/>debug<sp/>of<sp/>the<sp/>TTL_overlap_t<sp/>passed<sp/>using<sp/>printf</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>@param<sp/>ttl_overlap<sp/>The<sp/>overlap<sp/>to<sp/>print<sp/>debug<sp/>info<sp/>for.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_overlap_t(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__overlap__t" kindref="compound">TTL_overlap_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ttl_overlap)<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TTL_overlap_t:<sp/>%d,%d,%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>ttl_overlap-&gt;<ref refid="structTTL__overlap__t_1ae4469319b7409cd74289b3b9031a460e" kindref="member">width</ref>,<sp/>ttl_overlap-&gt;<ref refid="structTTL__overlap__t_1aa7a279104c7ef1676d8e2528cb6bcccc" kindref="member">height</ref>,<sp/>ttl_overlap-&gt;<ref refid="structTTL__overlap__t_1a6e9810c5c0a2c94854533807b5e93e53" kindref="member">depth</ref>);</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_overlap(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__overlap__t" kindref="compound">TTL_overlap_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>variable)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_overlap_t(variable);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="88"><highlight class="normal">};</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="90"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Print<sp/>a<sp/>debug<sp/>copy<sp/>of<sp/>a<sp/>TTL_augmentation_t<sp/>type</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>Output<sp/>debug<sp/>of<sp/>the<sp/>TTL_augmentation_t<sp/>passed<sp/>using<sp/>printf</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>@param<sp/>ttl_augmented<sp/>The<sp/>overlap<sp/>to<sp/>print<sp/>debug<sp/>info<sp/>for.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_augmentation_t(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__augmentation__t" kindref="compound">TTL_augmentation_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ttl_augmented)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TTL_augmentation_t:<sp/>(%d,%d),(%d,%d),(%d,%d),<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttl_augmented-&gt;<ref refid="structTTL__augmentation__t_1aa4865c0b863d4a85ad0aff9d57c97485" kindref="member">left</ref>,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttl_augmented-&gt;<ref refid="structTTL__augmentation__t_1a14b6707c96da50f066053ad2cc5f543a" kindref="member">right</ref>,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttl_augmented-&gt;<ref refid="structTTL__augmentation__t_1a95dd77223f0d5616a8b7105c1957c559" kindref="member">top</ref>,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttl_augmented-&gt;<ref refid="structTTL__augmentation__t_1a438ab3342248b88791815fb12dd9df3b" kindref="member">bottom</ref>,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttl_augmented-&gt;<ref refid="structTTL__augmentation__t_1ae8bcfe2fcd93b71fb9cf9b001211bb7f" kindref="member">front</ref>,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttl_augmented-&gt;<ref refid="structTTL__augmentation__t_1a2daf4dc74791c6c7a7c01751044254e4" kindref="member">back</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_augmentation(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__augmentation__t" kindref="compound">TTL_augmentation_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>variable)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_augmentation_t(variable);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="112"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Print<sp/>a<sp/>debug<sp/>copy<sp/>of<sp/>a<sp/>TTL_tile_t<sp/>type</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>Output<sp/>debug<sp/>of<sp/>the<sp/>TTL_tile_t<sp/>passed<sp/>using<sp/>printf</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>@param<sp/>ttl_tile<sp/>The<sp/>tile<sp/>to<sp/>print<sp/>debug<sp/>info<sp/>for.</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_tile_t(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ttl_tile)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TTL_tile_t:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_shape_t(&amp;ttl_tile-&gt;<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_offset_t(&amp;ttl_tile-&gt;<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_tile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>variable)<sp/>{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_tile_t(variable);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal">};</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="130"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Print<sp/>a<sp/>debug<sp/>copy<sp/>of<sp/>a<sp/>TTL_int_tensor_t<sp/>type</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>Output<sp/>debug<sp/>of<sp/>the<sp/>TTL_tile_t<sp/>passed<sp/>using<sp/>printf</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>@param<sp/>ttl_int_tensor<sp/>The<sp/>internal<sp/>tensor<sp/>to<sp/>print<sp/>debug<sp/>info<sp/>for.</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_const_int_tensor_t(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1a6f8d3bc7ab2c427d51a3addc5417bce0" kindref="member">TTL_const_int_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ttl_int_tensor)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TTL_int_tensor_t:<sp/>%p,%d<sp/>&quot;</highlight><highlight class="normal">,<sp/>ttl_int_tensor-&gt;<ref refid="structTTL__const__int__void__tensor__t_1a3b4788c041b721b94e79f6421f9a856f" kindref="member">base</ref>,<sp/>ttl_int_tensor-&gt;<ref refid="structTTL__const__int__void__tensor__t_1a81380b254905ee710554d55da607d6e4" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_layout_t(&amp;ttl_int_tensor-&gt;<ref refid="structTTL__const__int__void__tensor__t_1ad4bb3564ecac051d7aba9b81a3b6a245" kindref="member">layout</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_shape_t(&amp;ttl_int_tensor-&gt;<ref refid="structTTL__const__int__void__tensor__t_1ae7b77378cfa63341d128aada7a26db04" kindref="member">shape</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_int_tensor_t(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ttl_int_tensor)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_const_int_tensor_t(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(ttl_int_tensor));</highlight></codeline>
<codeline lineno="145"><highlight class="normal">}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_int_tensor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1af55285c5c289c327379be3725265949a" kindref="member">TTL_int_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>variable)<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_int_tensor_t(variable);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="152"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Print<sp/>a<sp/>debug<sp/>copy<sp/>of<sp/>a<sp/>TTL_int_sub_tensor_t<sp/>type</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>Output<sp/>debug<sp/>of<sp/>the<sp/>TTL_int_sub_tensor_t<sp/>passed<sp/>using<sp/>printf</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>@param<sp/>ttl_int_sub_tensor<sp/>The<sp/>internal<sp/>tensor<sp/>to<sp/>print<sp/>debug<sp/>info<sp/>for.</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_int_sub_tensor_t(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1a3b85de43f4885c4f5934a91c264b94cf" kindref="member">TTL_int_sub_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ttl_int_sub_tensor)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TTL_int_sub_tensor_t:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_int_tensor_t(&amp;ttl_int_sub_tensor-&gt;<ref refid="structTTL__int__void__sub__tensor__t_1a6982437fd1ed4c1c2761c53c1f25a35d" kindref="member">tensor</ref>);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_shape(&amp;ttl_int_sub_tensor-&gt;<ref refid="structTTL__int__void__sub__tensor__t_1ae80cebde2ab403e7752f0672bd75096f" kindref="member">origin</ref>.<ref refid="structTTL__int__void__sub__tensor__t_1aec08f7d4e5aeb3d22a99984b72899b65" kindref="member">shape</ref>);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_offset_t(&amp;ttl_int_sub_tensor-&gt;<ref refid="structTTL__int__void__sub__tensor__t_1ae80cebde2ab403e7752f0672bd75096f" kindref="member">origin</ref>.<ref refid="structTTL__int__void__sub__tensor__t_1a7aadd3beacc59288d06537fd355eca29" kindref="member">sub_offset</ref>);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_int_sub_tensor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1a3b85de43f4885c4f5934a91c264b94cf" kindref="member">TTL_int_sub_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>variable)<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_int_sub_tensor_t(variable);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">};</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="171"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Print<sp/>a<sp/>debug<sp/>copy<sp/>of<sp/>a<sp/>TTL_ext_tensor_t<sp/>type</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>Output<sp/>debug<sp/>of<sp/>the<sp/>TTL_tile_t<sp/>passed<sp/>using<sp/>printf</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>@param<sp/>ttl_ext_tensor<sp/>The<sp/>external<sp/>tensor<sp/>to<sp/>print<sp/>debug<sp/>info<sp/>for.</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_const_ext_tensor_t(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ttl_const_ext_tensor)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TTL_ext_tensor_t:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;%p&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;,%d<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ttl_const_ext_tensor-&gt;<ref refid="structTTL__const__ext__void__tensor__t_1ab0a01a9f25ac2be91decd4604411ae4f" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttl_const_ext_tensor-&gt;<ref refid="structTTL__const__ext__void__tensor__t_1a6b6f139086cf0d00f4c4f65c4da5d700" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_layout_t(&amp;ttl_const_ext_tensor-&gt;<ref refid="structTTL__const__ext__void__tensor__t_1a5210fe38a89c2ad0b38a7004df25b34b" kindref="member">layout</ref>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_shape_t(&amp;ttl_const_ext_tensor-&gt;<ref refid="structTTL__const__ext__void__tensor__t_1a8cb9d18d8b3f768abef0d869bab8cb10" kindref="member">shape</ref>);</highlight></codeline>
<codeline lineno="186"><highlight class="normal">}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_ext_tensor_t(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__ext__tensors_8h_1ad75b1c0da822652819d4b8d0323db60d" kindref="member">TTL_ext_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ttl_ext_tensor)<sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_const_ext_tensor_t(<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(ttl_ext_tensor));</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_ext_tensor(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__ext__tensors_8h_1ad75b1c0da822652819d4b8d0323db60d" kindref="member">TTL_ext_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>variable)<sp/>{</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_ext_tensor_t(variable);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="195"><highlight class="normal">};</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="197"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Print<sp/>a<sp/>debug<sp/>copy<sp/>of<sp/>a<sp/>TTL_tiler_t<sp/>type</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>Output<sp/>debug<sp/>of<sp/>the<sp/>TTL_tiler_t<sp/>passed<sp/>using<sp/>printf</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/>@param<sp/>ttl_tiler<sp/>The<sp/>tiler<sp/>to<sp/>print<sp/>debug<sp/>info<sp/>for.</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_tiler_t(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tiler__t" kindref="compound">TTL_tiler_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ttl_tiler)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TTL_tiler_t:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_shape_t(&amp;ttl_tiler-&gt;<ref refid="structTTL__tiler__t_1ac46505174c37e6f5b4e6993ec411e7c1" kindref="member">space</ref>);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_shape_t(&amp;ttl_tiler-&gt;<ref refid="structTTL__tiler__t_1a322252fe86f426c6f0d2d33e41c3e484" kindref="member">tile</ref>);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_overlap_t(&amp;ttl_tiler-&gt;<ref refid="structTTL__tiler__t_1a3a38591bca09c0e4c14403099c1d5eda" kindref="member">overlap</ref>);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Cache:<sp/>%d,%d,%d,%d,%d<sp/>&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttl_tiler-&gt;<ref refid="structTTL__tiler__t_1a2575ba1287b44ab93bd704bedd037d2c" kindref="member">cache</ref>.<ref refid="structTTL__tiler__t_1ae6e4a2c2147c55412cac7cfb072c018a" kindref="member">number_of_tiles</ref>,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttl_tiler-&gt;<ref refid="structTTL__tiler__t_1a2575ba1287b44ab93bd704bedd037d2c" kindref="member">cache</ref>.<ref refid="structTTL__tiler__t_1a0686e98101d3964e22a2b229cdee5bdd" kindref="member">tiles_in_width</ref>,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttl_tiler-&gt;<ref refid="structTTL__tiler__t_1a2575ba1287b44ab93bd704bedd037d2c" kindref="member">cache</ref>.<ref refid="structTTL__tiler__t_1ad1632e6b21ee5ad81f2ac6a3a90ba703" kindref="member">tiles_in_height</ref>,</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttl_tiler-&gt;<ref refid="structTTL__tiler__t_1a2575ba1287b44ab93bd704bedd037d2c" kindref="member">cache</ref>.<ref refid="structTTL__tiler__t_1a3c3f2927d87f212ae77571d8747c4657" kindref="member">tiles_in_depth</ref>,</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ttl_tiler-&gt;<ref refid="structTTL__tiler__t_1a2575ba1287b44ab93bd704bedd037d2c" kindref="member">cache</ref>.<ref refid="structTTL__tiler__t_1a873497b66846b5266bc77ded752030c5" kindref="member">tiles_in_plane</ref>);</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_tiler(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__tiler__t" kindref="compound">TTL_tiler_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>variable)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_tiler_t(variable);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="220"><highlight class="normal">};</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="222"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="223"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Internal<sp/>non-API<sp/>helper<sp/>function<sp/>to<sp/>allow<sp/>debugging<sp/>of<sp/>exports<sp/>and</highlight></codeline>
<codeline lineno="224"><highlight class="comment"><sp/>*<sp/>imports</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>@param<sp/>is_export</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/>@param<sp/>internal_tensor</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/>@param<sp/>external_tensor</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/>@param<sp/>access_type</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/>@param<sp/>event</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/>@param<sp/>line</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_transaction(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_export,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__int__tensors_8h_1a6f8d3bc7ab2c427d51a3addc5417bce0" kindref="member">TTL_const_int_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>internal_tensor,</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="TTL__ext__tensors_8h_1a06baf9e44b059bf3571a491b880830fa" kindref="member">TTL_const_ext_tensor_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>external_tensor,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>access_type,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>event,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(is_export<sp/>?<sp/></highlight><highlight class="stringliteral">&quot;Export<sp/>&quot;</highlight><highlight class="normal"><sp/>:<sp/></highlight><highlight class="stringliteral">&quot;Import<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_shape_t(&amp;internal_tensor-&gt;<ref refid="structTTL__const__int__void__tensor__t_1ae7b77378cfa63341d128aada7a26db04" kindref="member">shape</ref>);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_event(event);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>AccessType:<sp/>%d\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">,<sp/>access_type);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_const_ext_tensor_t(external_tensor);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>__TTL_dump_const_int_tensor_t(internal_tensor);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>line:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>line);</highlight></codeline>
<codeline lineno="244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__TTL_dump_wait(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_events,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>*events,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;TTL_WAIT:<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>num_events;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__TTL_dump_event(&amp;events[i]);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n<sp/><sp/><sp/><sp/><sp/><sp/><sp/>line:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>line);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="v7F17Om_TTL/TTL_debug.h"/>
  </compounddef>
</doxygen>
