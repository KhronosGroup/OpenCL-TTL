<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="TTL__duplex__scheme_8h" kind="file" language="C++">
    <compoundname>TTL_duplex_scheme.h</compoundname>
    <innerclass refid="structTTL__duplex__const__void__tensor__buffering__t" prot="public">TTL_duplex_const_void_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__duplex__const__char__tensor__buffering__t" prot="public">TTL_duplex_const_char_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__duplex__const__uchar__tensor__buffering__t" prot="public">TTL_duplex_const_uchar_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__duplex__const__int__tensor__buffering__t" prot="public">TTL_duplex_const_int_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__duplex__const__uint__tensor__buffering__t" prot="public">TTL_duplex_const_uint_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__duplex__const__short__tensor__buffering__t" prot="public">TTL_duplex_const_short_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__duplex__const__ushort__tensor__buffering__t" prot="public">TTL_duplex_const_ushort_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__duplex__const__long__tensor__buffering__t" prot="public">TTL_duplex_const_long_tensor_buffering_t</innerclass>
    <innerclass refid="structTTL__duplex__const__ulong__tensor__buffering__t" prot="public">TTL_duplex_const_ulong_tensor_buffering_t</innerclass>
    <sectiondef kind="func">
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__io__void__tensor__t" kindref="compound">TTL_io_void_tensor_t</ref></type>
        <definition>static TTL_io_void_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_duplex_const_void_tensor_buffering_t *const duplex_buffering, TTL_tile_t tile_next_import, TTL_tile_t tile_current_export)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__void__tensor__buffering__t" kindref="compound">TTL_duplex_const_void_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_next_import</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_current_export</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="201" column="38" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="201" bodyend="252" declfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" declline="95" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1a970d2a339451a2f0200908eafb3816e4" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__duplex__const__void__tensor__buffering__t" kindref="compound">TTL_duplex_const_void_tensor_buffering_t</ref></type>
        <definition>static TTL_duplex_const_void_tensor_buffering_t TTL_start_duplex_buffering</definition>
        <argsstring>(TTL_ext_void_tensor_t ext_tensor_in, __local void *int_base_in, TTL_ext_void_tensor_t ext_tensor_out, __local void *int_base_out, TTL_event_t(*events)[2], TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_duplex_buffering</name>
        <param>
          <type><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref></type>
          <declname>ext_tensor_in</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> void *</type>
          <declname>int_base_in</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref></type>
          <declname>ext_tensor_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> void *</type>
          <declname>int_base_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref>(*)</type>
          <declname>events</declname>
          <array>[2]</array>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_DUPLEX_BUFFERING_TYPE and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ext_tensor_in</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_in</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local import buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor_out</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_out</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local export buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a list of 2 events. The first event in the list will be used for imports, the second event in the list will be used for exports. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_DUPLEX_BUFFERING_TYPE created from the input parameters.</para>
</simplesect>
The first event in the list will be used for imports, the second event in the list will be used for exports. <linebreak/>
<linebreak/>
 Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
</programlisting> <linebreak/>
 <simplesect kind="return"><para>The TTL_duplex_buffering_t created from the input parameters.</para>
</simplesect>
Solid description of duplex buffering here.</para>
<para>The simplest form of duplex buffering takes the following flow.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers
1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Import The Next Tile into the input buffer;

  :Process the Tile from the input buffer to the output buffer;

  :ExportThe Process Tile from into the output buffer;

endwhile

stop</plantuml>
</para>
<para>This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers 1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Call TTL_step_buffering for the current tile

   This will import the current new tile and export the last tile
   in parallel;

  if (Does the input buffer contain a valid tile? **TTL_tile_empty(...)**) then (yes)
     :Process the Tile from the input buffer to the output buffer;
  endif

endwhile

stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="183" column="58" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="183" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1a86e15576523b42c731f1a2bb1c9cbf13" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_finish_buffering</definition>
        <argsstring>(TTL_duplex_const_void_tensor_buffering_t *const duplex_buffering)</argsstring>
        <name>TTL_finish_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__void__tensor__buffering__t" kindref="compound">TTL_duplex_const_void_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="254" column="22" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="254" bodyend="257"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1a2fc7e137ba39e8d821ac1906292b0441" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__io__char__tensor__t" kindref="compound">TTL_io_char_tensor_t</ref></type>
        <definition>static TTL_io_char_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_duplex_const_char_tensor_buffering_t *const duplex_buffering, TTL_tile_t tile_next_import, TTL_tile_t tile_current_export)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__char__tensor__buffering__t" kindref="compound">TTL_duplex_const_char_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_next_import</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_current_export</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="458" column="38" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="458" bodyend="509" declfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" declline="352" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1a3bbfcb346b5f4d1c116740c0664738f2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__duplex__const__char__tensor__buffering__t" kindref="compound">TTL_duplex_const_char_tensor_buffering_t</ref></type>
        <definition>static TTL_duplex_const_char_tensor_buffering_t TTL_start_duplex_buffering</definition>
        <argsstring>(TTL_ext_char_tensor_t ext_tensor_in, __local char *int_base_in, TTL_ext_char_tensor_t ext_tensor_out, __local char *int_base_out, TTL_event_t(*events)[2], TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_duplex_buffering</name>
        <param>
          <type><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref></type>
          <declname>ext_tensor_in</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> char *</type>
          <declname>int_base_in</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref></type>
          <declname>ext_tensor_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> char *</type>
          <declname>int_base_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref>(*)</type>
          <declname>events</declname>
          <array>[2]</array>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_DUPLEX_BUFFERING_TYPE and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ext_tensor_in</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_in</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local import buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor_out</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_out</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local export buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a list of 2 events. The first event in the list will be used for imports, the second event in the list will be used for exports. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_DUPLEX_BUFFERING_TYPE created from the input parameters.</para>
</simplesect>
The first event in the list will be used for imports, the second event in the list will be used for exports. <linebreak/>
<linebreak/>
 Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
</programlisting> <linebreak/>
 <simplesect kind="return"><para>The TTL_duplex_buffering_t created from the input parameters.</para>
</simplesect>
Solid description of duplex buffering here.</para>
<para>The simplest form of duplex buffering takes the following flow.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers
1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Import The Next Tile into the input buffer;

  :Process the Tile from the input buffer to the output buffer;

  :ExportThe Process Tile from into the output buffer;

endwhile

stop</plantuml>
</para>
<para>This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers 1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Call TTL_step_buffering for the current tile

   This will import the current new tile and export the last tile
   in parallel;

  if (Does the input buffer contain a valid tile? **TTL_tile_empty(...)**) then (yes)
     :Process the Tile from the input buffer to the output buffer;
  endif

endwhile

stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="440" column="58" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="440" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1a1daf715d9c2f76a97776271a55a4e169" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_finish_buffering</definition>
        <argsstring>(TTL_duplex_const_char_tensor_buffering_t *const duplex_buffering)</argsstring>
        <name>TTL_finish_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__char__tensor__buffering__t" kindref="compound">TTL_duplex_const_char_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="511" column="22" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="511" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1a1bb2c28cb645d09f66803742558ac628" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__io__uchar__tensor__t" kindref="compound">TTL_io_uchar_tensor_t</ref></type>
        <definition>static TTL_io_uchar_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_duplex_const_uchar_tensor_buffering_t *const duplex_buffering, TTL_tile_t tile_next_import, TTL_tile_t tile_current_export)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__uchar__tensor__buffering__t" kindref="compound">TTL_duplex_const_uchar_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_next_import</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_current_export</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="715" column="39" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="715" bodyend="767" declfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" declline="609" declcolumn="39"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1ac16a34804f82b1e9723a495152bda304" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__duplex__const__uchar__tensor__buffering__t" kindref="compound">TTL_duplex_const_uchar_tensor_buffering_t</ref></type>
        <definition>static TTL_duplex_const_uchar_tensor_buffering_t TTL_start_duplex_buffering</definition>
        <argsstring>(TTL_ext_uchar_tensor_t ext_tensor_in, __local uchar *int_base_in, TTL_ext_uchar_tensor_t ext_tensor_out, __local uchar *int_base_out, TTL_event_t(*events)[2], TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_duplex_buffering</name>
        <param>
          <type><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref></type>
          <declname>ext_tensor_in</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>int_base_in</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref></type>
          <declname>ext_tensor_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref> *</type>
          <declname>int_base_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref>(*)</type>
          <declname>events</declname>
          <array>[2]</array>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_DUPLEX_BUFFERING_TYPE and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ext_tensor_in</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_in</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local import buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor_out</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_out</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local export buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a list of 2 events. The first event in the list will be used for imports, the second event in the list will be used for exports. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_DUPLEX_BUFFERING_TYPE created from the input parameters.</para>
</simplesect>
The first event in the list will be used for imports, the second event in the list will be used for exports. <linebreak/>
<linebreak/>
 Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
</programlisting> <linebreak/>
 <simplesect kind="return"><para>The TTL_duplex_buffering_t created from the input parameters.</para>
</simplesect>
Solid description of duplex buffering here.</para>
<para>The simplest form of duplex buffering takes the following flow.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers
1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Import The Next Tile into the input buffer;

  :Process the Tile from the input buffer to the output buffer;

  :ExportThe Process Tile from into the output buffer;

endwhile

stop</plantuml>
</para>
<para>This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers 1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Call TTL_step_buffering for the current tile

   This will import the current new tile and export the last tile
   in parallel;

  if (Does the input buffer contain a valid tile? **TTL_tile_empty(...)**) then (yes)
     :Process the Tile from the input buffer to the output buffer;
  endif

endwhile

stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="697" column="59" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="697" bodyend="713"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1ab8b0ad39eb5bca9cbd9c5dbfe0228510" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_finish_buffering</definition>
        <argsstring>(TTL_duplex_const_uchar_tensor_buffering_t *const duplex_buffering)</argsstring>
        <name>TTL_finish_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__uchar__tensor__buffering__t" kindref="compound">TTL_duplex_const_uchar_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="769" column="22" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="769" bodyend="772"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1aecf207096eac1b847b614bcd013a5068" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__io__int__tensor__t" kindref="compound">TTL_io_int_tensor_t</ref></type>
        <definition>static TTL_io_int_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_duplex_const_int_tensor_buffering_t *const duplex_buffering, TTL_tile_t tile_next_import, TTL_tile_t tile_current_export)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__int__tensor__buffering__t" kindref="compound">TTL_duplex_const_int_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_next_import</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_current_export</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="973" column="37" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="973" bodyend="1024" declfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" declline="867" declcolumn="37"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1ab79b59f6e561aa4e679bc780c5787f62" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__duplex__const__int__tensor__buffering__t" kindref="compound">TTL_duplex_const_int_tensor_buffering_t</ref></type>
        <definition>static TTL_duplex_const_int_tensor_buffering_t TTL_start_duplex_buffering</definition>
        <argsstring>(TTL_ext_int_tensor_t ext_tensor_in, __local int *int_base_in, TTL_ext_int_tensor_t ext_tensor_out, __local int *int_base_out, TTL_event_t(*events)[2], TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_duplex_buffering</name>
        <param>
          <type><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref></type>
          <declname>ext_tensor_in</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> int *</type>
          <declname>int_base_in</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref></type>
          <declname>ext_tensor_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> int *</type>
          <declname>int_base_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref>(*)</type>
          <declname>events</declname>
          <array>[2]</array>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_DUPLEX_BUFFERING_TYPE and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ext_tensor_in</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_in</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local import buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor_out</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_out</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local export buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a list of 2 events. The first event in the list will be used for imports, the second event in the list will be used for exports. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_DUPLEX_BUFFERING_TYPE created from the input parameters.</para>
</simplesect>
The first event in the list will be used for imports, the second event in the list will be used for exports. <linebreak/>
<linebreak/>
 Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
</programlisting> <linebreak/>
 <simplesect kind="return"><para>The TTL_duplex_buffering_t created from the input parameters.</para>
</simplesect>
Solid description of duplex buffering here.</para>
<para>The simplest form of duplex buffering takes the following flow.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers
1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Import The Next Tile into the input buffer;

  :Process the Tile from the input buffer to the output buffer;

  :ExportThe Process Tile from into the output buffer;

endwhile

stop</plantuml>
</para>
<para>This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers 1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Call TTL_step_buffering for the current tile

   This will import the current new tile and export the last tile
   in parallel;

  if (Does the input buffer contain a valid tile? **TTL_tile_empty(...)**) then (yes)
     :Process the Tile from the input buffer to the output buffer;
  endif

endwhile

stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="955" column="57" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="955" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1a828f0cbaff122250bb9f901af0ca7f4f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_finish_buffering</definition>
        <argsstring>(TTL_duplex_const_int_tensor_buffering_t *const duplex_buffering)</argsstring>
        <name>TTL_finish_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__int__tensor__buffering__t" kindref="compound">TTL_duplex_const_int_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1026" column="22" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1026" bodyend="1029"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1a11bf19594803bc0fda48418acc9e87af" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__io__uint__tensor__t" kindref="compound">TTL_io_uint_tensor_t</ref></type>
        <definition>static TTL_io_uint_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_duplex_const_uint_tensor_buffering_t *const duplex_buffering, TTL_tile_t tile_next_import, TTL_tile_t tile_current_export)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__uint__tensor__buffering__t" kindref="compound">TTL_duplex_const_uint_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_next_import</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_current_export</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1230" column="38" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1230" bodyend="1281" declfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" declline="1124" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1af39c12f6d88c4c50aa0b2a49f13c65c2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__duplex__const__uint__tensor__buffering__t" kindref="compound">TTL_duplex_const_uint_tensor_buffering_t</ref></type>
        <definition>static TTL_duplex_const_uint_tensor_buffering_t TTL_start_duplex_buffering</definition>
        <argsstring>(TTL_ext_uint_tensor_t ext_tensor_in, __local uint *int_base_in, TTL_ext_uint_tensor_t ext_tensor_out, __local uint *int_base_out, TTL_event_t(*events)[2], TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_duplex_buffering</name>
        <param>
          <type><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref></type>
          <declname>ext_tensor_in</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref> *</type>
          <declname>int_base_in</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref></type>
          <declname>ext_tensor_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref> *</type>
          <declname>int_base_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref>(*)</type>
          <declname>events</declname>
          <array>[2]</array>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_DUPLEX_BUFFERING_TYPE and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ext_tensor_in</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_in</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local import buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor_out</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_out</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local export buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a list of 2 events. The first event in the list will be used for imports, the second event in the list will be used for exports. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_DUPLEX_BUFFERING_TYPE created from the input parameters.</para>
</simplesect>
The first event in the list will be used for imports, the second event in the list will be used for exports. <linebreak/>
<linebreak/>
 Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
</programlisting> <linebreak/>
 <simplesect kind="return"><para>The TTL_duplex_buffering_t created from the input parameters.</para>
</simplesect>
Solid description of duplex buffering here.</para>
<para>The simplest form of duplex buffering takes the following flow.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers
1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Import The Next Tile into the input buffer;

  :Process the Tile from the input buffer to the output buffer;

  :ExportThe Process Tile from into the output buffer;

endwhile

stop</plantuml>
</para>
<para>This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers 1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Call TTL_step_buffering for the current tile

   This will import the current new tile and export the last tile
   in parallel;

  if (Does the input buffer contain a valid tile? **TTL_tile_empty(...)**) then (yes)
     :Process the Tile from the input buffer to the output buffer;
  endif

endwhile

stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1212" column="58" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1212" bodyend="1228"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1aab1bd49532ba2ae4dee097429f61078f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_finish_buffering</definition>
        <argsstring>(TTL_duplex_const_uint_tensor_buffering_t *const duplex_buffering)</argsstring>
        <name>TTL_finish_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__uint__tensor__buffering__t" kindref="compound">TTL_duplex_const_uint_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1283" column="22" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1283" bodyend="1286"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1aba6cc5cb544518f94f7b51a0a78ed58a" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__io__short__tensor__t" kindref="compound">TTL_io_short_tensor_t</ref></type>
        <definition>static TTL_io_short_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_duplex_const_short_tensor_buffering_t *const duplex_buffering, TTL_tile_t tile_next_import, TTL_tile_t tile_current_export)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__short__tensor__buffering__t" kindref="compound">TTL_duplex_const_short_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_next_import</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_current_export</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1487" column="39" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1487" bodyend="1539" declfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" declline="1381" declcolumn="39"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1a380b01d6fbdb7371deadc92d871c98ab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__duplex__const__short__tensor__buffering__t" kindref="compound">TTL_duplex_const_short_tensor_buffering_t</ref></type>
        <definition>static TTL_duplex_const_short_tensor_buffering_t TTL_start_duplex_buffering</definition>
        <argsstring>(TTL_ext_short_tensor_t ext_tensor_in, __local short *int_base_in, TTL_ext_short_tensor_t ext_tensor_out, __local short *int_base_out, TTL_event_t(*events)[2], TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_duplex_buffering</name>
        <param>
          <type><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref></type>
          <declname>ext_tensor_in</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> short *</type>
          <declname>int_base_in</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref></type>
          <declname>ext_tensor_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> short *</type>
          <declname>int_base_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref>(*)</type>
          <declname>events</declname>
          <array>[2]</array>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_DUPLEX_BUFFERING_TYPE and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ext_tensor_in</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_in</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local import buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor_out</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_out</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local export buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a list of 2 events. The first event in the list will be used for imports, the second event in the list will be used for exports. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_DUPLEX_BUFFERING_TYPE created from the input parameters.</para>
</simplesect>
The first event in the list will be used for imports, the second event in the list will be used for exports. <linebreak/>
<linebreak/>
 Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
</programlisting> <linebreak/>
 <simplesect kind="return"><para>The TTL_duplex_buffering_t created from the input parameters.</para>
</simplesect>
Solid description of duplex buffering here.</para>
<para>The simplest form of duplex buffering takes the following flow.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers
1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Import The Next Tile into the input buffer;

  :Process the Tile from the input buffer to the output buffer;

  :ExportThe Process Tile from into the output buffer;

endwhile

stop</plantuml>
</para>
<para>This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers 1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Call TTL_step_buffering for the current tile

   This will import the current new tile and export the last tile
   in parallel;

  if (Does the input buffer contain a valid tile? **TTL_tile_empty(...)**) then (yes)
     :Process the Tile from the input buffer to the output buffer;
  endif

endwhile

stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1469" column="59" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1469" bodyend="1485"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1a4e2e29e28802180b02c62b08eaf13a12" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_finish_buffering</definition>
        <argsstring>(TTL_duplex_const_short_tensor_buffering_t *const duplex_buffering)</argsstring>
        <name>TTL_finish_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__short__tensor__buffering__t" kindref="compound">TTL_duplex_const_short_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1541" column="22" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1541" bodyend="1544"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1abd49d78f00cf414a39a85af876227dab" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__io__ushort__tensor__t" kindref="compound">TTL_io_ushort_tensor_t</ref></type>
        <definition>static TTL_io_ushort_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_duplex_const_ushort_tensor_buffering_t *const duplex_buffering, TTL_tile_t tile_next_import, TTL_tile_t tile_current_export)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__ushort__tensor__buffering__t" kindref="compound">TTL_duplex_const_ushort_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_next_import</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_current_export</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1745" column="40" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1745" bodyend="1797" declfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" declline="1639" declcolumn="40"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1a9e1465a5cf67dcfc897f48c8a4b350be" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__duplex__const__ushort__tensor__buffering__t" kindref="compound">TTL_duplex_const_ushort_tensor_buffering_t</ref></type>
        <definition>static TTL_duplex_const_ushort_tensor_buffering_t TTL_start_duplex_buffering</definition>
        <argsstring>(TTL_ext_ushort_tensor_t ext_tensor_in, __local ushort *int_base_in, TTL_ext_ushort_tensor_t ext_tensor_out, __local ushort *int_base_out, TTL_event_t(*events)[2], TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_duplex_buffering</name>
        <param>
          <type><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref></type>
          <declname>ext_tensor_in</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref> *</type>
          <declname>int_base_in</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref></type>
          <declname>ext_tensor_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref> *</type>
          <declname>int_base_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref>(*)</type>
          <declname>events</declname>
          <array>[2]</array>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_DUPLEX_BUFFERING_TYPE and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ext_tensor_in</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_in</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local import buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor_out</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_out</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local export buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a list of 2 events. The first event in the list will be used for imports, the second event in the list will be used for exports. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_DUPLEX_BUFFERING_TYPE created from the input parameters.</para>
</simplesect>
The first event in the list will be used for imports, the second event in the list will be used for exports. <linebreak/>
<linebreak/>
 Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
</programlisting> <linebreak/>
 <simplesect kind="return"><para>The TTL_duplex_buffering_t created from the input parameters.</para>
</simplesect>
Solid description of duplex buffering here.</para>
<para>The simplest form of duplex buffering takes the following flow.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers
1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Import The Next Tile into the input buffer;

  :Process the Tile from the input buffer to the output buffer;

  :ExportThe Process Tile from into the output buffer;

endwhile

stop</plantuml>
</para>
<para>This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers 1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Call TTL_step_buffering for the current tile

   This will import the current new tile and export the last tile
   in parallel;

  if (Does the input buffer contain a valid tile? **TTL_tile_empty(...)**) then (yes)
     :Process the Tile from the input buffer to the output buffer;
  endif

endwhile

stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1727" column="60" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1727" bodyend="1743"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1aedef0ce695087e275164f35c8e511da5" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_finish_buffering</definition>
        <argsstring>(TTL_duplex_const_ushort_tensor_buffering_t *const duplex_buffering)</argsstring>
        <name>TTL_finish_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__ushort__tensor__buffering__t" kindref="compound">TTL_duplex_const_ushort_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1799" column="22" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1799" bodyend="1802"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1a6b556b9518a1c11fd0400317cddb7f5c" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__io__long__tensor__t" kindref="compound">TTL_io_long_tensor_t</ref></type>
        <definition>static TTL_io_long_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_duplex_const_long_tensor_buffering_t *const duplex_buffering, TTL_tile_t tile_next_import, TTL_tile_t tile_current_export)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__long__tensor__buffering__t" kindref="compound">TTL_duplex_const_long_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_next_import</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_current_export</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="2003" column="38" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="2003" bodyend="2054" declfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" declline="1897" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1afa608f7ccf5d3ece1fdf3f9cb13115e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__duplex__const__long__tensor__buffering__t" kindref="compound">TTL_duplex_const_long_tensor_buffering_t</ref></type>
        <definition>static TTL_duplex_const_long_tensor_buffering_t TTL_start_duplex_buffering</definition>
        <argsstring>(TTL_ext_long_tensor_t ext_tensor_in, __local long *int_base_in, TTL_ext_long_tensor_t ext_tensor_out, __local long *int_base_out, TTL_event_t(*events)[2], TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_duplex_buffering</name>
        <param>
          <type><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref></type>
          <declname>ext_tensor_in</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> long *</type>
          <declname>int_base_in</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref></type>
          <declname>ext_tensor_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> long *</type>
          <declname>int_base_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref>(*)</type>
          <declname>events</declname>
          <array>[2]</array>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_DUPLEX_BUFFERING_TYPE and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ext_tensor_in</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_in</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local import buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor_out</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_out</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local export buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a list of 2 events. The first event in the list will be used for imports, the second event in the list will be used for exports. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_DUPLEX_BUFFERING_TYPE created from the input parameters.</para>
</simplesect>
The first event in the list will be used for imports, the second event in the list will be used for exports. <linebreak/>
<linebreak/>
 Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
</programlisting> <linebreak/>
 <simplesect kind="return"><para>The TTL_duplex_buffering_t created from the input parameters.</para>
</simplesect>
Solid description of duplex buffering here.</para>
<para>The simplest form of duplex buffering takes the following flow.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers
1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Import The Next Tile into the input buffer;

  :Process the Tile from the input buffer to the output buffer;

  :ExportThe Process Tile from into the output buffer;

endwhile

stop</plantuml>
</para>
<para>This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers 1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Call TTL_step_buffering for the current tile

   This will import the current new tile and export the last tile
   in parallel;

  if (Does the input buffer contain a valid tile? **TTL_tile_empty(...)**) then (yes)
     :Process the Tile from the input buffer to the output buffer;
  endif

endwhile

stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1985" column="58" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1985" bodyend="2001"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1a0e6c18d778a2554869acf14e46bd5b1e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_finish_buffering</definition>
        <argsstring>(TTL_duplex_const_long_tensor_buffering_t *const duplex_buffering)</argsstring>
        <name>TTL_finish_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__long__tensor__buffering__t" kindref="compound">TTL_duplex_const_long_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="2056" column="22" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="2056" bodyend="2059"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1af737974b961a6af9059b00617e0e17de" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__io__ulong__tensor__t" kindref="compound">TTL_io_ulong_tensor_t</ref></type>
        <definition>static TTL_io_ulong_tensor_t TTL_step_buffering</definition>
        <argsstring>(TTL_duplex_const_ulong_tensor_buffering_t *const duplex_buffering, TTL_tile_t tile_next_import, TTL_tile_t tile_current_export)</argsstring>
        <name>TTL_step_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__ulong__tensor__buffering__t" kindref="compound">TTL_duplex_const_ulong_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_next_import</declname>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>tile_current_export</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="2260" column="39" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="2260" bodyend="2312" declfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" declline="2154" declcolumn="39"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1affcfb0281417051ddc2f5980b1c988b6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structTTL__duplex__const__ulong__tensor__buffering__t" kindref="compound">TTL_duplex_const_ulong_tensor_buffering_t</ref></type>
        <definition>static TTL_duplex_const_ulong_tensor_buffering_t TTL_start_duplex_buffering</definition>
        <argsstring>(TTL_ext_ulong_tensor_t ext_tensor_in, __local ulong *int_base_in, TTL_ext_ulong_tensor_t ext_tensor_out, __local ulong *int_base_out, TTL_event_t(*events)[2], TTL_tile_t first_tile)</argsstring>
        <name>TTL_start_duplex_buffering</name>
        <param>
          <type><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref></type>
          <declname>ext_tensor_in</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref> *</type>
          <declname>int_base_in</declname>
        </param>
        <param>
          <type><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref></type>
          <declname>ext_tensor_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> <ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref> *</type>
          <declname>int_base_out</declname>
        </param>
        <param>
          <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref>(*)</type>
          <declname>events</declname>
          <array>[2]</array>
        </param>
        <param>
          <type><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref></type>
          <declname>first_tile</declname>
        </param>
        <briefdescription>
<para>Create a TTL_DUPLEX_BUFFERING_TYPE and begin the buffering process. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ext_tensor_in</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the input in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_in</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local import buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ext_tensor_out</parametername>
</parameternamelist>
<parameterdescription>
<para>A tensor describing the output in global memory </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>int_base_out</parametername>
</parameternamelist>
<parameterdescription>
<para>The address of the local export buffer. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>events</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to a list of 2 events. The first event in the list will be used for imports, the second event in the list will be used for exports. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>first_tile</parametername>
</parameternamelist>
<parameterdescription>
<para>The first tile to fetch for the scheme</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TTL_DUPLEX_BUFFERING_TYPE created from the input parameters.</para>
</simplesect>
The first event in the list will be used for imports, the second event in the list will be used for exports. <linebreak/>
<linebreak/>
 Example: <programlisting><codeline><highlight class="normal">TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
</programlisting> <linebreak/>
 <simplesect kind="return"><para>The TTL_duplex_buffering_t created from the input parameters.</para>
</simplesect>
Solid description of duplex buffering here.</para>
<para>The simplest form of duplex buffering takes the following flow.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers
1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Import The Next Tile into the input buffer;

  :Process the Tile from the input buffer to the output buffer;

  :ExportThe Process Tile from into the output buffer;

endwhile

stop</plantuml>
</para>
<para>This can be optimized and standardized using the TTL_step_buffering call.</para>
<para><plantuml engine="uml">start

:Create a TTL_tiler_t with TTL_create_tiler;
:Create a TTL_duplex_buffering_t Structure with 2 Buffers 1 input buffer, 1 output buffer;
:NumberOfTiles = TTL_number_of_tiles(tiler);

while (for each tile)

  :Call TTL_step_buffering for the current tile

   This will import the current new tile and export the last tile
   in parallel;

  if (Does the input buffer contain a valid tile? **TTL_tile_empty(...)**) then (yes)
     :Process the Tile from the input buffer to the output buffer;
  endif

endwhile

stop</plantuml>
 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="2242" column="59" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="2242" bodyend="2258"/>
      </memberdef>
      <memberdef kind="function" id="TTL__duplex__scheme_8h_1ac07e2bd88021a0bf7ace104988940c2e" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void TTL_finish_buffering</definition>
        <argsstring>(TTL_duplex_const_ulong_tensor_buffering_t *const duplex_buffering)</argsstring>
        <name>TTL_finish_buffering</name>
        <param>
          <type><ref refid="structTTL__duplex__const__ulong__tensor__buffering__t" kindref="compound">TTL_duplex_const_ulong_tensor_buffering_t</ref> *const</type>
          <declname>duplex_buffering</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="2314" column="22" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="2314" bodyend="2317"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Given pair of blocking import and export that can execute concurrently, TTL_duplex_buffering issues them together and then waits on both to complete, hopefully executing them in parallel to each other. This scheme uses two internal buffers, one for the import and one for the export. Note that the export is pipelined to pair the import of the current tile with the export of previous tile.</para>
<para>The following table draws the pipelined actions performed in duplex buffering. It specifies which tile is processed in each iteration:</para>
<para><table rows="6" cols="5"><row>
<entry thead="yes"><para>Action\Iteration   </para>
</entry><entry thead="yes"><para>#0   </para>
</entry><entry thead="yes"><para>#1   </para>
</entry><entry thead="yes"><para>#i (2:NumOfTiles-1)   </para>
</entry><entry thead="yes"><para>#NumOfTiles-    </para>
</entry></row>
<row>
<entry thead="no"><para><bold>Import</bold>   </para>
</entry><entry thead="no"><para>0   </para>
</entry><entry thead="no"><para>1   </para>
</entry><entry thead="no"><para>i   </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><bold>Wait Import</bold>   </para>
</entry><entry thead="no"><para>0   </para>
</entry><entry thead="no"><para>1   </para>
</entry><entry thead="no"><para>i   </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><bold>Compute</bold>   </para>
</entry><entry thead="no"><para>0   </para>
</entry><entry thead="no"><para>1   </para>
</entry><entry thead="no"><para>i   </para>
</entry><entry thead="no"><para></para>
</entry></row>
<row>
<entry thead="no"><para><bold>Export</bold>   </para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para>0   </para>
</entry><entry thead="no"><para>i-1   </para>
</entry><entry thead="no"><para>NumOfTiles-1    </para>
</entry></row>
<row>
<entry thead="no"><para><bold>WaitExport</bold>   </para>
</entry><entry thead="no"><para></para>
</entry><entry thead="no"><para>0   </para>
</entry><entry thead="no"><para>i-1   </para>
</entry><entry thead="no"><para>NumOfTiles-1   </para>
</entry></row>
</table>
</para>
<para>Notice the epilog (#NumOfTiles) which is an extra iteration.</para>
<para>When including this file the following must be defined</para>
<para>#define TTL_TENSOR_TYPE void #define TTL_TENSOR_TYPE uchar etc </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>TTL_duplex_scheme.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="20"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Given<sp/>pair<sp/>of<sp/>blocking<sp/>import<sp/>and<sp/>export<sp/>that<sp/>can<sp/>execute<sp/>concurrently,</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering<sp/>issues<sp/>them<sp/>together<sp/>and<sp/>then<sp/>waits<sp/>on<sp/>both<sp/>to<sp/>complete,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>hopefully<sp/>executing<sp/>them<sp/>in<sp/>parallel<sp/>to<sp/>each<sp/>other.<sp/>This<sp/>scheme<sp/>uses<sp/>two</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers,<sp/>one<sp/>for<sp/>the<sp/>import<sp/>and<sp/>one<sp/>for<sp/>the<sp/>export.<sp/>Note<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>export<sp/>is<sp/>pipelined<sp/>to<sp/>pair<sp/>the<sp/>import<sp/>of<sp/>the<sp/>current<sp/>tile<sp/>with<sp/>the<sp/>export<sp/>of</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>previous<sp/>tile.</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>duplex<sp/>buffering.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-1)<sp/>|<sp/>\#NumOfTiles-<sp/>|</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>|-------------------|-----|-----|----------------------|---------------|</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>epilog<sp/>(\#NumOfTiles)<sp/>which<sp/>is<sp/>an<sp/>extra<sp/>iteration.</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/>When<sp/>including<sp/>this<sp/>file<sp/>the<sp/>following<sp/>must<sp/>be<sp/>defined</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>void</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>uchar</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>etc</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_duplex_buffering.cl</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="59"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>duplex<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_duplex_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>duplex<sp/>buffer</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structTTL__duplex__const__void__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="71" refid="structTTL__duplex__const__void__tensor__buffering__t_1a43a2de08e3aaadeeb0932238490adf7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a43a2de08e3aaadeeb0932238490adf7a" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="structTTL__duplex__const__void__tensor__buffering__t_1a0d843ea530f0d3031039abb0c7494e61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a0d843ea530f0d3031039abb0c7494e61" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="structTTL__duplex__const__void__tensor__buffering__t_1ae4ec0ce3edefce3023d9021e577d9cb6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__void__tensor__buffering__t_1ae4ec0ce3edefce3023d9021e577d9cb6" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="structTTL__duplex__const__void__tensor__buffering__t_1a1c30893f993453fec9bc8622b2ec195b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a1c30893f993453fec9bc8622b2ec195b" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="structTTL__duplex__const__void__tensor__buffering__t_1ae1eaa6c0bda011e89a024e81f821819a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1ae1eaa6c0bda011e89a024e81f821819a" kindref="member">events</ref>)[2];<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>2<sp/>Events<sp/>are<sp/>required,<sp/>1<sp/>first<sp/>is<sp/>used<sp/>for</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>external<sp/>to<sp/>internal<sp/>transfers,<sp/>the<sp/>second<sp/>for</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>internal<sp/>to<sp/>external<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Store<sp/>of<sp/>the<sp/>buffers<sp/>used<sp/>for<sp/>the<sp/>previous<sp/>import/export<sp/>cycles.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="87" refid="structTTL__duplex__const__void__tensor__buffering__t_1a0b50b7f1a72c837b45e5ac808838ae27" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a0b50b7f1a72c837b45e5ac808838ae27" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="88" refid="structTTL__duplex__const__void__tensor__buffering__t_1a7eec8bdce634f8777b8c54cc34bf9c0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__int__void__tensor__t" kindref="compound">TTL_const_int_void_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a7eec8bdce634f8777b8c54cc34bf9c0a" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="89" refid="structTTL__duplex__const__void__tensor__buffering__t_1a8d4c4209c206882a751db20c372f398c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>prev_out_tensors;</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}<sp/><ref refid="structTTL__duplex__const__void__tensor__buffering__t" kindref="compound">TTL_duplex_const_void_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>Predeclare<sp/>TTL_step_buffering.</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__void__tensor__t" kindref="compound">TTL_io_void_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__void__tensor__buffering__t" kindref="compound">TTL_duplex_const_void_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_next_import,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="99"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_in<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_in<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>import<sp/>buffer.</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_out<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_out<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>export<sp/>buffer.</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>@param<sp/>events<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>list<sp/>of<sp/>2<sp/>events.</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,<sp/>the<sp/>second<sp/>event<sp/>in</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>the<sp/>second<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>\n\n<sp/>Example:</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_duplex_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>duplex<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>The<sp/>simplest<sp/>form<sp/>of<sp/>duplex<sp/>buffering<sp/>takes<sp/>the<sp/>following<sp/>flow.</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Import<sp/>The<sp/>Next<sp/>Tile<sp/>into<sp/>the<sp/>input<sp/>buffer;</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:ExportThe<sp/>Process<sp/>Tile<sp/>from<sp/>into<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Call<sp/>TTL_step_buffering<sp/>for<sp/>the<sp/>current<sp/>tile</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>will<sp/>import<sp/>the<sp/>current<sp/>new<sp/>tile<sp/>and<sp/>export<sp/>the<sp/>last<sp/>tile</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>parallel;</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/><sp/><sp/>if<sp/>(Does<sp/>the<sp/>input<sp/>buffer<sp/>contain<sp/>a<sp/>valid<sp/>tile?<sp/>**TTL_tile_empty(...)**)<sp/>then<sp/>(yes)</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="TTL__duplex__scheme_8h_1a970d2a339451a2f0200908eafb3816e4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__void__tensor__buffering__t" kindref="compound">TTL_duplex_const_void_tensor_buffering_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a970d2a339451a2f0200908eafb3816e4" kindref="member">TTL_start_duplex_buffering</ref>(</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/>ext_tensor_in,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*int_base_in,<sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/>ext_tensor_out,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*int_base_out,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*events)[2],<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__void__tensor__buffering__t" kindref="compound">TTL_duplex_const_void_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a0d843ea530f0d3031039abb0c7494e61" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base_in;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a0d843ea530f0d3031039abb0c7494e61" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base_out;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1ae4ec0ce3edefce3023d9021e577d9cb6" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor_in;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a1c30893f993453fec9bc8622b2ec195b" kindref="member">ext_tensor_out</ref><sp/>=<sp/>ext_tensor_out;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1ae1eaa6c0bda011e89a024e81f821819a" kindref="member">events</ref><sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a8d4c4209c206882a751db20c372f398c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a0b50b7f1a72c837b45e5ac808838ae27" kindref="member">to_export_to</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a00267ab9ef837752dca25956f82d4c19" kindref="member">TTL_create_empty_ext_tensor</ref>((<ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)0);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a8d4c4209c206882a751db20c372f398c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a7eec8bdce634f8777b8c54cc34bf9c0a" kindref="member">to_export_from</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a3e46d662aec6627667b79338967918d6" kindref="member">TTL_create_empty_const_int_tensor</ref>((<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)0);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__void__tensor__t" kindref="compound">TTL_io_void_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__void__tensor__buffering__t" kindref="compound">TTL_duplex_const_void_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_import,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export)<sp/>{</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>next_import_layout<sp/>=</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__void__tensor__t" kindref="compound">TTL_const_ext_void_tensor_t</ref><sp/>next_import_ext_tensor<sp/>=</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1ae4ec0ce3edefce3023d9021e577d9cb6" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__void__tensor__t_1a5b0bb68752333233fef05f6c313d1563" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1ae4ec0ce3edefce3023d9021e577d9cb6" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__void__tensor__t_1a051c2ab31c7044f24b19e1622ad670fb" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1ae4ec0ce3edefce3023d9021e577d9cb6" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__void__tensor__t_1a3182027a436f41309fdfc7831e6eeeb1" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__void__sub__tensor__t" kindref="compound">TTL_int_void_sub_tensor_t</ref><sp/>next_import_int_sub_tensor<sp/>=</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a0d843ea530f0d3031039abb0c7494e61" kindref="member">int_base</ref>[0],</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_import_layout,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1ae4ec0ce3edefce3023d9021e577d9cb6" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__void__tensor__t" kindref="compound">TTL_const_int_void_tensor_t</ref><sp/>next_export_int_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a8d4c4209c206882a751db20c372f398c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a7eec8bdce634f8777b8c54cc34bf9c0a" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/>next_export_ext_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a8d4c4209c206882a751db20c372f398c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a0b50b7f1a72c837b45e5ac808838ae27" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__tiles_8h_1a5892a886773f7a902560d0a699838796" kindref="member">TTL_tile_empty</ref>(tile_current_import)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;next_import_int_sub_tensor),</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_import_ext_tensor),</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1ae1eaa6c0bda011e89a024e81f821819a" kindref="member">events</ref>)[0]);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__int__ext__typed__tensors_8h_1a9cb520c261994e69928c4baa157bc77f" kindref="member">TTL_const_int_tensor_empty</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a8d4c4209c206882a751db20c372f398c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a7eec8bdce634f8777b8c54cc34bf9c0a" kindref="member">to_export_from</ref>)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_int_tensor),</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_ext_tensor),</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1ae1eaa6c0bda011e89a024e81f821819a" kindref="member">events</ref>)[1]);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>int_export_layout<sp/>=</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__void__tensor__t" kindref="compound">TTL_ext_void_tensor_t</ref><sp/>to_export_to<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a213750d83b7819861937180f3c771313" kindref="member">TTL_create_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a1c30893f993453fec9bc8622b2ec195b" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__void__tensor__t_1a5b0bb68752333233fef05f6c313d1563" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a1c30893f993453fec9bc8622b2ec195b" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__void__tensor__t_1a051c2ab31c7044f24b19e1622ad670fb" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a1c30893f993453fec9bc8622b2ec195b" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__void__tensor__t_1a3182027a436f41309fdfc7831e6eeeb1" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__void__sub__tensor__t" kindref="compound">TTL_int_void_sub_tensor_t</ref><sp/>to_export_from<sp/>=</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a0d843ea530f0d3031039abb0c7494e61" kindref="member">int_base</ref>[1],</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_export_layout,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a5f805f42fefdff5e36eb2301d49d3d3d" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1ae4ec0ce3edefce3023d9021e577d9cb6" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a8d4c4209c206882a751db20c372f398c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a0b50b7f1a72c837b45e5ac808838ae27" kindref="member">to_export_to</ref><sp/>=<sp/>to_export_to;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a8d4c4209c206882a751db20c372f398c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1a7eec8bdce634f8777b8c54cc34bf9c0a" kindref="member">to_export_from</ref><sp/>=<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;to_export_from.<ref refid="structTTL__int__void__sub__tensor__t_1a6982437fd1ed4c1c2761c53c1f25a35d" kindref="member">tensor</ref>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a9ab49a751ac68ef2faec162bc9d8d70b" kindref="member">TTL_wait</ref>(2,<sp/>*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__void__tensor__buffering__t_1ae1eaa6c0bda011e89a024e81f821819a" kindref="member">events</ref>);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__schemes__common_8h_1a1dcf4226f1b764153f394b1a51365e41" kindref="member">TTL_create_io_tensors</ref>(next_import_int_sub_tensor,<sp/>to_export_from);</highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="TTL__duplex__scheme_8h_1a86e15576523b42c731f1a2bb1c9cbf13" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a86e15576523b42c731f1a2bb1c9cbf13" kindref="member">TTL_finish_buffering</ref>(</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__void__tensor__buffering__t" kindref="compound">TTL_duplex_const_void_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(duplex_buffering,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>(),<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="259"><highlight class="comment"><sp/>*<sp/>TTL_duplex_scheme.h</highlight></codeline>
<codeline lineno="260"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="261"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="272"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="273"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="277"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/>Given<sp/>pair<sp/>of<sp/>blocking<sp/>import<sp/>and<sp/>export<sp/>that<sp/>can<sp/>execute<sp/>concurrently,</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering<sp/>issues<sp/>them<sp/>together<sp/>and<sp/>then<sp/>waits<sp/>on<sp/>both<sp/>to<sp/>complete,</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*<sp/>hopefully<sp/>executing<sp/>them<sp/>in<sp/>parallel<sp/>to<sp/>each<sp/>other.<sp/>This<sp/>scheme<sp/>uses<sp/>two</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers,<sp/>one<sp/>for<sp/>the<sp/>import<sp/>and<sp/>one<sp/>for<sp/>the<sp/>export.<sp/>Note<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>*<sp/>export<sp/>is<sp/>pipelined<sp/>to<sp/>pair<sp/>the<sp/>import<sp/>of<sp/>the<sp/>current<sp/>tile<sp/>with<sp/>the<sp/>export<sp/>of</highlight></codeline>
<codeline lineno="285"><highlight class="comment"><sp/>*<sp/>previous<sp/>tile.</highlight></codeline>
<codeline lineno="286"><highlight class="comment"></highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>duplex<sp/>buffering.</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-1)<sp/>|<sp/>\#NumOfTiles-<sp/>|</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/>|-------------------|-----|-----|----------------------|---------------|</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="295"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="296"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="297"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="298"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>epilog<sp/>(\#NumOfTiles)<sp/>which<sp/>is<sp/>an<sp/>extra<sp/>iteration.</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>When<sp/>including<sp/>this<sp/>file<sp/>the<sp/>following<sp/>must<sp/>be<sp/>defined</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>void</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>uchar</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/>etc</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_duplex_buffering.cl</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="316"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="320"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="321"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>duplex<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_duplex_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>duplex<sp/>buffer</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326" refid="structTTL__duplex__const__char__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="328" refid="structTTL__duplex__const__char__tensor__buffering__t_1a79de171cb59612e266c36ba7186cfcc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a79de171cb59612e266c36ba7186cfcc1" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330" refid="structTTL__duplex__const__char__tensor__buffering__t_1a214d41a892a70963385aba822a929d51" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a214d41a892a70963385aba822a929d51" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="structTTL__duplex__const__char__tensor__buffering__t_1a10afa1377e9df24db5b0ced69f28ca9f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a10afa1377e9df24db5b0ced69f28ca9f" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332" refid="structTTL__duplex__const__char__tensor__buffering__t_1a1a032d32322522b6157352e467387188" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a1a032d32322522b6157352e467387188" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333" refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335" refid="structTTL__duplex__const__char__tensor__buffering__t_1ac62cf31af55c7f3d4d36bc15ea0bbd55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1ac62cf31af55c7f3d4d36bc15ea0bbd55" kindref="member">events</ref>)[2];<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>2<sp/>Events<sp/>are<sp/>required,<sp/>1<sp/>first<sp/>is<sp/>used<sp/>for</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>external<sp/>to<sp/>internal<sp/>transfers,<sp/>the<sp/>second<sp/>for</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>internal<sp/>to<sp/>external<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Store<sp/>of<sp/>the<sp/>buffers<sp/>used<sp/>for<sp/>the<sp/>previous<sp/>import/export<sp/>cycles.</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="344" refid="structTTL__duplex__const__char__tensor__buffering__t_1ad47ddd9168fb75743892ccccd7b5d406" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__char__tensor__buffering__t_1ad47ddd9168fb75743892ccccd7b5d406" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="345" refid="structTTL__duplex__const__char__tensor__buffering__t_1ac91c306322c7e196e5124cecb366c1b7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__int__char__tensor__t" kindref="compound">TTL_const_int_char_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__char__tensor__buffering__t_1ac91c306322c7e196e5124cecb366c1b7" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="346" refid="structTTL__duplex__const__char__tensor__buffering__t_1a041c97cfe7652bf646d4322be4fb8cee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>prev_out_tensors;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}<sp/><ref refid="structTTL__duplex__const__char__tensor__buffering__t" kindref="compound">TTL_duplex_const_char_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>*<sp/>Predeclare<sp/>TTL_step_buffering.</highlight></codeline>
<codeline lineno="351"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__char__tensor__t" kindref="compound">TTL_io_char_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__char__tensor__buffering__t" kindref="compound">TTL_duplex_const_char_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_next_import,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="356"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_in<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="360"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_in<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>import<sp/>buffer.</highlight></codeline>
<codeline lineno="361"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_out<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_out<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>export<sp/>buffer.</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*<sp/>@param<sp/>events<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>list<sp/>of<sp/>2<sp/>events.</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,<sp/>the<sp/>second<sp/>event<sp/>in</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/>the<sp/>second<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/>\n\n<sp/>Example:</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline lineno="377"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_duplex_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>duplex<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*<sp/>The<sp/>simplest<sp/>form<sp/>of<sp/>duplex<sp/>buffering<sp/>takes<sp/>the<sp/>following<sp/>flow.</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Import<sp/>The<sp/>Next<sp/>Tile<sp/>into<sp/>the<sp/>input<sp/>buffer;</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="402"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="403"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="404"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:ExportThe<sp/>Process<sp/>Tile<sp/>from<sp/>into<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Call<sp/>TTL_step_buffering<sp/>for<sp/>the<sp/>current<sp/>tile</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="427"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>will<sp/>import<sp/>the<sp/>current<sp/>new<sp/>tile<sp/>and<sp/>export<sp/>the<sp/>last<sp/>tile</highlight></codeline>
<codeline lineno="428"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>parallel;</highlight></codeline>
<codeline lineno="429"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="430"><highlight class="comment"><sp/>*<sp/><sp/><sp/>if<sp/>(Does<sp/>the<sp/>input<sp/>buffer<sp/>contain<sp/>a<sp/>valid<sp/>tile?<sp/>**TTL_tile_empty(...)**)<sp/>then<sp/>(yes)</highlight></codeline>
<codeline lineno="431"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="432"><highlight class="comment"><sp/>*<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440" refid="TTL__duplex__scheme_8h_1a3bbfcb346b5f4d1c116740c0664738f2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__char__tensor__buffering__t" kindref="compound">TTL_duplex_const_char_tensor_buffering_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a970d2a339451a2f0200908eafb3816e4" kindref="member">TTL_start_duplex_buffering</ref>(</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/>ext_tensor_in,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*int_base_in,<sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/>ext_tensor_out,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*int_base_out,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*events)[2],<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__char__tensor__buffering__t" kindref="compound">TTL_duplex_const_char_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a214d41a892a70963385aba822a929d51" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base_in;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a214d41a892a70963385aba822a929d51" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base_out;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a10afa1377e9df24db5b0ced69f28ca9f" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor_in;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a1a032d32322522b6157352e467387188" kindref="member">ext_tensor_out</ref><sp/>=<sp/>ext_tensor_out;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1ac62cf31af55c7f3d4d36bc15ea0bbd55" kindref="member">events</ref><sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a041c97cfe7652bf646d4322be4fb8cee" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1ad47ddd9168fb75743892ccccd7b5d406" kindref="member">to_export_to</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a00267ab9ef837752dca25956f82d4c19" kindref="member">TTL_create_empty_ext_tensor</ref>((<ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)0);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a041c97cfe7652bf646d4322be4fb8cee" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1ac91c306322c7e196e5124cecb366c1b7" kindref="member">to_export_from</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a3e46d662aec6627667b79338967918d6" kindref="member">TTL_create_empty_const_int_tensor</ref>((<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)0);</highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="TTL__duplex__scheme_8h_1a2fc7e137ba39e8d821ac1906292b0441" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__char__tensor__t" kindref="compound">TTL_io_char_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__char__tensor__buffering__t" kindref="compound">TTL_duplex_const_char_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_import,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export)<sp/>{</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>next_import_layout<sp/>=</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__char__tensor__t" kindref="compound">TTL_const_ext_char_tensor_t</ref><sp/>next_import_ext_tensor<sp/>=</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a10afa1377e9df24db5b0ced69f28ca9f" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__char__tensor__t_1aa81cd772838f293873200a9446deb242" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a10afa1377e9df24db5b0ced69f28ca9f" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__char__tensor__t_1a83a74e2a68e2817843285dbe439a0332" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a10afa1377e9df24db5b0ced69f28ca9f" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__char__tensor__t_1a9dc3f322643bce042703e2752916486f" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref><sp/>next_import_int_sub_tensor<sp/>=</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a214d41a892a70963385aba822a929d51" kindref="member">int_base</ref>[0],</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_import_layout,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a10afa1377e9df24db5b0ced69f28ca9f" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__char__tensor__t" kindref="compound">TTL_const_int_char_tensor_t</ref><sp/>next_export_int_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a041c97cfe7652bf646d4322be4fb8cee" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1ac91c306322c7e196e5124cecb366c1b7" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/>next_export_ext_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a041c97cfe7652bf646d4322be4fb8cee" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1ad47ddd9168fb75743892ccccd7b5d406" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__tiles_8h_1a5892a886773f7a902560d0a699838796" kindref="member">TTL_tile_empty</ref>(tile_current_import)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;next_import_int_sub_tensor),</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_import_ext_tensor),</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1ac62cf31af55c7f3d4d36bc15ea0bbd55" kindref="member">events</ref>)[0]);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__int__ext__typed__tensors_8h_1a9cb520c261994e69928c4baa157bc77f" kindref="member">TTL_const_int_tensor_empty</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a041c97cfe7652bf646d4322be4fb8cee" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1ac91c306322c7e196e5124cecb366c1b7" kindref="member">to_export_from</ref>)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_int_tensor),</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_ext_tensor),</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1ac62cf31af55c7f3d4d36bc15ea0bbd55" kindref="member">events</ref>)[1]);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>int_export_layout<sp/>=</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__char__tensor__t" kindref="compound">TTL_ext_char_tensor_t</ref><sp/>to_export_to<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a213750d83b7819861937180f3c771313" kindref="member">TTL_create_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a1a032d32322522b6157352e467387188" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__char__tensor__t_1aa81cd772838f293873200a9446deb242" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a1a032d32322522b6157352e467387188" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__char__tensor__t_1a83a74e2a68e2817843285dbe439a0332" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a1a032d32322522b6157352e467387188" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__char__tensor__t_1a9dc3f322643bce042703e2752916486f" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__char__sub__tensor__t" kindref="compound">TTL_int_char_sub_tensor_t</ref><sp/>to_export_from<sp/>=</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a214d41a892a70963385aba822a929d51" kindref="member">int_base</ref>[1],</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_export_layout,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a30bca6f06340fe2390d73788ad72f52b" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a10afa1377e9df24db5b0ced69f28ca9f" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a041c97cfe7652bf646d4322be4fb8cee" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1ad47ddd9168fb75743892ccccd7b5d406" kindref="member">to_export_to</ref><sp/>=<sp/>to_export_to;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1a041c97cfe7652bf646d4322be4fb8cee" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1ac91c306322c7e196e5124cecb366c1b7" kindref="member">to_export_from</ref><sp/>=<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;to_export_from.<ref refid="structTTL__int__char__sub__tensor__t_1ac40da05a058ce5c747c09e8cac6126f4" kindref="member">tensor</ref>);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a9ab49a751ac68ef2faec162bc9d8d70b" kindref="member">TTL_wait</ref>(2,<sp/>*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__char__tensor__buffering__t_1ac62cf31af55c7f3d4d36bc15ea0bbd55" kindref="member">events</ref>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__schemes__common_8h_1a1dcf4226f1b764153f394b1a51365e41" kindref="member">TTL_create_io_tensors</ref>(next_import_int_sub_tensor,<sp/>to_export_from);</highlight></codeline>
<codeline lineno="509"><highlight class="normal">}</highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight></codeline>
<codeline lineno="511" refid="TTL__duplex__scheme_8h_1a1daf715d9c2f76a97776271a55a4e169" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a86e15576523b42c731f1a2bb1c9cbf13" kindref="member">TTL_finish_buffering</ref>(</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__char__tensor__buffering__t" kindref="compound">TTL_duplex_const_char_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering)<sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(duplex_buffering,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>(),<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="514"><highlight class="normal">}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="516"><highlight class="comment"><sp/>*<sp/>TTL_duplex_scheme.h</highlight></codeline>
<codeline lineno="517"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="518"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="519"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="520"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="521"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="522"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="523"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="524"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="525"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="528"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="529"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="530"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="531"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="534"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="535"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="536"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="537"><highlight class="comment"><sp/>*<sp/>Given<sp/>pair<sp/>of<sp/>blocking<sp/>import<sp/>and<sp/>export<sp/>that<sp/>can<sp/>execute<sp/>concurrently,</highlight></codeline>
<codeline lineno="538"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering<sp/>issues<sp/>them<sp/>together<sp/>and<sp/>then<sp/>waits<sp/>on<sp/>both<sp/>to<sp/>complete,</highlight></codeline>
<codeline lineno="539"><highlight class="comment"><sp/>*<sp/>hopefully<sp/>executing<sp/>them<sp/>in<sp/>parallel<sp/>to<sp/>each<sp/>other.<sp/>This<sp/>scheme<sp/>uses<sp/>two</highlight></codeline>
<codeline lineno="540"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers,<sp/>one<sp/>for<sp/>the<sp/>import<sp/>and<sp/>one<sp/>for<sp/>the<sp/>export.<sp/>Note<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="541"><highlight class="comment"><sp/>*<sp/>export<sp/>is<sp/>pipelined<sp/>to<sp/>pair<sp/>the<sp/>import<sp/>of<sp/>the<sp/>current<sp/>tile<sp/>with<sp/>the<sp/>export<sp/>of</highlight></codeline>
<codeline lineno="542"><highlight class="comment"><sp/>*<sp/>previous<sp/>tile.</highlight></codeline>
<codeline lineno="543"><highlight class="comment"></highlight></codeline>
<codeline lineno="544"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>duplex<sp/>buffering.</highlight></codeline>
<codeline lineno="545"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="546"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="547"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-1)<sp/>|<sp/>\#NumOfTiles-<sp/>|</highlight></codeline>
<codeline lineno="548"><highlight class="comment"><sp/>*<sp/>|-------------------|-----|-----|----------------------|---------------|</highlight></codeline>
<codeline lineno="549"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="550"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="551"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="552"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="553"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="554"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="555"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>epilog<sp/>(\#NumOfTiles)<sp/>which<sp/>is<sp/>an<sp/>extra<sp/>iteration.</highlight></codeline>
<codeline lineno="556"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="557"><highlight class="comment"><sp/>*<sp/>When<sp/>including<sp/>this<sp/>file<sp/>the<sp/>following<sp/>must<sp/>be<sp/>defined</highlight></codeline>
<codeline lineno="558"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="559"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>void</highlight></codeline>
<codeline lineno="560"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>uchar</highlight></codeline>
<codeline lineno="561"><highlight class="comment"><sp/>*<sp/>etc</highlight></codeline>
<codeline lineno="562"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="563"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_duplex_buffering.cl</highlight></codeline>
<codeline lineno="564"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="573"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="574"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="575"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="577"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="578"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>duplex<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="579"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="580"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_duplex_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>duplex<sp/>buffer</highlight></codeline>
<codeline lineno="581"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="582"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583" refid="structTTL__duplex__const__uchar__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="585" refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a5d2de30cde9a9a028a619a1cbc780646" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a5d2de30cde9a9a028a619a1cbc780646" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="586"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587" refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a7a416956d040719375037973e4d9e349" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a7a416956d040719375037973e4d9e349" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a26020ffb4f563f51365fffc774e33126" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a26020ffb4f563f51365fffc774e33126" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589" refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a24b77a298cc2538e579d3b1606f43f55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a24b77a298cc2538e579d3b1606f43f55" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight></codeline>
<codeline lineno="592" refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a356b255a838b09d63d0fa09d7989dda2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a356b255a838b09d63d0fa09d7989dda2" kindref="member">events</ref>)[2];<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>2<sp/>Events<sp/>are<sp/>required,<sp/>1<sp/>first<sp/>is<sp/>used<sp/>for</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="593"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>external<sp/>to<sp/>internal<sp/>transfers,<sp/>the<sp/>second<sp/>for</highlight></codeline>
<codeline lineno="594"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>internal<sp/>to<sp/>external<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="596"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="597"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Store<sp/>of<sp/>the<sp/>buffers<sp/>used<sp/>for<sp/>the<sp/>previous<sp/>import/export<sp/>cycles.</highlight></codeline>
<codeline lineno="598"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="599"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="601" refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a11d7bb214b083063859ab21d3f8ed2bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a11d7bb214b083063859ab21d3f8ed2bc" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="602" refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a858fd080e8b44492cc56e0d249dd8a0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__int__uchar__tensor__t" kindref="compound">TTL_const_int_uchar_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a858fd080e8b44492cc56e0d249dd8a0a" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="603" refid="structTTL__duplex__const__uchar__tensor__buffering__t_1adfc677ae0f682862607f017a379cba5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>prev_out_tensors;</highlight></codeline>
<codeline lineno="604"><highlight class="normal">}<sp/><ref refid="structTTL__duplex__const__uchar__tensor__buffering__t" kindref="compound">TTL_duplex_const_uchar_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*<sp/>Predeclare<sp/>TTL_step_buffering.</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__uchar__tensor__t" kindref="compound">TTL_io_uchar_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__uchar__tensor__buffering__t" kindref="compound">TTL_duplex_const_uchar_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_next_import,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="613"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="614"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="615"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_in<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_in<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>import<sp/>buffer.</highlight></codeline>
<codeline lineno="618"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_out<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="619"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_out<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>export<sp/>buffer.</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/>*<sp/>@param<sp/>events<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>list<sp/>of<sp/>2<sp/>events.</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,<sp/>the<sp/>second<sp/>event<sp/>in</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/>*<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="623"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="624"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="625"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="626"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="627"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,</highlight></codeline>
<codeline lineno="628"><highlight class="comment"><sp/>*<sp/>the<sp/>second<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="629"><highlight class="comment"><sp/>*<sp/>\n\n<sp/>Example:</highlight></codeline>
<codeline lineno="630"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="631"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline lineno="632"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="633"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline lineno="634"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline lineno="635"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline lineno="636"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
<codeline lineno="637"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="638"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="639"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="640"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_duplex_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="641"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="642"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>duplex<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="643"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="644"><highlight class="comment"><sp/>*<sp/>The<sp/>simplest<sp/>form<sp/>of<sp/>duplex<sp/>buffering<sp/>takes<sp/>the<sp/>following<sp/>flow.</highlight></codeline>
<codeline lineno="645"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="646"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="647"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/>*<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="653"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="654"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="655"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="656"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="657"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Import<sp/>The<sp/>Next<sp/>Tile<sp/>into<sp/>the<sp/>input<sp/>buffer;</highlight></codeline>
<codeline lineno="658"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="659"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="660"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="661"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:ExportThe<sp/>Process<sp/>Tile<sp/>from<sp/>into<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="662"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="663"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="664"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="665"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="666"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="667"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="668"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="669"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="670"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="671"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="672"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="673"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="674"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="675"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="676"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="677"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="680"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="681"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Call<sp/>TTL_step_buffering<sp/>for<sp/>the<sp/>current<sp/>tile</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>will<sp/>import<sp/>the<sp/>current<sp/>new<sp/>tile<sp/>and<sp/>export<sp/>the<sp/>last<sp/>tile</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>parallel;</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/>*<sp/><sp/><sp/>if<sp/>(Does<sp/>the<sp/>input<sp/>buffer<sp/>contain<sp/>a<sp/>valid<sp/>tile?<sp/>**TTL_tile_empty(...)**)<sp/>then<sp/>(yes)</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/>*<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="693"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="694"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="695"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="696"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697" refid="TTL__duplex__scheme_8h_1ac16a34804f82b1e9723a495152bda304" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__uchar__tensor__buffering__t" kindref="compound">TTL_duplex_const_uchar_tensor_buffering_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a970d2a339451a2f0200908eafb3816e4" kindref="member">TTL_start_duplex_buffering</ref>(</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/>ext_tensor_in,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*int_base_in,<sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/>ext_tensor_out,</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*int_base_out,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*events)[2],<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__uchar__tensor__buffering__t" kindref="compound">TTL_duplex_const_uchar_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a7a416956d040719375037973e4d9e349" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base_in;</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a7a416956d040719375037973e4d9e349" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base_out;</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a26020ffb4f563f51365fffc774e33126" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor_in;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a24b77a298cc2538e579d3b1606f43f55" kindref="member">ext_tensor_out</ref><sp/>=<sp/>ext_tensor_out;</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a356b255a838b09d63d0fa09d7989dda2" kindref="member">events</ref><sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1adfc677ae0f682862607f017a379cba5c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a11d7bb214b083063859ab21d3f8ed2bc" kindref="member">to_export_to</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a00267ab9ef837752dca25956f82d4c19" kindref="member">TTL_create_empty_ext_tensor</ref>((<ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*)0);</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1adfc677ae0f682862607f017a379cba5c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a858fd080e8b44492cc56e0d249dd8a0a" kindref="member">to_export_from</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a3e46d662aec6627667b79338967918d6" kindref="member">TTL_create_empty_const_int_tensor</ref>((<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a65f85814a8290f9797005d3b28e7e5fc" kindref="member">uchar</ref><sp/>*)0);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="713"><highlight class="normal">}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight></codeline>
<codeline lineno="715" refid="TTL__duplex__scheme_8h_1a1bb2c28cb645d09f66803742558ac628" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__uchar__tensor__t" kindref="compound">TTL_io_uchar_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__uchar__tensor__buffering__t" kindref="compound">TTL_duplex_const_uchar_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_import,</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export)<sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>next_import_layout<sp/>=</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__uchar__tensor__t" kindref="compound">TTL_const_ext_uchar_tensor_t</ref><sp/>next_import_ext_tensor<sp/>=</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a26020ffb4f563f51365fffc774e33126" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__uchar__tensor__t_1a020bf0c5fb2f3eaa714c476823daad29" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a26020ffb4f563f51365fffc774e33126" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__uchar__tensor__t_1a0e05ccaad4b46af1788ec4cec577da35" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a26020ffb4f563f51365fffc774e33126" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__uchar__tensor__t_1a27e3007baadd76271245cff74412075a" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref><sp/>next_import_int_sub_tensor<sp/>=</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a7a416956d040719375037973e4d9e349" kindref="member">int_base</ref>[0],</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_import_layout,</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a26020ffb4f563f51365fffc774e33126" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__uchar__tensor__t" kindref="compound">TTL_const_int_uchar_tensor_t</ref><sp/>next_export_int_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1adfc677ae0f682862607f017a379cba5c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a858fd080e8b44492cc56e0d249dd8a0a" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/>next_export_ext_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1adfc677ae0f682862607f017a379cba5c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a11d7bb214b083063859ab21d3f8ed2bc" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__tiles_8h_1a5892a886773f7a902560d0a699838796" kindref="member">TTL_tile_empty</ref>(tile_current_import)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;next_import_int_sub_tensor),</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_import_ext_tensor),</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a356b255a838b09d63d0fa09d7989dda2" kindref="member">events</ref>)[0]);</highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__int__ext__typed__tensors_8h_1a9cb520c261994e69928c4baa157bc77f" kindref="member">TTL_const_int_tensor_empty</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1adfc677ae0f682862607f017a379cba5c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a858fd080e8b44492cc56e0d249dd8a0a" kindref="member">to_export_from</ref>)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_int_tensor),</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_ext_tensor),</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a356b255a838b09d63d0fa09d7989dda2" kindref="member">events</ref>)[1]);</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>int_export_layout<sp/>=</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uchar__tensor__t" kindref="compound">TTL_ext_uchar_tensor_t</ref><sp/>to_export_to<sp/>=</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a213750d83b7819861937180f3c771313" kindref="member">TTL_create_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a24b77a298cc2538e579d3b1606f43f55" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__uchar__tensor__t_1a020bf0c5fb2f3eaa714c476823daad29" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a24b77a298cc2538e579d3b1606f43f55" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__uchar__tensor__t_1a0e05ccaad4b46af1788ec4cec577da35" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a24b77a298cc2538e579d3b1606f43f55" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__uchar__tensor__t_1a27e3007baadd76271245cff74412075a" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uchar__sub__tensor__t" kindref="compound">TTL_int_uchar_sub_tensor_t</ref><sp/>to_export_from<sp/>=</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a7a416956d040719375037973e4d9e349" kindref="member">int_base</ref>[1],</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_export_layout,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a6486660962d5315a801d5f7fe707ebd8" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a26020ffb4f563f51365fffc774e33126" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1adfc677ae0f682862607f017a379cba5c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a11d7bb214b083063859ab21d3f8ed2bc" kindref="member">to_export_to</ref><sp/>=<sp/>to_export_to;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1adfc677ae0f682862607f017a379cba5c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a858fd080e8b44492cc56e0d249dd8a0a" kindref="member">to_export_from</ref><sp/>=<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;to_export_from.<ref refid="structTTL__int__uchar__sub__tensor__t_1a5877c1955a452d871aeb663a28d53787" kindref="member">tensor</ref>);</highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a9ab49a751ac68ef2faec162bc9d8d70b" kindref="member">TTL_wait</ref>(2,<sp/>*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uchar__tensor__buffering__t_1a356b255a838b09d63d0fa09d7989dda2" kindref="member">events</ref>);</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__schemes__common_8h_1a1dcf4226f1b764153f394b1a51365e41" kindref="member">TTL_create_io_tensors</ref>(next_import_int_sub_tensor,<sp/>to_export_from);</highlight></codeline>
<codeline lineno="767"><highlight class="normal">}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769" refid="TTL__duplex__scheme_8h_1ab8b0ad39eb5bca9cbd9c5dbfe0228510" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a86e15576523b42c731f1a2bb1c9cbf13" kindref="member">TTL_finish_buffering</ref>(</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__uchar__tensor__buffering__t" kindref="compound">TTL_duplex_const_uchar_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering)<sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(duplex_buffering,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>(),<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="772"><highlight class="normal">}</highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="774"><highlight class="comment"><sp/>*<sp/>TTL_duplex_scheme.h</highlight></codeline>
<codeline lineno="775"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="776"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="777"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="780"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="781"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="782"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="783"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="784"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="785"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="786"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="787"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="788"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="789"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="792"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="793"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="794"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="795"><highlight class="comment"><sp/>*<sp/>Given<sp/>pair<sp/>of<sp/>blocking<sp/>import<sp/>and<sp/>export<sp/>that<sp/>can<sp/>execute<sp/>concurrently,</highlight></codeline>
<codeline lineno="796"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering<sp/>issues<sp/>them<sp/>together<sp/>and<sp/>then<sp/>waits<sp/>on<sp/>both<sp/>to<sp/>complete,</highlight></codeline>
<codeline lineno="797"><highlight class="comment"><sp/>*<sp/>hopefully<sp/>executing<sp/>them<sp/>in<sp/>parallel<sp/>to<sp/>each<sp/>other.<sp/>This<sp/>scheme<sp/>uses<sp/>two</highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers,<sp/>one<sp/>for<sp/>the<sp/>import<sp/>and<sp/>one<sp/>for<sp/>the<sp/>export.<sp/>Note<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/>*<sp/>export<sp/>is<sp/>pipelined<sp/>to<sp/>pair<sp/>the<sp/>import<sp/>of<sp/>the<sp/>current<sp/>tile<sp/>with<sp/>the<sp/>export<sp/>of</highlight></codeline>
<codeline lineno="800"><highlight class="comment"><sp/>*<sp/>previous<sp/>tile.</highlight></codeline>
<codeline lineno="801"><highlight class="comment"></highlight></codeline>
<codeline lineno="802"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>duplex<sp/>buffering.</highlight></codeline>
<codeline lineno="803"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="804"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="805"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-1)<sp/>|<sp/>\#NumOfTiles-<sp/>|</highlight></codeline>
<codeline lineno="806"><highlight class="comment"><sp/>*<sp/>|-------------------|-----|-----|----------------------|---------------|</highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="808"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="809"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="813"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>epilog<sp/>(\#NumOfTiles)<sp/>which<sp/>is<sp/>an<sp/>extra<sp/>iteration.</highlight></codeline>
<codeline lineno="814"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="815"><highlight class="comment"><sp/>*<sp/>When<sp/>including<sp/>this<sp/>file<sp/>the<sp/>following<sp/>must<sp/>be<sp/>defined</highlight></codeline>
<codeline lineno="816"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="817"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>void</highlight></codeline>
<codeline lineno="818"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>uchar</highlight></codeline>
<codeline lineno="819"><highlight class="comment"><sp/>*<sp/>etc</highlight></codeline>
<codeline lineno="820"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="821"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_duplex_buffering.cl</highlight></codeline>
<codeline lineno="822"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="831"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="832"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="833"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="835"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="836"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>duplex<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="837"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="838"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_duplex_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>duplex<sp/>buffer</highlight></codeline>
<codeline lineno="839"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="840"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841" refid="structTTL__duplex__const__int__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="843" refid="structTTL__duplex__const__int__tensor__buffering__t_1ad5b2fea9450bf7bb2a95f98efe9a1505" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__int__tensor__buffering__t_1ad5b2fea9450bf7bb2a95f98efe9a1505" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="844"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="845" refid="structTTL__duplex__const__int__tensor__buffering__t_1a422ada4dbf9bac3ec0894d472a88b964" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a422ada4dbf9bac3ec0894d472a88b964" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846" refid="structTTL__duplex__const__int__tensor__buffering__t_1a81407b54682d44cff3e95cb4d086b8c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a81407b54682d44cff3e95cb4d086b8c3" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847" refid="structTTL__duplex__const__int__tensor__buffering__t_1abd25c255b7e1f71b345dc7ee509edcb0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__int__tensor__buffering__t_1abd25c255b7e1f71b345dc7ee509edcb0" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848" refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850" refid="structTTL__duplex__const__int__tensor__buffering__t_1a6bebf1ee4604bc9e6c70803c756fe8ec" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a6bebf1ee4604bc9e6c70803c756fe8ec" kindref="member">events</ref>)[2];<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>2<sp/>Events<sp/>are<sp/>required,<sp/>1<sp/>first<sp/>is<sp/>used<sp/>for</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="851"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>external<sp/>to<sp/>internal<sp/>transfers,<sp/>the<sp/>second<sp/>for</highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>internal<sp/>to<sp/>external<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="855"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Store<sp/>of<sp/>the<sp/>buffers<sp/>used<sp/>for<sp/>the<sp/>previous<sp/>import/export<sp/>cycles.</highlight></codeline>
<codeline lineno="856"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="857"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="859" refid="structTTL__duplex__const__int__tensor__buffering__t_1adfa0b1a31341381dca3a733c074ec2bc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__int__tensor__buffering__t_1adfa0b1a31341381dca3a733c074ec2bc" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="860" refid="structTTL__duplex__const__int__tensor__buffering__t_1a8e8a4c8bc96baf2d50cf9f958b215825" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__int__int__tensor__t" kindref="compound">TTL_const_int_int_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a8e8a4c8bc96baf2d50cf9f958b215825" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="861" refid="structTTL__duplex__const__int__tensor__buffering__t_1adb1efb98ff96dc58261500bf9d9fea2d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>prev_out_tensors;</highlight></codeline>
<codeline lineno="862"><highlight class="normal">}<sp/><ref refid="structTTL__duplex__const__int__tensor__buffering__t" kindref="compound">TTL_duplex_const_int_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/>*<sp/>Predeclare<sp/>TTL_step_buffering.</highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__int__tensor__t" kindref="compound">TTL_io_int_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__int__tensor__buffering__t" kindref="compound">TTL_duplex_const_int_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_next_import,</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="871"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="872"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="873"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="874"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_in<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="875"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_in<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>import<sp/>buffer.</highlight></codeline>
<codeline lineno="876"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_out<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="877"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_out<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>export<sp/>buffer.</highlight></codeline>
<codeline lineno="878"><highlight class="comment"><sp/>*<sp/>@param<sp/>events<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>list<sp/>of<sp/>2<sp/>events.</highlight></codeline>
<codeline lineno="879"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,<sp/>the<sp/>second<sp/>event<sp/>in</highlight></codeline>
<codeline lineno="880"><highlight class="comment"><sp/>*<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="881"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="882"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="883"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="884"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="885"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,</highlight></codeline>
<codeline lineno="886"><highlight class="comment"><sp/>*<sp/>the<sp/>second<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="887"><highlight class="comment"><sp/>*<sp/>\n\n<sp/>Example:</highlight></codeline>
<codeline lineno="888"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="889"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline lineno="890"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="891"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline lineno="892"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline lineno="893"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline lineno="894"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
<codeline lineno="895"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="896"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="897"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="898"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_duplex_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="899"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="900"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>duplex<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="901"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="902"><highlight class="comment"><sp/>*<sp/>The<sp/>simplest<sp/>form<sp/>of<sp/>duplex<sp/>buffering<sp/>takes<sp/>the<sp/>following<sp/>flow.</highlight></codeline>
<codeline lineno="903"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="904"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="905"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="906"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="907"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="908"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="909"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers</highlight></codeline>
<codeline lineno="910"><highlight class="comment"><sp/>*<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="911"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="912"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="913"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="914"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="915"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Import<sp/>The<sp/>Next<sp/>Tile<sp/>into<sp/>the<sp/>input<sp/>buffer;</highlight></codeline>
<codeline lineno="916"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="917"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="918"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:ExportThe<sp/>Process<sp/>Tile<sp/>from<sp/>into<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="920"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="921"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="922"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="923"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="924"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="925"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="928"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="930"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="931"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="932"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="933"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="934"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="935"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="939"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="940"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Call<sp/>TTL_step_buffering<sp/>for<sp/>the<sp/>current<sp/>tile</highlight></codeline>
<codeline lineno="941"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="942"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>will<sp/>import<sp/>the<sp/>current<sp/>new<sp/>tile<sp/>and<sp/>export<sp/>the<sp/>last<sp/>tile</highlight></codeline>
<codeline lineno="943"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>parallel;</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/>*<sp/><sp/><sp/>if<sp/>(Does<sp/>the<sp/>input<sp/>buffer<sp/>contain<sp/>a<sp/>valid<sp/>tile?<sp/>**TTL_tile_empty(...)**)<sp/>then<sp/>(yes)</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/>*<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="949"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="950"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="951"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="952"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="953"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="954"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955" refid="TTL__duplex__scheme_8h_1ab79b59f6e561aa4e679bc780c5787f62" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__int__tensor__buffering__t" kindref="compound">TTL_duplex_const_int_tensor_buffering_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a970d2a339451a2f0200908eafb3816e4" kindref="member">TTL_start_duplex_buffering</ref>(</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/>ext_tensor_in,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*int_base_in,<sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/>ext_tensor_out,</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*int_base_out,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*events)[2],<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__int__tensor__buffering__t" kindref="compound">TTL_duplex_const_int_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a422ada4dbf9bac3ec0894d472a88b964" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base_in;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a422ada4dbf9bac3ec0894d472a88b964" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base_out;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a81407b54682d44cff3e95cb4d086b8c3" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor_in;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1abd25c255b7e1f71b345dc7ee509edcb0" kindref="member">ext_tensor_out</ref><sp/>=<sp/>ext_tensor_out;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a6bebf1ee4604bc9e6c70803c756fe8ec" kindref="member">events</ref><sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1adb1efb98ff96dc58261500bf9d9fea2d" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1adfa0b1a31341381dca3a733c074ec2bc" kindref="member">to_export_to</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a00267ab9ef837752dca25956f82d4c19" kindref="member">TTL_create_empty_ext_tensor</ref>((<ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)0);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1adb1efb98ff96dc58261500bf9d9fea2d" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a8e8a4c8bc96baf2d50cf9f958b215825" kindref="member">to_export_from</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a3e46d662aec6627667b79338967918d6" kindref="member">TTL_create_empty_const_int_tensor</ref>((<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)0);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973" refid="TTL__duplex__scheme_8h_1aecf207096eac1b847b614bcd013a5068" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__int__tensor__t" kindref="compound">TTL_io_int_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__int__tensor__buffering__t" kindref="compound">TTL_duplex_const_int_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_import,</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export)<sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>next_import_layout<sp/>=</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__int__tensor__t" kindref="compound">TTL_const_ext_int_tensor_t</ref><sp/>next_import_ext_tensor<sp/>=</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a81407b54682d44cff3e95cb4d086b8c3" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__int__tensor__t_1a89e60c525b6f71d82bfc2be7b38ac159" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a81407b54682d44cff3e95cb4d086b8c3" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__int__tensor__t_1a37e3f377c972fd663aa69dfeafcaefb6" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a81407b54682d44cff3e95cb4d086b8c3" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__int__tensor__t_1a3a54e381a2faf588356d72e2ad839efb" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref><sp/>next_import_int_sub_tensor<sp/>=</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a422ada4dbf9bac3ec0894d472a88b964" kindref="member">int_base</ref>[0],</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_import_layout,</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a81407b54682d44cff3e95cb4d086b8c3" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__int__tensor__t" kindref="compound">TTL_const_int_int_tensor_t</ref><sp/>next_export_int_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1adb1efb98ff96dc58261500bf9d9fea2d" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a8e8a4c8bc96baf2d50cf9f958b215825" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/>next_export_ext_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1adb1efb98ff96dc58261500bf9d9fea2d" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1adfa0b1a31341381dca3a733c074ec2bc" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__tiles_8h_1a5892a886773f7a902560d0a699838796" kindref="member">TTL_tile_empty</ref>(tile_current_import)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;next_import_int_sub_tensor),</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_import_ext_tensor),</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a6bebf1ee4604bc9e6c70803c756fe8ec" kindref="member">events</ref>)[0]);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__int__ext__typed__tensors_8h_1a9cb520c261994e69928c4baa157bc77f" kindref="member">TTL_const_int_tensor_empty</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1adb1efb98ff96dc58261500bf9d9fea2d" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a8e8a4c8bc96baf2d50cf9f958b215825" kindref="member">to_export_from</ref>)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_int_tensor),</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_ext_tensor),</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a6bebf1ee4604bc9e6c70803c756fe8ec" kindref="member">events</ref>)[1]);</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>int_export_layout<sp/>=</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__int__tensor__t" kindref="compound">TTL_ext_int_tensor_t</ref><sp/>to_export_to<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a213750d83b7819861937180f3c771313" kindref="member">TTL_create_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1abd25c255b7e1f71b345dc7ee509edcb0" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__int__tensor__t_1a89e60c525b6f71d82bfc2be7b38ac159" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1abd25c255b7e1f71b345dc7ee509edcb0" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__int__tensor__t_1a37e3f377c972fd663aa69dfeafcaefb6" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1abd25c255b7e1f71b345dc7ee509edcb0" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__int__tensor__t_1a3a54e381a2faf588356d72e2ad839efb" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__int__sub__tensor__t" kindref="compound">TTL_int_int_sub_tensor_t</ref><sp/>to_export_from<sp/>=</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a422ada4dbf9bac3ec0894d472a88b964" kindref="member">int_base</ref>[1],</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_export_layout,</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a968487008a281ee2e44d4444e38699d5" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a81407b54682d44cff3e95cb4d086b8c3" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1adb1efb98ff96dc58261500bf9d9fea2d" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1adfa0b1a31341381dca3a733c074ec2bc" kindref="member">to_export_to</ref><sp/>=<sp/>to_export_to;</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1adb1efb98ff96dc58261500bf9d9fea2d" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a8e8a4c8bc96baf2d50cf9f958b215825" kindref="member">to_export_from</ref><sp/>=<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;to_export_from.<ref refid="structTTL__int__int__sub__tensor__t_1abc64a66102cbdcac18218d068f9ce273" kindref="member">tensor</ref>);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a9ab49a751ac68ef2faec162bc9d8d70b" kindref="member">TTL_wait</ref>(2,<sp/>*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__int__tensor__buffering__t_1a6bebf1ee4604bc9e6c70803c756fe8ec" kindref="member">events</ref>);</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__schemes__common_8h_1a1dcf4226f1b764153f394b1a51365e41" kindref="member">TTL_create_io_tensors</ref>(next_import_int_sub_tensor,<sp/>to_export_from);</highlight></codeline>
<codeline lineno="1024"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026" refid="TTL__duplex__scheme_8h_1a828f0cbaff122250bb9f901af0ca7f4f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a86e15576523b42c731f1a2bb1c9cbf13" kindref="member">TTL_finish_buffering</ref>(</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__int__tensor__buffering__t" kindref="compound">TTL_duplex_const_int_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering)<sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(duplex_buffering,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>(),<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1031"><highlight class="comment"><sp/>*<sp/>TTL_duplex_scheme.h</highlight></codeline>
<codeline lineno="1032"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1033"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="1034"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1035"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="1036"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1037"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="1038"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1039"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="1040"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1041"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="1042"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="1043"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="1044"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="1045"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1046"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1049"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1050"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="1051"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1052"><highlight class="comment"><sp/>*<sp/>Given<sp/>pair<sp/>of<sp/>blocking<sp/>import<sp/>and<sp/>export<sp/>that<sp/>can<sp/>execute<sp/>concurrently,</highlight></codeline>
<codeline lineno="1053"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering<sp/>issues<sp/>them<sp/>together<sp/>and<sp/>then<sp/>waits<sp/>on<sp/>both<sp/>to<sp/>complete,</highlight></codeline>
<codeline lineno="1054"><highlight class="comment"><sp/>*<sp/>hopefully<sp/>executing<sp/>them<sp/>in<sp/>parallel<sp/>to<sp/>each<sp/>other.<sp/>This<sp/>scheme<sp/>uses<sp/>two</highlight></codeline>
<codeline lineno="1055"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers,<sp/>one<sp/>for<sp/>the<sp/>import<sp/>and<sp/>one<sp/>for<sp/>the<sp/>export.<sp/>Note<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="1056"><highlight class="comment"><sp/>*<sp/>export<sp/>is<sp/>pipelined<sp/>to<sp/>pair<sp/>the<sp/>import<sp/>of<sp/>the<sp/>current<sp/>tile<sp/>with<sp/>the<sp/>export<sp/>of</highlight></codeline>
<codeline lineno="1057"><highlight class="comment"><sp/>*<sp/>previous<sp/>tile.</highlight></codeline>
<codeline lineno="1058"><highlight class="comment"></highlight></codeline>
<codeline lineno="1059"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>duplex<sp/>buffering.</highlight></codeline>
<codeline lineno="1060"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="1061"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1062"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-1)<sp/>|<sp/>\#NumOfTiles-<sp/>|</highlight></codeline>
<codeline lineno="1063"><highlight class="comment"><sp/>*<sp/>|-------------------|-----|-----|----------------------|---------------|</highlight></codeline>
<codeline lineno="1064"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1065"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1066"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1067"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="1068"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="1069"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1070"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>epilog<sp/>(\#NumOfTiles)<sp/>which<sp/>is<sp/>an<sp/>extra<sp/>iteration.</highlight></codeline>
<codeline lineno="1071"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1072"><highlight class="comment"><sp/>*<sp/>When<sp/>including<sp/>this<sp/>file<sp/>the<sp/>following<sp/>must<sp/>be<sp/>defined</highlight></codeline>
<codeline lineno="1073"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1074"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>void</highlight></codeline>
<codeline lineno="1075"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>uchar</highlight></codeline>
<codeline lineno="1076"><highlight class="comment"><sp/>*<sp/>etc</highlight></codeline>
<codeline lineno="1077"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1078"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_duplex_buffering.cl</highlight></codeline>
<codeline lineno="1079"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1088"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1089"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="1090"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1092"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1093"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>duplex<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="1094"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1095"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_duplex_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>duplex<sp/>buffer</highlight></codeline>
<codeline lineno="1096"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="1097"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098" refid="structTTL__duplex__const__uint__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1100" refid="structTTL__duplex__const__uint__tensor__buffering__t_1a981e8e0c7550f121291c12491242a155" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a981e8e0c7550f121291c12491242a155" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="1101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102" refid="structTTL__duplex__const__uint__tensor__buffering__t_1a1a40b5aafa1e9f22facf4d7562f6e8e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a1a40b5aafa1e9f22facf4d7562f6e8e3" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103" refid="structTTL__duplex__const__uint__tensor__buffering__t_1a33a9a82b15a249d8899b3500cea14dd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a33a9a82b15a249d8899b3500cea14dd3" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1104" refid="structTTL__duplex__const__uint__tensor__buffering__t_1ada1bee79803d19379a9243bd26b44506" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1ada1bee79803d19379a9243bd26b44506" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105" refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107" refid="structTTL__duplex__const__uint__tensor__buffering__t_1a2aaa6e45f06efd897a23989d7fc07f9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a2aaa6e45f06efd897a23989d7fc07f9b" kindref="member">events</ref>)[2];<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>2<sp/>Events<sp/>are<sp/>required,<sp/>1<sp/>first<sp/>is<sp/>used<sp/>for</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>external<sp/>to<sp/>internal<sp/>transfers,<sp/>the<sp/>second<sp/>for</highlight></codeline>
<codeline lineno="1109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>internal<sp/>to<sp/>external<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1111"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="1112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Store<sp/>of<sp/>the<sp/>buffers<sp/>used<sp/>for<sp/>the<sp/>previous<sp/>import/export<sp/>cycles.</highlight></codeline>
<codeline lineno="1113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1116" refid="structTTL__duplex__const__uint__tensor__buffering__t_1a96b74bf912f894d9739797bd512b089b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a96b74bf912f894d9739797bd512b089b" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="1117" refid="structTTL__duplex__const__uint__tensor__buffering__t_1ad702e5f3a1d77483d2f9d5b0128fd798" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__int__uint__tensor__t" kindref="compound">TTL_const_int_uint_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1ad702e5f3a1d77483d2f9d5b0128fd798" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="1118" refid="structTTL__duplex__const__uint__tensor__buffering__t_1a469ebb922a9f61e1562c8729e4404f0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>prev_out_tensors;</highlight></codeline>
<codeline lineno="1119"><highlight class="normal">}<sp/><ref refid="structTTL__duplex__const__uint__tensor__buffering__t" kindref="compound">TTL_duplex_const_uint_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1122"><highlight class="comment"><sp/>*<sp/>Predeclare<sp/>TTL_step_buffering.</highlight></codeline>
<codeline lineno="1123"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__uint__tensor__t" kindref="compound">TTL_io_uint_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__uint__tensor__buffering__t" kindref="compound">TTL_duplex_const_uint_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_next_import,</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export);</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1128"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1129"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="1130"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1131"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_in<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1132"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_in<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>import<sp/>buffer.</highlight></codeline>
<codeline lineno="1133"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_out<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1134"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_out<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>export<sp/>buffer.</highlight></codeline>
<codeline lineno="1135"><highlight class="comment"><sp/>*<sp/>@param<sp/>events<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>list<sp/>of<sp/>2<sp/>events.</highlight></codeline>
<codeline lineno="1136"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,<sp/>the<sp/>second<sp/>event<sp/>in</highlight></codeline>
<codeline lineno="1137"><highlight class="comment"><sp/>*<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="1138"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="1139"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1140"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1141"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1142"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,</highlight></codeline>
<codeline lineno="1143"><highlight class="comment"><sp/>*<sp/>the<sp/>second<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="1144"><highlight class="comment"><sp/>*<sp/>\n\n<sp/>Example:</highlight></codeline>
<codeline lineno="1145"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="1146"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline lineno="1147"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1148"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline lineno="1149"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline lineno="1150"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline lineno="1151"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
<codeline lineno="1152"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="1153"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="1154"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1155"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_duplex_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1156"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1157"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>duplex<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="1158"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1159"><highlight class="comment"><sp/>*<sp/>The<sp/>simplest<sp/>form<sp/>of<sp/>duplex<sp/>buffering<sp/>takes<sp/>the<sp/>following<sp/>flow.</highlight></codeline>
<codeline lineno="1160"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1161"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1162"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1163"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1164"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1165"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="1166"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers</highlight></codeline>
<codeline lineno="1167"><highlight class="comment"><sp/>*<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1168"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="1169"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1170"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="1171"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1172"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Import<sp/>The<sp/>Next<sp/>Tile<sp/>into<sp/>the<sp/>input<sp/>buffer;</highlight></codeline>
<codeline lineno="1173"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1174"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1175"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1176"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:ExportThe<sp/>Process<sp/>Tile<sp/>from<sp/>into<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1177"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1178"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="1179"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1180"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1181"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1182"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1183"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1184"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="1185"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="1186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1187"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1188"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1189"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1190"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1191"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="1192"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1193"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="1194"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1195"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="1196"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1197"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Call<sp/>TTL_step_buffering<sp/>for<sp/>the<sp/>current<sp/>tile</highlight></codeline>
<codeline lineno="1198"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1199"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>will<sp/>import<sp/>the<sp/>current<sp/>new<sp/>tile<sp/>and<sp/>export<sp/>the<sp/>last<sp/>tile</highlight></codeline>
<codeline lineno="1200"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>parallel;</highlight></codeline>
<codeline lineno="1201"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1202"><highlight class="comment"><sp/>*<sp/><sp/><sp/>if<sp/>(Does<sp/>the<sp/>input<sp/>buffer<sp/>contain<sp/>a<sp/>valid<sp/>tile?<sp/>**TTL_tile_empty(...)**)<sp/>then<sp/>(yes)</highlight></codeline>
<codeline lineno="1203"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1204"><highlight class="comment"><sp/>*<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="1205"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1206"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="1207"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1208"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1209"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1210"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1211"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212" refid="TTL__duplex__scheme_8h_1af39c12f6d88c4c50aa0b2a49f13c65c2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__uint__tensor__buffering__t" kindref="compound">TTL_duplex_const_uint_tensor_buffering_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a970d2a339451a2f0200908eafb3816e4" kindref="member">TTL_start_duplex_buffering</ref>(</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/>ext_tensor_in,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*int_base_in,<sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/>ext_tensor_out,</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*int_base_out,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*events)[2],<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__uint__tensor__buffering__t" kindref="compound">TTL_duplex_const_uint_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a1a40b5aafa1e9f22facf4d7562f6e8e3" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base_in;</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a1a40b5aafa1e9f22facf4d7562f6e8e3" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base_out;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a33a9a82b15a249d8899b3500cea14dd3" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor_in;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1ada1bee79803d19379a9243bd26b44506" kindref="member">ext_tensor_out</ref><sp/>=<sp/>ext_tensor_out;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a2aaa6e45f06efd897a23989d7fc07f9b" kindref="member">events</ref><sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a469ebb922a9f61e1562c8729e4404f0c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a96b74bf912f894d9739797bd512b089b" kindref="member">to_export_to</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a00267ab9ef837752dca25956f82d4c19" kindref="member">TTL_create_empty_ext_tensor</ref>((<ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*)0);</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a469ebb922a9f61e1562c8729e4404f0c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1ad702e5f3a1d77483d2f9d5b0128fd798" kindref="member">to_export_from</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a3e46d662aec6627667b79338967918d6" kindref="member">TTL_create_empty_const_int_tensor</ref>((<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14" kindref="member">uint</ref><sp/>*)0);</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight></codeline>
<codeline lineno="1230" refid="TTL__duplex__scheme_8h_1a11bf19594803bc0fda48418acc9e87af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__uint__tensor__t" kindref="compound">TTL_io_uint_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__uint__tensor__buffering__t" kindref="compound">TTL_duplex_const_uint_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_import,</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export)<sp/>{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>next_import_layout<sp/>=</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__uint__tensor__t" kindref="compound">TTL_const_ext_uint_tensor_t</ref><sp/>next_import_ext_tensor<sp/>=</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a33a9a82b15a249d8899b3500cea14dd3" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__uint__tensor__t_1aa20c8b1f6f927513389264515ecf9d37" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a33a9a82b15a249d8899b3500cea14dd3" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__uint__tensor__t_1a060272ce4354d177ebea9a906d96f7af" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a33a9a82b15a249d8899b3500cea14dd3" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__uint__tensor__t_1aa27b105a2b39a2e1c0155ec11c2ca546" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref><sp/>next_import_int_sub_tensor<sp/>=</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a1a40b5aafa1e9f22facf4d7562f6e8e3" kindref="member">int_base</ref>[0],</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_import_layout,</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a33a9a82b15a249d8899b3500cea14dd3" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__uint__tensor__t" kindref="compound">TTL_const_int_uint_tensor_t</ref><sp/>next_export_int_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a469ebb922a9f61e1562c8729e4404f0c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1ad702e5f3a1d77483d2f9d5b0128fd798" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/>next_export_ext_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a469ebb922a9f61e1562c8729e4404f0c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a96b74bf912f894d9739797bd512b089b" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__tiles_8h_1a5892a886773f7a902560d0a699838796" kindref="member">TTL_tile_empty</ref>(tile_current_import)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;next_import_int_sub_tensor),</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_import_ext_tensor),</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a2aaa6e45f06efd897a23989d7fc07f9b" kindref="member">events</ref>)[0]);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__int__ext__typed__tensors_8h_1a9cb520c261994e69928c4baa157bc77f" kindref="member">TTL_const_int_tensor_empty</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a469ebb922a9f61e1562c8729e4404f0c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1ad702e5f3a1d77483d2f9d5b0128fd798" kindref="member">to_export_from</ref>)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_int_tensor),</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_ext_tensor),</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a2aaa6e45f06efd897a23989d7fc07f9b" kindref="member">events</ref>)[1]);</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>int_export_layout<sp/>=</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__uint__tensor__t" kindref="compound">TTL_ext_uint_tensor_t</ref><sp/>to_export_to<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a213750d83b7819861937180f3c771313" kindref="member">TTL_create_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1ada1bee79803d19379a9243bd26b44506" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__uint__tensor__t_1aa20c8b1f6f927513389264515ecf9d37" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1ada1bee79803d19379a9243bd26b44506" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__uint__tensor__t_1a060272ce4354d177ebea9a906d96f7af" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1ada1bee79803d19379a9243bd26b44506" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__uint__tensor__t_1aa27b105a2b39a2e1c0155ec11c2ca546" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__uint__sub__tensor__t" kindref="compound">TTL_int_uint_sub_tensor_t</ref><sp/>to_export_from<sp/>=</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a1a40b5aafa1e9f22facf4d7562f6e8e3" kindref="member">int_base</ref>[1],</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_export_layout,</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a5680622325ac162650695bd1224d1dfd" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a33a9a82b15a249d8899b3500cea14dd3" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a469ebb922a9f61e1562c8729e4404f0c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a96b74bf912f894d9739797bd512b089b" kindref="member">to_export_to</ref><sp/>=<sp/>to_export_to;</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a469ebb922a9f61e1562c8729e4404f0c" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1ad702e5f3a1d77483d2f9d5b0128fd798" kindref="member">to_export_from</ref><sp/>=<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;to_export_from.<ref refid="structTTL__int__uint__sub__tensor__t_1a03768790d06607c59f887eaaa0a290d0" kindref="member">tensor</ref>);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a9ab49a751ac68ef2faec162bc9d8d70b" kindref="member">TTL_wait</ref>(2,<sp/>*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__uint__tensor__buffering__t_1a2aaa6e45f06efd897a23989d7fc07f9b" kindref="member">events</ref>);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__schemes__common_8h_1a1dcf4226f1b764153f394b1a51365e41" kindref="member">TTL_create_io_tensors</ref>(next_import_int_sub_tensor,<sp/>to_export_from);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283" refid="TTL__duplex__scheme_8h_1aab1bd49532ba2ae4dee097429f61078f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a86e15576523b42c731f1a2bb1c9cbf13" kindref="member">TTL_finish_buffering</ref>(</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__uint__tensor__buffering__t" kindref="compound">TTL_duplex_const_uint_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering)<sp/>{</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(duplex_buffering,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>(),<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="1286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1288"><highlight class="comment"><sp/>*<sp/>TTL_duplex_scheme.h</highlight></codeline>
<codeline lineno="1289"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1290"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="1291"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1292"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="1293"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1294"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="1295"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1296"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="1297"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1298"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="1299"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="1300"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="1301"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="1302"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1303"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1306"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1307"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="1308"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1309"><highlight class="comment"><sp/>*<sp/>Given<sp/>pair<sp/>of<sp/>blocking<sp/>import<sp/>and<sp/>export<sp/>that<sp/>can<sp/>execute<sp/>concurrently,</highlight></codeline>
<codeline lineno="1310"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering<sp/>issues<sp/>them<sp/>together<sp/>and<sp/>then<sp/>waits<sp/>on<sp/>both<sp/>to<sp/>complete,</highlight></codeline>
<codeline lineno="1311"><highlight class="comment"><sp/>*<sp/>hopefully<sp/>executing<sp/>them<sp/>in<sp/>parallel<sp/>to<sp/>each<sp/>other.<sp/>This<sp/>scheme<sp/>uses<sp/>two</highlight></codeline>
<codeline lineno="1312"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers,<sp/>one<sp/>for<sp/>the<sp/>import<sp/>and<sp/>one<sp/>for<sp/>the<sp/>export.<sp/>Note<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="1313"><highlight class="comment"><sp/>*<sp/>export<sp/>is<sp/>pipelined<sp/>to<sp/>pair<sp/>the<sp/>import<sp/>of<sp/>the<sp/>current<sp/>tile<sp/>with<sp/>the<sp/>export<sp/>of</highlight></codeline>
<codeline lineno="1314"><highlight class="comment"><sp/>*<sp/>previous<sp/>tile.</highlight></codeline>
<codeline lineno="1315"><highlight class="comment"></highlight></codeline>
<codeline lineno="1316"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>duplex<sp/>buffering.</highlight></codeline>
<codeline lineno="1317"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="1318"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1319"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-1)<sp/>|<sp/>\#NumOfTiles-<sp/>|</highlight></codeline>
<codeline lineno="1320"><highlight class="comment"><sp/>*<sp/>|-------------------|-----|-----|----------------------|---------------|</highlight></codeline>
<codeline lineno="1321"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1322"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1323"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1324"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="1325"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="1326"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1327"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>epilog<sp/>(\#NumOfTiles)<sp/>which<sp/>is<sp/>an<sp/>extra<sp/>iteration.</highlight></codeline>
<codeline lineno="1328"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1329"><highlight class="comment"><sp/>*<sp/>When<sp/>including<sp/>this<sp/>file<sp/>the<sp/>following<sp/>must<sp/>be<sp/>defined</highlight></codeline>
<codeline lineno="1330"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1331"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>void</highlight></codeline>
<codeline lineno="1332"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>uchar</highlight></codeline>
<codeline lineno="1333"><highlight class="comment"><sp/>*<sp/>etc</highlight></codeline>
<codeline lineno="1334"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1335"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_duplex_buffering.cl</highlight></codeline>
<codeline lineno="1336"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1345"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1346"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="1347"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1349"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1350"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>duplex<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="1351"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1352"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_duplex_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>duplex<sp/>buffer</highlight></codeline>
<codeline lineno="1353"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="1354"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355" refid="structTTL__duplex__const__short__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1357" refid="structTTL__duplex__const__short__tensor__buffering__t_1ad958f21d5de02ff4ca7c633c2d7ec0cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__short__tensor__buffering__t_1ad958f21d5de02ff4ca7c633c2d7ec0cd" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="1358"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359" refid="structTTL__duplex__const__short__tensor__buffering__t_1a66b557b88b85979d9e50650b290f8194" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a66b557b88b85979d9e50650b290f8194" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360" refid="structTTL__duplex__const__short__tensor__buffering__t_1a1f064ce13c6929df7fb03e70922b7d66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a1f064ce13c6929df7fb03e70922b7d66" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361" refid="structTTL__duplex__const__short__tensor__buffering__t_1af8337a75267ba0f7277dd09a1325d493" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__short__tensor__buffering__t_1af8337a75267ba0f7277dd09a1325d493" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362" refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364" refid="structTTL__duplex__const__short__tensor__buffering__t_1a6730c70a3fbcd8d2d9f802d157c27c79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a6730c70a3fbcd8d2d9f802d157c27c79" kindref="member">events</ref>)[2];<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>2<sp/>Events<sp/>are<sp/>required,<sp/>1<sp/>first<sp/>is<sp/>used<sp/>for</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1365"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>external<sp/>to<sp/>internal<sp/>transfers,<sp/>the<sp/>second<sp/>for</highlight></codeline>
<codeline lineno="1366"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>internal<sp/>to<sp/>external<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1368"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="1369"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Store<sp/>of<sp/>the<sp/>buffers<sp/>used<sp/>for<sp/>the<sp/>previous<sp/>import/export<sp/>cycles.</highlight></codeline>
<codeline lineno="1370"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1371"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1373" refid="structTTL__duplex__const__short__tensor__buffering__t_1a23c26a599c863453ef1d44ffa8569e10" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a23c26a599c863453ef1d44ffa8569e10" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="1374" refid="structTTL__duplex__const__short__tensor__buffering__t_1af32c0437c338772079e8b56fa46e9289" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__int__short__tensor__t" kindref="compound">TTL_const_int_short_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__short__tensor__buffering__t_1af32c0437c338772079e8b56fa46e9289" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="1375" refid="structTTL__duplex__const__short__tensor__buffering__t_1a80753a2e8a6a1ce1ed2142fcc117636b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>prev_out_tensors;</highlight></codeline>
<codeline lineno="1376"><highlight class="normal">}<sp/><ref refid="structTTL__duplex__const__short__tensor__buffering__t" kindref="compound">TTL_duplex_const_short_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1379"><highlight class="comment"><sp/>*<sp/>Predeclare<sp/>TTL_step_buffering.</highlight></codeline>
<codeline lineno="1380"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__short__tensor__t" kindref="compound">TTL_io_short_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__short__tensor__buffering__t" kindref="compound">TTL_duplex_const_short_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_next_import,</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1385"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1386"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="1387"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1388"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_in<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1389"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_in<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>import<sp/>buffer.</highlight></codeline>
<codeline lineno="1390"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_out<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1391"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_out<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>export<sp/>buffer.</highlight></codeline>
<codeline lineno="1392"><highlight class="comment"><sp/>*<sp/>@param<sp/>events<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>list<sp/>of<sp/>2<sp/>events.</highlight></codeline>
<codeline lineno="1393"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,<sp/>the<sp/>second<sp/>event<sp/>in</highlight></codeline>
<codeline lineno="1394"><highlight class="comment"><sp/>*<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="1395"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="1396"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1397"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1398"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1399"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,</highlight></codeline>
<codeline lineno="1400"><highlight class="comment"><sp/>*<sp/>the<sp/>second<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="1401"><highlight class="comment"><sp/>*<sp/>\n\n<sp/>Example:</highlight></codeline>
<codeline lineno="1402"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="1403"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline lineno="1404"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1405"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline lineno="1406"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline lineno="1407"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline lineno="1408"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
<codeline lineno="1409"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="1410"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="1411"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1412"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_duplex_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1413"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1414"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>duplex<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="1415"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1416"><highlight class="comment"><sp/>*<sp/>The<sp/>simplest<sp/>form<sp/>of<sp/>duplex<sp/>buffering<sp/>takes<sp/>the<sp/>following<sp/>flow.</highlight></codeline>
<codeline lineno="1417"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1418"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1419"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1420"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1421"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1422"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="1423"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers</highlight></codeline>
<codeline lineno="1424"><highlight class="comment"><sp/>*<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1425"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="1426"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1427"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="1428"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1429"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Import<sp/>The<sp/>Next<sp/>Tile<sp/>into<sp/>the<sp/>input<sp/>buffer;</highlight></codeline>
<codeline lineno="1430"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1431"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1432"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1433"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:ExportThe<sp/>Process<sp/>Tile<sp/>from<sp/>into<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1434"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1435"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="1436"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1437"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1438"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1439"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1440"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1441"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="1442"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="1443"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1444"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1445"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1446"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1447"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1448"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="1449"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1450"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="1451"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1452"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="1453"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1454"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Call<sp/>TTL_step_buffering<sp/>for<sp/>the<sp/>current<sp/>tile</highlight></codeline>
<codeline lineno="1455"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1456"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>will<sp/>import<sp/>the<sp/>current<sp/>new<sp/>tile<sp/>and<sp/>export<sp/>the<sp/>last<sp/>tile</highlight></codeline>
<codeline lineno="1457"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>parallel;</highlight></codeline>
<codeline lineno="1458"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1459"><highlight class="comment"><sp/>*<sp/><sp/><sp/>if<sp/>(Does<sp/>the<sp/>input<sp/>buffer<sp/>contain<sp/>a<sp/>valid<sp/>tile?<sp/>**TTL_tile_empty(...)**)<sp/>then<sp/>(yes)</highlight></codeline>
<codeline lineno="1460"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1461"><highlight class="comment"><sp/>*<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="1462"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1463"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="1464"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1465"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1466"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1467"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1468"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469" refid="TTL__duplex__scheme_8h_1a380b01d6fbdb7371deadc92d871c98ab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__short__tensor__buffering__t" kindref="compound">TTL_duplex_const_short_tensor_buffering_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a970d2a339451a2f0200908eafb3816e4" kindref="member">TTL_start_duplex_buffering</ref>(</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/>ext_tensor_in,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*int_base_in,<sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/>ext_tensor_out,</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*int_base_out,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*events)[2],<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__short__tensor__buffering__t" kindref="compound">TTL_duplex_const_short_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a66b557b88b85979d9e50650b290f8194" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base_in;</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a66b557b88b85979d9e50650b290f8194" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base_out;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a1f064ce13c6929df7fb03e70922b7d66" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor_in;</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1af8337a75267ba0f7277dd09a1325d493" kindref="member">ext_tensor_out</ref><sp/>=<sp/>ext_tensor_out;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a6730c70a3fbcd8d2d9f802d157c27c79" kindref="member">events</ref><sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a80753a2e8a6a1ce1ed2142fcc117636b" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a23c26a599c863453ef1d44ffa8569e10" kindref="member">to_export_to</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a00267ab9ef837752dca25956f82d4c19" kindref="member">TTL_create_empty_ext_tensor</ref>((<ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)0);</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a80753a2e8a6a1ce1ed2142fcc117636b" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1af32c0437c338772079e8b56fa46e9289" kindref="member">to_export_from</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a3e46d662aec6627667b79338967918d6" kindref="member">TTL_create_empty_const_int_tensor</ref>((<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>*)0);</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"></highlight></codeline>
<codeline lineno="1487" refid="TTL__duplex__scheme_8h_1aba6cc5cb544518f94f7b51a0a78ed58a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__short__tensor__t" kindref="compound">TTL_io_short_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__short__tensor__buffering__t" kindref="compound">TTL_duplex_const_short_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_import,</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export)<sp/>{</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>next_import_layout<sp/>=</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__short__tensor__t" kindref="compound">TTL_const_ext_short_tensor_t</ref><sp/>next_import_ext_tensor<sp/>=</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a1f064ce13c6929df7fb03e70922b7d66" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__short__tensor__t_1a3e1a423533f5009f0a9c9a678e822964" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a1f064ce13c6929df7fb03e70922b7d66" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__short__tensor__t_1a7437100bc088d9545e12965fd3cdcdad" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a1f064ce13c6929df7fb03e70922b7d66" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__short__tensor__t_1a23240397eeb123df97c13be6a7ddadbe" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref><sp/>next_import_int_sub_tensor<sp/>=</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a66b557b88b85979d9e50650b290f8194" kindref="member">int_base</ref>[0],</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_import_layout,</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a1f064ce13c6929df7fb03e70922b7d66" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__short__tensor__t" kindref="compound">TTL_const_int_short_tensor_t</ref><sp/>next_export_int_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a80753a2e8a6a1ce1ed2142fcc117636b" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1af32c0437c338772079e8b56fa46e9289" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/>next_export_ext_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a80753a2e8a6a1ce1ed2142fcc117636b" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a23c26a599c863453ef1d44ffa8569e10" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"></highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__tiles_8h_1a5892a886773f7a902560d0a699838796" kindref="member">TTL_tile_empty</ref>(tile_current_import)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;next_import_int_sub_tensor),</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_import_ext_tensor),</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a6730c70a3fbcd8d2d9f802d157c27c79" kindref="member">events</ref>)[0]);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__int__ext__typed__tensors_8h_1a9cb520c261994e69928c4baa157bc77f" kindref="member">TTL_const_int_tensor_empty</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a80753a2e8a6a1ce1ed2142fcc117636b" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1af32c0437c338772079e8b56fa46e9289" kindref="member">to_export_from</ref>)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_int_tensor),</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_ext_tensor),</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a6730c70a3fbcd8d2d9f802d157c27c79" kindref="member">events</ref>)[1]);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>int_export_layout<sp/>=</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref><sp/>to_export_to<sp/>=</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a213750d83b7819861937180f3c771313" kindref="member">TTL_create_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1af8337a75267ba0f7277dd09a1325d493" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__short__tensor__t_1a3e1a423533f5009f0a9c9a678e822964" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1af8337a75267ba0f7277dd09a1325d493" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__short__tensor__t_1a7437100bc088d9545e12965fd3cdcdad" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1af8337a75267ba0f7277dd09a1325d493" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__short__tensor__t_1a23240397eeb123df97c13be6a7ddadbe" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__short__sub__tensor__t" kindref="compound">TTL_int_short_sub_tensor_t</ref><sp/>to_export_from<sp/>=</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a66b557b88b85979d9e50650b290f8194" kindref="member">int_base</ref>[1],</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_export_layout,</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a1f064ce13c6929df7fb03e70922b7d66" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a80753a2e8a6a1ce1ed2142fcc117636b" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a23c26a599c863453ef1d44ffa8569e10" kindref="member">to_export_to</ref><sp/>=<sp/>to_export_to;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a80753a2e8a6a1ce1ed2142fcc117636b" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1af32c0437c338772079e8b56fa46e9289" kindref="member">to_export_from</ref><sp/>=<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;to_export_from.<ref refid="structTTL__int__short__sub__tensor__t_1ab9bf46962bbfab0c27f3549bf3aedc56" kindref="member">tensor</ref>);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a9ab49a751ac68ef2faec162bc9d8d70b" kindref="member">TTL_wait</ref>(2,<sp/>*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__short__tensor__buffering__t_1a6730c70a3fbcd8d2d9f802d157c27c79" kindref="member">events</ref>);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__schemes__common_8h_1a1dcf4226f1b764153f394b1a51365e41" kindref="member">TTL_create_io_tensors</ref>(next_import_int_sub_tensor,<sp/>to_export_from);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541" refid="TTL__duplex__scheme_8h_1a4e2e29e28802180b02c62b08eaf13a12" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a86e15576523b42c731f1a2bb1c9cbf13" kindref="member">TTL_finish_buffering</ref>(</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__short__tensor__buffering__t" kindref="compound">TTL_duplex_const_short_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering)<sp/>{</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(duplex_buffering,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>(),<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="1544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1546"><highlight class="comment"><sp/>*<sp/>TTL_duplex_scheme.h</highlight></codeline>
<codeline lineno="1547"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1548"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="1549"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1550"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="1551"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1552"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="1553"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1554"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="1555"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1556"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="1557"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="1558"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="1559"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="1560"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1561"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1564"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1565"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="1566"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1567"><highlight class="comment"><sp/>*<sp/>Given<sp/>pair<sp/>of<sp/>blocking<sp/>import<sp/>and<sp/>export<sp/>that<sp/>can<sp/>execute<sp/>concurrently,</highlight></codeline>
<codeline lineno="1568"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering<sp/>issues<sp/>them<sp/>together<sp/>and<sp/>then<sp/>waits<sp/>on<sp/>both<sp/>to<sp/>complete,</highlight></codeline>
<codeline lineno="1569"><highlight class="comment"><sp/>*<sp/>hopefully<sp/>executing<sp/>them<sp/>in<sp/>parallel<sp/>to<sp/>each<sp/>other.<sp/>This<sp/>scheme<sp/>uses<sp/>two</highlight></codeline>
<codeline lineno="1570"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers,<sp/>one<sp/>for<sp/>the<sp/>import<sp/>and<sp/>one<sp/>for<sp/>the<sp/>export.<sp/>Note<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="1571"><highlight class="comment"><sp/>*<sp/>export<sp/>is<sp/>pipelined<sp/>to<sp/>pair<sp/>the<sp/>import<sp/>of<sp/>the<sp/>current<sp/>tile<sp/>with<sp/>the<sp/>export<sp/>of</highlight></codeline>
<codeline lineno="1572"><highlight class="comment"><sp/>*<sp/>previous<sp/>tile.</highlight></codeline>
<codeline lineno="1573"><highlight class="comment"></highlight></codeline>
<codeline lineno="1574"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>duplex<sp/>buffering.</highlight></codeline>
<codeline lineno="1575"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="1576"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1577"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-1)<sp/>|<sp/>\#NumOfTiles-<sp/>|</highlight></codeline>
<codeline lineno="1578"><highlight class="comment"><sp/>*<sp/>|-------------------|-----|-----|----------------------|---------------|</highlight></codeline>
<codeline lineno="1579"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1580"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1581"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1582"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="1583"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="1584"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1585"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>epilog<sp/>(\#NumOfTiles)<sp/>which<sp/>is<sp/>an<sp/>extra<sp/>iteration.</highlight></codeline>
<codeline lineno="1586"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1587"><highlight class="comment"><sp/>*<sp/>When<sp/>including<sp/>this<sp/>file<sp/>the<sp/>following<sp/>must<sp/>be<sp/>defined</highlight></codeline>
<codeline lineno="1588"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1589"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>void</highlight></codeline>
<codeline lineno="1590"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>uchar</highlight></codeline>
<codeline lineno="1591"><highlight class="comment"><sp/>*<sp/>etc</highlight></codeline>
<codeline lineno="1592"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1593"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_duplex_buffering.cl</highlight></codeline>
<codeline lineno="1594"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1603"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1604"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="1605"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1607"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1608"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>duplex<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="1609"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1610"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_duplex_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>duplex<sp/>buffer</highlight></codeline>
<codeline lineno="1611"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="1612"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613" refid="structTTL__duplex__const__ushort__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1615" refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a4f9c695616184133b2d5bab8220b6757" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a4f9c695616184133b2d5bab8220b6757" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="1616"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617" refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a9f5b4a29222ed47dc800d00480e065c2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a9f5b4a29222ed47dc800d00480e065c2" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618" refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ab9326e364eb4ae7ddb0579df3ba2f953" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ab9326e364eb4ae7ddb0579df3ba2f953" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1619" refid="structTTL__duplex__const__ushort__tensor__buffering__t_1aab82a61d2ff6ce35b6700231e762e7a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1aab82a61d2ff6ce35b6700231e762e7a4" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1620" refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight></codeline>
<codeline lineno="1622" refid="structTTL__duplex__const__ushort__tensor__buffering__t_1aa0f58dc6c280b8b1cdccc70c2d2bcd5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1aa0f58dc6c280b8b1cdccc70c2d2bcd5c" kindref="member">events</ref>)[2];<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>2<sp/>Events<sp/>are<sp/>required,<sp/>1<sp/>first<sp/>is<sp/>used<sp/>for</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1623"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>external<sp/>to<sp/>internal<sp/>transfers,<sp/>the<sp/>second<sp/>for</highlight></codeline>
<codeline lineno="1624"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>internal<sp/>to<sp/>external<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1626"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="1627"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Store<sp/>of<sp/>the<sp/>buffers<sp/>used<sp/>for<sp/>the<sp/>previous<sp/>import/export<sp/>cycles.</highlight></codeline>
<codeline lineno="1628"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1629"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1631" refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a868273368b43ebdbe1bcfcf311d28924" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a868273368b43ebdbe1bcfcf311d28924" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="1632" refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a0df3dc81b5a1b1dc66a248b43a61966a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__int__ushort__tensor__t" kindref="compound">TTL_const_int_ushort_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a0df3dc81b5a1b1dc66a248b43a61966a" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="1633" refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a9a91252eccdf9e2d739dc651f2927e6a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>prev_out_tensors;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal">}<sp/><ref refid="structTTL__duplex__const__ushort__tensor__buffering__t" kindref="compound">TTL_duplex_const_ushort_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1637"><highlight class="comment"><sp/>*<sp/>Predeclare<sp/>TTL_step_buffering.</highlight></codeline>
<codeline lineno="1638"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__ushort__tensor__t" kindref="compound">TTL_io_ushort_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__ushort__tensor__buffering__t" kindref="compound">TTL_duplex_const_ushort_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_next_import,</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1643"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1644"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="1645"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1646"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_in<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1647"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_in<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>import<sp/>buffer.</highlight></codeline>
<codeline lineno="1648"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_out<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1649"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_out<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>export<sp/>buffer.</highlight></codeline>
<codeline lineno="1650"><highlight class="comment"><sp/>*<sp/>@param<sp/>events<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>list<sp/>of<sp/>2<sp/>events.</highlight></codeline>
<codeline lineno="1651"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,<sp/>the<sp/>second<sp/>event<sp/>in</highlight></codeline>
<codeline lineno="1652"><highlight class="comment"><sp/>*<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="1653"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="1654"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1655"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1656"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1657"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,</highlight></codeline>
<codeline lineno="1658"><highlight class="comment"><sp/>*<sp/>the<sp/>second<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="1659"><highlight class="comment"><sp/>*<sp/>\n\n<sp/>Example:</highlight></codeline>
<codeline lineno="1660"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="1661"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline lineno="1662"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1663"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline lineno="1664"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline lineno="1665"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline lineno="1666"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
<codeline lineno="1667"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="1668"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="1669"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1670"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_duplex_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1671"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1672"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>duplex<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="1673"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1674"><highlight class="comment"><sp/>*<sp/>The<sp/>simplest<sp/>form<sp/>of<sp/>duplex<sp/>buffering<sp/>takes<sp/>the<sp/>following<sp/>flow.</highlight></codeline>
<codeline lineno="1675"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1676"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1677"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1678"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1679"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1680"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="1681"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers</highlight></codeline>
<codeline lineno="1682"><highlight class="comment"><sp/>*<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1683"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="1684"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1685"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="1686"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1687"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Import<sp/>The<sp/>Next<sp/>Tile<sp/>into<sp/>the<sp/>input<sp/>buffer;</highlight></codeline>
<codeline lineno="1688"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1689"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1690"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1691"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:ExportThe<sp/>Process<sp/>Tile<sp/>from<sp/>into<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1692"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1693"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="1694"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1695"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1696"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1697"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1698"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1699"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="1700"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="1701"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1702"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1703"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1704"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1705"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1706"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="1707"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1708"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="1709"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1710"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="1711"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1712"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Call<sp/>TTL_step_buffering<sp/>for<sp/>the<sp/>current<sp/>tile</highlight></codeline>
<codeline lineno="1713"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1714"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>will<sp/>import<sp/>the<sp/>current<sp/>new<sp/>tile<sp/>and<sp/>export<sp/>the<sp/>last<sp/>tile</highlight></codeline>
<codeline lineno="1715"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>parallel;</highlight></codeline>
<codeline lineno="1716"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1717"><highlight class="comment"><sp/>*<sp/><sp/><sp/>if<sp/>(Does<sp/>the<sp/>input<sp/>buffer<sp/>contain<sp/>a<sp/>valid<sp/>tile?<sp/>**TTL_tile_empty(...)**)<sp/>then<sp/>(yes)</highlight></codeline>
<codeline lineno="1718"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1719"><highlight class="comment"><sp/>*<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="1720"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1721"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="1722"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1723"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1724"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1725"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1726"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727" refid="TTL__duplex__scheme_8h_1a9e1465a5cf67dcfc897f48c8a4b350be" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__ushort__tensor__buffering__t" kindref="compound">TTL_duplex_const_ushort_tensor_buffering_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a970d2a339451a2f0200908eafb3816e4" kindref="member">TTL_start_duplex_buffering</ref>(</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/>ext_tensor_in,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*int_base_in,<sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/>ext_tensor_out,</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*int_base_out,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*events)[2],<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__ushort__tensor__buffering__t" kindref="compound">TTL_duplex_const_ushort_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a9f5b4a29222ed47dc800d00480e065c2" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base_in;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a9f5b4a29222ed47dc800d00480e065c2" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base_out;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ab9326e364eb4ae7ddb0579df3ba2f953" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor_in;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1aab82a61d2ff6ce35b6700231e762e7a4" kindref="member">ext_tensor_out</ref><sp/>=<sp/>ext_tensor_out;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1aa0f58dc6c280b8b1cdccc70c2d2bcd5c" kindref="member">events</ref><sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a9a91252eccdf9e2d739dc651f2927e6a" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a868273368b43ebdbe1bcfcf311d28924" kindref="member">to_export_to</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a00267ab9ef837752dca25956f82d4c19" kindref="member">TTL_create_empty_ext_tensor</ref>((<ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*)0);</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a9a91252eccdf9e2d739dc651f2927e6a" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a0df3dc81b5a1b1dc66a248b43a61966a" kindref="member">to_export_from</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a3e46d662aec6627667b79338967918d6" kindref="member">TTL_create_empty_const_int_tensor</ref>((<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1ab95f123a6c9bcfee6a343170ef8c5f69" kindref="member">ushort</ref><sp/>*)0);</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight></codeline>
<codeline lineno="1745" refid="TTL__duplex__scheme_8h_1abd49d78f00cf414a39a85af876227dab" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__ushort__tensor__t" kindref="compound">TTL_io_ushort_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__ushort__tensor__buffering__t" kindref="compound">TTL_duplex_const_ushort_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_import,</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export)<sp/>{</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>next_import_layout<sp/>=</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__ushort__tensor__t" kindref="compound">TTL_const_ext_ushort_tensor_t</ref><sp/>next_import_ext_tensor<sp/>=</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ab9326e364eb4ae7ddb0579df3ba2f953" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__ushort__tensor__t_1aae0104161e45f20a0d6ee0069655aa6e" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ab9326e364eb4ae7ddb0579df3ba2f953" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__ushort__tensor__t_1a518d4c44d3c09ee07a2355a42f0c4532" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ab9326e364eb4ae7ddb0579df3ba2f953" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__ushort__tensor__t_1a3f281173c6045454fd4497126ff3a072" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref><sp/>next_import_int_sub_tensor<sp/>=</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a9f5b4a29222ed47dc800d00480e065c2" kindref="member">int_base</ref>[0],</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_import_layout,</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ab9326e364eb4ae7ddb0579df3ba2f953" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__ushort__tensor__t" kindref="compound">TTL_const_int_ushort_tensor_t</ref><sp/>next_export_int_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a9a91252eccdf9e2d739dc651f2927e6a" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a0df3dc81b5a1b1dc66a248b43a61966a" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/>next_export_ext_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a9a91252eccdf9e2d739dc651f2927e6a" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a868273368b43ebdbe1bcfcf311d28924" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__tiles_8h_1a5892a886773f7a902560d0a699838796" kindref="member">TTL_tile_empty</ref>(tile_current_import)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;next_import_int_sub_tensor),</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_import_ext_tensor),</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1aa0f58dc6c280b8b1cdccc70c2d2bcd5c" kindref="member">events</ref>)[0]);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__int__ext__typed__tensors_8h_1a9cb520c261994e69928c4baa157bc77f" kindref="member">TTL_const_int_tensor_empty</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a9a91252eccdf9e2d739dc651f2927e6a" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a0df3dc81b5a1b1dc66a248b43a61966a" kindref="member">to_export_from</ref>)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_int_tensor),</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_ext_tensor),</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1aa0f58dc6c280b8b1cdccc70c2d2bcd5c" kindref="member">events</ref>)[1]);</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>int_export_layout<sp/>=</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ushort__tensor__t" kindref="compound">TTL_ext_ushort_tensor_t</ref><sp/>to_export_to<sp/>=</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a213750d83b7819861937180f3c771313" kindref="member">TTL_create_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1aab82a61d2ff6ce35b6700231e762e7a4" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__ushort__tensor__t_1aae0104161e45f20a0d6ee0069655aa6e" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1aab82a61d2ff6ce35b6700231e762e7a4" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__ushort__tensor__t_1a518d4c44d3c09ee07a2355a42f0c4532" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1aab82a61d2ff6ce35b6700231e762e7a4" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__ushort__tensor__t_1a3f281173c6045454fd4497126ff3a072" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ushort__sub__tensor__t" kindref="compound">TTL_int_ushort_sub_tensor_t</ref><sp/>to_export_from<sp/>=</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a9f5b4a29222ed47dc800d00480e065c2" kindref="member">int_base</ref>[1],</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_export_layout,</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ac82328a8602d7abfcd509e03412ac4f9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1ab9326e364eb4ae7ddb0579df3ba2f953" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"></highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a9a91252eccdf9e2d739dc651f2927e6a" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a868273368b43ebdbe1bcfcf311d28924" kindref="member">to_export_to</ref><sp/>=<sp/>to_export_to;</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a9a91252eccdf9e2d739dc651f2927e6a" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1a0df3dc81b5a1b1dc66a248b43a61966a" kindref="member">to_export_from</ref><sp/>=<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;to_export_from.<ref refid="structTTL__int__ushort__sub__tensor__t_1af494e64a3c121a3501c97f47a456f534" kindref="member">tensor</ref>);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a9ab49a751ac68ef2faec162bc9d8d70b" kindref="member">TTL_wait</ref>(2,<sp/>*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ushort__tensor__buffering__t_1aa0f58dc6c280b8b1cdccc70c2d2bcd5c" kindref="member">events</ref>);</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__schemes__common_8h_1a1dcf4226f1b764153f394b1a51365e41" kindref="member">TTL_create_io_tensors</ref>(next_import_int_sub_tensor,<sp/>to_export_from);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799" refid="TTL__duplex__scheme_8h_1aedef0ce695087e275164f35c8e511da5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a86e15576523b42c731f1a2bb1c9cbf13" kindref="member">TTL_finish_buffering</ref>(</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__ushort__tensor__buffering__t" kindref="compound">TTL_duplex_const_ushort_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering)<sp/>{</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(duplex_buffering,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>(),<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="1802"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1804"><highlight class="comment"><sp/>*<sp/>TTL_duplex_scheme.h</highlight></codeline>
<codeline lineno="1805"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1806"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="1807"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1808"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="1809"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1810"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="1811"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1812"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="1813"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1814"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="1815"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="1816"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="1817"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="1818"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="1819"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1822"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1823"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="1824"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1825"><highlight class="comment"><sp/>*<sp/>Given<sp/>pair<sp/>of<sp/>blocking<sp/>import<sp/>and<sp/>export<sp/>that<sp/>can<sp/>execute<sp/>concurrently,</highlight></codeline>
<codeline lineno="1826"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering<sp/>issues<sp/>them<sp/>together<sp/>and<sp/>then<sp/>waits<sp/>on<sp/>both<sp/>to<sp/>complete,</highlight></codeline>
<codeline lineno="1827"><highlight class="comment"><sp/>*<sp/>hopefully<sp/>executing<sp/>them<sp/>in<sp/>parallel<sp/>to<sp/>each<sp/>other.<sp/>This<sp/>scheme<sp/>uses<sp/>two</highlight></codeline>
<codeline lineno="1828"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers,<sp/>one<sp/>for<sp/>the<sp/>import<sp/>and<sp/>one<sp/>for<sp/>the<sp/>export.<sp/>Note<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="1829"><highlight class="comment"><sp/>*<sp/>export<sp/>is<sp/>pipelined<sp/>to<sp/>pair<sp/>the<sp/>import<sp/>of<sp/>the<sp/>current<sp/>tile<sp/>with<sp/>the<sp/>export<sp/>of</highlight></codeline>
<codeline lineno="1830"><highlight class="comment"><sp/>*<sp/>previous<sp/>tile.</highlight></codeline>
<codeline lineno="1831"><highlight class="comment"></highlight></codeline>
<codeline lineno="1832"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>duplex<sp/>buffering.</highlight></codeline>
<codeline lineno="1833"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="1834"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1835"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-1)<sp/>|<sp/>\#NumOfTiles-<sp/>|</highlight></codeline>
<codeline lineno="1836"><highlight class="comment"><sp/>*<sp/>|-------------------|-----|-----|----------------------|---------------|</highlight></codeline>
<codeline lineno="1837"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1838"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1839"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="1840"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="1841"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="1842"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1843"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>epilog<sp/>(\#NumOfTiles)<sp/>which<sp/>is<sp/>an<sp/>extra<sp/>iteration.</highlight></codeline>
<codeline lineno="1844"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1845"><highlight class="comment"><sp/>*<sp/>When<sp/>including<sp/>this<sp/>file<sp/>the<sp/>following<sp/>must<sp/>be<sp/>defined</highlight></codeline>
<codeline lineno="1846"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1847"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>void</highlight></codeline>
<codeline lineno="1848"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>uchar</highlight></codeline>
<codeline lineno="1849"><highlight class="comment"><sp/>*<sp/>etc</highlight></codeline>
<codeline lineno="1850"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1851"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_duplex_buffering.cl</highlight></codeline>
<codeline lineno="1852"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1861"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1862"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="1863"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1865"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1866"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>duplex<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="1867"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1868"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_duplex_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>duplex<sp/>buffer</highlight></codeline>
<codeline lineno="1869"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="1870"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871" refid="structTTL__duplex__const__long__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1873" refid="structTTL__duplex__const__long__tensor__buffering__t_1a4c05111d555352148de81783e2e9df4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a4c05111d555352148de81783e2e9df4e" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="1874"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875" refid="structTTL__duplex__const__long__tensor__buffering__t_1a53f6e2aa48782a1857fda8e2436c562a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a53f6e2aa48782a1857fda8e2436c562a" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876" refid="structTTL__duplex__const__long__tensor__buffering__t_1a0b42ba133817ef56ff675712c8381fea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a0b42ba133817ef56ff675712c8381fea" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1877" refid="structTTL__duplex__const__long__tensor__buffering__t_1aaff28af04bb430d3ec32df049ca2c295" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__long__tensor__buffering__t_1aaff28af04bb430d3ec32df049ca2c295" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1878" refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880" refid="structTTL__duplex__const__long__tensor__buffering__t_1a9da3c11192315a2ccce904dbcc11a8e5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a9da3c11192315a2ccce904dbcc11a8e5" kindref="member">events</ref>)[2];<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>2<sp/>Events<sp/>are<sp/>required,<sp/>1<sp/>first<sp/>is<sp/>used<sp/>for</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1881"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>external<sp/>to<sp/>internal<sp/>transfers,<sp/>the<sp/>second<sp/>for</highlight></codeline>
<codeline lineno="1882"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>internal<sp/>to<sp/>external<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1884"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="1885"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Store<sp/>of<sp/>the<sp/>buffers<sp/>used<sp/>for<sp/>the<sp/>previous<sp/>import/export<sp/>cycles.</highlight></codeline>
<codeline lineno="1886"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1887"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1889" refid="structTTL__duplex__const__long__tensor__buffering__t_1a1f1f92c787be5af2ade629c76748f04f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a1f1f92c787be5af2ade629c76748f04f" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="1890" refid="structTTL__duplex__const__long__tensor__buffering__t_1a09ae0e756631380fa6593b423b867e01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__int__long__tensor__t" kindref="compound">TTL_const_int_long_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a09ae0e756631380fa6593b423b867e01" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="1891" refid="structTTL__duplex__const__long__tensor__buffering__t_1a7ea6c0e6421f26d9e86fee35ecb0e2f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>prev_out_tensors;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal">}<sp/><ref refid="structTTL__duplex__const__long__tensor__buffering__t" kindref="compound">TTL_duplex_const_long_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1895"><highlight class="comment"><sp/>*<sp/>Predeclare<sp/>TTL_step_buffering.</highlight></codeline>
<codeline lineno="1896"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__long__tensor__t" kindref="compound">TTL_io_long_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__long__tensor__buffering__t" kindref="compound">TTL_duplex_const_long_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_next_import,</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1901"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="1902"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="1903"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1904"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_in<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1905"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_in<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>import<sp/>buffer.</highlight></codeline>
<codeline lineno="1906"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_out<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="1907"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_out<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>export<sp/>buffer.</highlight></codeline>
<codeline lineno="1908"><highlight class="comment"><sp/>*<sp/>@param<sp/>events<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>list<sp/>of<sp/>2<sp/>events.</highlight></codeline>
<codeline lineno="1909"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,<sp/>the<sp/>second<sp/>event<sp/>in</highlight></codeline>
<codeline lineno="1910"><highlight class="comment"><sp/>*<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="1911"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="1912"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1913"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1914"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1915"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,</highlight></codeline>
<codeline lineno="1916"><highlight class="comment"><sp/>*<sp/>the<sp/>second<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="1917"><highlight class="comment"><sp/>*<sp/>\n\n<sp/>Example:</highlight></codeline>
<codeline lineno="1918"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="1919"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline lineno="1920"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1921"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline lineno="1922"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline lineno="1923"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline lineno="1924"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
<codeline lineno="1925"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="1926"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="1927"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1928"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_duplex_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="1929"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1930"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>duplex<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="1931"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1932"><highlight class="comment"><sp/>*<sp/>The<sp/>simplest<sp/>form<sp/>of<sp/>duplex<sp/>buffering<sp/>takes<sp/>the<sp/>following<sp/>flow.</highlight></codeline>
<codeline lineno="1933"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1934"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1935"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1936"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1937"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1938"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="1939"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers</highlight></codeline>
<codeline lineno="1940"><highlight class="comment"><sp/>*<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1941"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="1942"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1943"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="1944"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1945"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Import<sp/>The<sp/>Next<sp/>Tile<sp/>into<sp/>the<sp/>input<sp/>buffer;</highlight></codeline>
<codeline lineno="1946"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1947"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1948"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1949"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:ExportThe<sp/>Process<sp/>Tile<sp/>from<sp/>into<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1950"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1951"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="1952"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1953"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1954"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1955"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1956"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1957"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="1958"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="1959"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1960"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="1961"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1962"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="1963"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1964"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="1965"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1966"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="1967"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1968"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="1969"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1970"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Call<sp/>TTL_step_buffering<sp/>for<sp/>the<sp/>current<sp/>tile</highlight></codeline>
<codeline lineno="1971"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1972"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>will<sp/>import<sp/>the<sp/>current<sp/>new<sp/>tile<sp/>and<sp/>export<sp/>the<sp/>last<sp/>tile</highlight></codeline>
<codeline lineno="1973"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>parallel;</highlight></codeline>
<codeline lineno="1974"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1975"><highlight class="comment"><sp/>*<sp/><sp/><sp/>if<sp/>(Does<sp/>the<sp/>input<sp/>buffer<sp/>contain<sp/>a<sp/>valid<sp/>tile?<sp/>**TTL_tile_empty(...)**)<sp/>then<sp/>(yes)</highlight></codeline>
<codeline lineno="1976"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="1977"><highlight class="comment"><sp/>*<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="1978"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1979"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="1980"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1981"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="1982"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1983"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="1984"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985" refid="TTL__duplex__scheme_8h_1afa608f7ccf5d3ece1fdf3f9cb13115e2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__long__tensor__buffering__t" kindref="compound">TTL_duplex_const_long_tensor_buffering_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a970d2a339451a2f0200908eafb3816e4" kindref="member">TTL_start_duplex_buffering</ref>(</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/>ext_tensor_in,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*int_base_in,<sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/>ext_tensor_out,</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*int_base_out,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*events)[2],<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__long__tensor__buffering__t" kindref="compound">TTL_duplex_const_long_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a53f6e2aa48782a1857fda8e2436c562a" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base_in;</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a53f6e2aa48782a1857fda8e2436c562a" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base_out;</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a0b42ba133817ef56ff675712c8381fea" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor_in;</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1aaff28af04bb430d3ec32df049ca2c295" kindref="member">ext_tensor_out</ref><sp/>=<sp/>ext_tensor_out;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a9da3c11192315a2ccce904dbcc11a8e5" kindref="member">events</ref><sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a7ea6c0e6421f26d9e86fee35ecb0e2f5" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a1f1f92c787be5af2ade629c76748f04f" kindref="member">to_export_to</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a00267ab9ef837752dca25956f82d4c19" kindref="member">TTL_create_empty_ext_tensor</ref>((<ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*)0);</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a7ea6c0e6421f26d9e86fee35ecb0e2f5" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a09ae0e756631380fa6593b423b867e01" kindref="member">to_export_from</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a3e46d662aec6627667b79338967918d6" kindref="member">TTL_create_empty_const_int_tensor</ref>((<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*)0);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"></highlight></codeline>
<codeline lineno="2003" refid="TTL__duplex__scheme_8h_1a6b556b9518a1c11fd0400317cddb7f5c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__long__tensor__t" kindref="compound">TTL_io_long_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__long__tensor__buffering__t" kindref="compound">TTL_duplex_const_long_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_import,</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export)<sp/>{</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>next_import_layout<sp/>=</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__long__tensor__t" kindref="compound">TTL_const_ext_long_tensor_t</ref><sp/>next_import_ext_tensor<sp/>=</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a0b42ba133817ef56ff675712c8381fea" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__long__tensor__t_1aed31f3e3903f2c99f4c3a576d0214c35" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a0b42ba133817ef56ff675712c8381fea" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__long__tensor__t_1ab3c30d62bd489fb69787e055bb72646d" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a0b42ba133817ef56ff675712c8381fea" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__long__tensor__t_1afe3082a7e8c5d83c4e7bed61cb4d281e" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref><sp/>next_import_int_sub_tensor<sp/>=</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a53f6e2aa48782a1857fda8e2436c562a" kindref="member">int_base</ref>[0],</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_import_layout,</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a0b42ba133817ef56ff675712c8381fea" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__long__tensor__t" kindref="compound">TTL_const_int_long_tensor_t</ref><sp/>next_export_int_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a7ea6c0e6421f26d9e86fee35ecb0e2f5" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a09ae0e756631380fa6593b423b867e01" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/>next_export_ext_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a7ea6c0e6421f26d9e86fee35ecb0e2f5" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a1f1f92c787be5af2ade629c76748f04f" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__tiles_8h_1a5892a886773f7a902560d0a699838796" kindref="member">TTL_tile_empty</ref>(tile_current_import)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;next_import_int_sub_tensor),</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_import_ext_tensor),</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a9da3c11192315a2ccce904dbcc11a8e5" kindref="member">events</ref>)[0]);</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__int__ext__typed__tensors_8h_1a9cb520c261994e69928c4baa157bc77f" kindref="member">TTL_const_int_tensor_empty</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a7ea6c0e6421f26d9e86fee35ecb0e2f5" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a09ae0e756631380fa6593b423b867e01" kindref="member">to_export_from</ref>)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_int_tensor),</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_ext_tensor),</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a9da3c11192315a2ccce904dbcc11a8e5" kindref="member">events</ref>)[1]);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>int_export_layout<sp/>=</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__long__tensor__t" kindref="compound">TTL_ext_long_tensor_t</ref><sp/>to_export_to<sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a213750d83b7819861937180f3c771313" kindref="member">TTL_create_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1aaff28af04bb430d3ec32df049ca2c295" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__long__tensor__t_1aed31f3e3903f2c99f4c3a576d0214c35" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1aaff28af04bb430d3ec32df049ca2c295" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__long__tensor__t_1ab3c30d62bd489fb69787e055bb72646d" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1aaff28af04bb430d3ec32df049ca2c295" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__long__tensor__t_1afe3082a7e8c5d83c4e7bed61cb4d281e" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__long__sub__tensor__t" kindref="compound">TTL_int_long_sub_tensor_t</ref><sp/>to_export_from<sp/>=</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a53f6e2aa48782a1857fda8e2436c562a" kindref="member">int_base</ref>[1],</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_export_layout,</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1af1ff98c1c2c5973be94e4f14f93f8704" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a0b42ba133817ef56ff675712c8381fea" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a7ea6c0e6421f26d9e86fee35ecb0e2f5" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a1f1f92c787be5af2ade629c76748f04f" kindref="member">to_export_to</ref><sp/>=<sp/>to_export_to;</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a7ea6c0e6421f26d9e86fee35ecb0e2f5" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a09ae0e756631380fa6593b423b867e01" kindref="member">to_export_from</ref><sp/>=<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;to_export_from.<ref refid="structTTL__int__long__sub__tensor__t_1a3cf57e11cf419427af71866cee2e0988" kindref="member">tensor</ref>);</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a9ab49a751ac68ef2faec162bc9d8d70b" kindref="member">TTL_wait</ref>(2,<sp/>*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__long__tensor__buffering__t_1a9da3c11192315a2ccce904dbcc11a8e5" kindref="member">events</ref>);</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__schemes__common_8h_1a1dcf4226f1b764153f394b1a51365e41" kindref="member">TTL_create_io_tensors</ref>(next_import_int_sub_tensor,<sp/>to_export_from);</highlight></codeline>
<codeline lineno="2054"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056" refid="TTL__duplex__scheme_8h_1a0e6c18d778a2554869acf14e46bd5b1e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a86e15576523b42c731f1a2bb1c9cbf13" kindref="member">TTL_finish_buffering</ref>(</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__long__tensor__buffering__t" kindref="compound">TTL_duplex_const_long_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering)<sp/>{</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(duplex_buffering,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>(),<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="2059"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2061"><highlight class="comment"><sp/>*<sp/>TTL_duplex_scheme.h</highlight></codeline>
<codeline lineno="2062"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2063"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2023<sp/>Mobileye</highlight></codeline>
<codeline lineno="2064"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2065"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>License);</highlight></codeline>
<codeline lineno="2066"><highlight class="comment"><sp/>*<sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="2067"><highlight class="comment"><sp/>*<sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="2068"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2069"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>http://www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="2070"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2071"><highlight class="comment"><sp/>*<sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="2072"><highlight class="comment"><sp/>*<sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>AS<sp/>IS<sp/>BASIS,</highlight></codeline>
<codeline lineno="2073"><highlight class="comment"><sp/>*<sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="2074"><highlight class="comment"><sp/>*<sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="2075"><highlight class="comment"><sp/>*<sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="2076"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077"><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>off</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2079"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2080"><highlight class="comment"><sp/>*<sp/>@file</highlight></codeline>
<codeline lineno="2081"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2082"><highlight class="comment"><sp/>*<sp/>Given<sp/>pair<sp/>of<sp/>blocking<sp/>import<sp/>and<sp/>export<sp/>that<sp/>can<sp/>execute<sp/>concurrently,</highlight></codeline>
<codeline lineno="2083"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering<sp/>issues<sp/>them<sp/>together<sp/>and<sp/>then<sp/>waits<sp/>on<sp/>both<sp/>to<sp/>complete,</highlight></codeline>
<codeline lineno="2084"><highlight class="comment"><sp/>*<sp/>hopefully<sp/>executing<sp/>them<sp/>in<sp/>parallel<sp/>to<sp/>each<sp/>other.<sp/>This<sp/>scheme<sp/>uses<sp/>two</highlight></codeline>
<codeline lineno="2085"><highlight class="comment"><sp/>*<sp/>internal<sp/>buffers,<sp/>one<sp/>for<sp/>the<sp/>import<sp/>and<sp/>one<sp/>for<sp/>the<sp/>export.<sp/>Note<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="2086"><highlight class="comment"><sp/>*<sp/>export<sp/>is<sp/>pipelined<sp/>to<sp/>pair<sp/>the<sp/>import<sp/>of<sp/>the<sp/>current<sp/>tile<sp/>with<sp/>the<sp/>export<sp/>of</highlight></codeline>
<codeline lineno="2087"><highlight class="comment"><sp/>*<sp/>previous<sp/>tile.</highlight></codeline>
<codeline lineno="2088"><highlight class="comment"></highlight></codeline>
<codeline lineno="2089"><highlight class="comment"><sp/>*<sp/>The<sp/>following<sp/>table<sp/>draws<sp/>the<sp/>pipelined<sp/>actions<sp/>performed<sp/>in<sp/>duplex<sp/>buffering.</highlight></codeline>
<codeline lineno="2090"><highlight class="comment"><sp/>*<sp/>It<sp/>specifies<sp/>which<sp/>tile<sp/>is<sp/>processed<sp/>in<sp/>each<sp/>iteration:</highlight></codeline>
<codeline lineno="2091"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2092"><highlight class="comment"><sp/>*<sp/>|<sp/>Action\\Iteration<sp/>|<sp/>\#0<sp/>|<sp/>\#1<sp/>|<sp/>\#i<sp/>(2:NumOfTiles-1)<sp/>|<sp/>\#NumOfTiles-<sp/>|</highlight></codeline>
<codeline lineno="2093"><highlight class="comment"><sp/>*<sp/>|-------------------|-----|-----|----------------------|---------------|</highlight></codeline>
<codeline lineno="2094"><highlight class="comment"><sp/>*<sp/>|<sp/>**Import**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2095"><highlight class="comment"><sp/>*<sp/>|<sp/>**Wait<sp/>Import**<sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2096"><highlight class="comment"><sp/>*<sp/>|<sp/>**Compute**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>1<sp/><sp/><sp/>|<sp/>i<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2097"><highlight class="comment"><sp/>*<sp/>|<sp/>**Export**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="2098"><highlight class="comment"><sp/>*<sp/>|<sp/>**WaitExport**<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/>|<sp/>0<sp/><sp/><sp/>|<sp/>i-1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>NumOfTiles-1<sp/><sp/>|</highlight></codeline>
<codeline lineno="2099"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2100"><highlight class="comment"><sp/>*<sp/>Notice<sp/>the<sp/>epilog<sp/>(\#NumOfTiles)<sp/>which<sp/>is<sp/>an<sp/>extra<sp/>iteration.</highlight></codeline>
<codeline lineno="2101"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2102"><highlight class="comment"><sp/>*<sp/>When<sp/>including<sp/>this<sp/>file<sp/>the<sp/>following<sp/>must<sp/>be<sp/>defined</highlight></codeline>
<codeline lineno="2103"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2104"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>void</highlight></codeline>
<codeline lineno="2105"><highlight class="comment"><sp/>*<sp/>#define<sp/>TTL_TENSOR_TYPE<sp/>uchar</highlight></codeline>
<codeline lineno="2106"><highlight class="comment"><sp/>*<sp/>etc</highlight></codeline>
<codeline lineno="2107"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2108"><highlight class="comment"><sp/>*<sp/>@example<sp/>TTL_duplex_buffering.cl</highlight></codeline>
<codeline lineno="2109"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight><highlight class="comment">//<sp/>clang-format<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>file<sp/>presumes<sp/>that<sp/>the<sp/>following<sp/>have<sp/>been<sp/>pre<sp/>included.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight><highlight class="comment">//<sp/>this<sp/>is<sp/>not<sp/>done<sp/>here<sp/>for<sp/>path<sp/>reasons.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_core.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;TTL_import_export.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>TTL_IMPORT_EXPORT_INCLUDE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2118"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2119"><highlight class="comment"><sp/>*<sp/>@def<sp/>The<sp/>structs<sp/>used<sp/>for<sp/>this<sp/>buffering<sp/>type</highlight></codeline>
<codeline lineno="2120"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2122"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2123"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Data<sp/>required<sp/>to<sp/>perform<sp/>duplex<sp/>buffer<sp/>pipelining.</highlight></codeline>
<codeline lineno="2124"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2125"><highlight class="comment"><sp/>*<sp/>@see<sp/>TTL_start_duplex_buffering<sp/>for<sp/>a<sp/>description<sp/>of<sp/>duplex<sp/>buffer</highlight></codeline>
<codeline lineno="2126"><highlight class="comment"><sp/>*<sp/>pipelining.</highlight></codeline>
<codeline lineno="2127"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128" refid="structTTL__duplex__const__ulong__tensor__buffering__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2130" refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a6d852e91c94f6d1932f436fdd4bcf0ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a6d852e91c94f6d1932f436fdd4bcf0ee" kindref="member">index</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>Describes<sp/>the<sp/>current<sp/>buffer<sp/>index<sp/>when<sp/>pipelining.<sp/>For<sp/>single<sp/>0-&gt;1-&gt;0,<sp/>for<sp/>double</highlight></codeline>
<codeline lineno="2131"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0-&gt;1-&gt;0-&gt;1...<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132" refid="structTTL__duplex__const__ulong__tensor__buffering__t_1ae6cca4e664f65c56ec2cf8b82b92e7d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1ae6cca4e664f65c56ec2cf8b82b92e7d6" kindref="member">int_base</ref>[2];<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>internal<sp/>base<sp/>addresses<sp/>of<sp/>the<sp/>pipelined<sp/>tiles.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2133" refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a9fb83d7aabaae8b207b5cccdfc5c3e75" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a9fb83d7aabaae8b207b5cccdfc5c3e75" kindref="member">ext_tensor_in</ref>;<sp/><sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>input<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2134" refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a8f3c0dbd5e7bdb1995a07570e4a80264" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a8f3c0dbd5e7bdb1995a07570e4a80264" kindref="member">ext_tensor_out</ref>;<sp/></highlight><highlight class="comment">/*!&lt;<sp/>The<sp/>external<sp/>tensor<sp/>being<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135" refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>common;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>The<sp/>information<sp/>that<sp/>is<sp/>common<sp/>to<sp/>all<sp/>pipeline<sp/>schemes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight></codeline>
<codeline lineno="2137" refid="structTTL__duplex__const__ulong__tensor__buffering__t_1af5c35c3d4402144d0867727344c1e001" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1af5c35c3d4402144d0867727344c1e001" kindref="member">events</ref>)[2];<sp/><sp/></highlight><highlight class="comment">///&lt;<sp/>2<sp/>Events<sp/>are<sp/>required,<sp/>1<sp/>first<sp/>is<sp/>used<sp/>for</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2138"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>external<sp/>to<sp/>internal<sp/>transfers,<sp/>the<sp/>second<sp/>for</highlight></codeline>
<codeline lineno="2139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>///&lt;<sp/>internal<sp/>to<sp/>external<sp/>transfers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2141"><highlight class="comment"><sp/><sp/><sp/><sp/>/**</highlight></codeline>
<codeline lineno="2142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>@brief<sp/>Store<sp/>of<sp/>the<sp/>buffers<sp/>used<sp/>for<sp/>the<sp/>previous<sp/>import/export<sp/>cycles.</highlight></codeline>
<codeline lineno="2143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="2144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2146" refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a4c9bd26d6bc76f7a0e0fd3e2fb1d5065" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a4c9bd26d6bc76f7a0e0fd3e2fb1d5065" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="2147" refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a5cbebcab32dd544e778592eab7ec0e5f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structTTL__const__int__ulong__tensor__t" kindref="compound">TTL_const_int_ulong_tensor_t</ref><sp/><ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a5cbebcab32dd544e778592eab7ec0e5f" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="2148" refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a7bd3225720ba404c6ac06b7cfeedb8b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/>prev_out_tensors;</highlight></codeline>
<codeline lineno="2149"><highlight class="normal">}<sp/><ref refid="structTTL__duplex__const__ulong__tensor__buffering__t" kindref="compound">TTL_duplex_const_ulong_tensor_buffering_t</ref>;</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2152"><highlight class="comment"><sp/>*<sp/>Predeclare<sp/>TTL_step_buffering.</highlight></codeline>
<codeline lineno="2153"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__ulong__tensor__t" kindref="compound">TTL_io_ulong_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__ulong__tensor__buffering__t" kindref="compound">TTL_duplex_const_ulong_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_next_import,</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export);</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2158"><highlight class="comment">/**</highlight></codeline>
<codeline lineno="2159"><highlight class="comment"><sp/>*<sp/>@brief<sp/>Create<sp/>a<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>and<sp/>begin<sp/>the<sp/>buffering<sp/>process</highlight></codeline>
<codeline lineno="2160"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2161"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_in<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>input<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="2162"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_in<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>import<sp/>buffer.</highlight></codeline>
<codeline lineno="2163"><highlight class="comment"><sp/>*<sp/>@param<sp/>ext_tensor_out<sp/>A<sp/>tensor<sp/>describing<sp/>the<sp/>output<sp/>in<sp/>global<sp/>memory</highlight></codeline>
<codeline lineno="2164"><highlight class="comment"><sp/>*<sp/>@param<sp/>int_base_out<sp/>The<sp/>address<sp/>of<sp/>the<sp/>local<sp/>export<sp/>buffer.</highlight></codeline>
<codeline lineno="2165"><highlight class="comment"><sp/>*<sp/>@param<sp/>events<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>list<sp/>of<sp/>2<sp/>events.</highlight></codeline>
<codeline lineno="2166"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,<sp/>the<sp/>second<sp/>event<sp/>in</highlight></codeline>
<codeline lineno="2167"><highlight class="comment"><sp/>*<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="2168"><highlight class="comment"><sp/>*<sp/>@param<sp/>first_tile<sp/>The<sp/>first<sp/>tile<sp/>to<sp/>fetch<sp/>for<sp/>the<sp/>scheme</highlight></codeline>
<codeline lineno="2169"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2170"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_DUPLEX_BUFFERING_TYPE<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="2171"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2172"><highlight class="comment"><sp/>*<sp/>The<sp/>first<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>imports,</highlight></codeline>
<codeline lineno="2173"><highlight class="comment"><sp/>*<sp/>the<sp/>second<sp/>event<sp/>in<sp/>the<sp/>list<sp/>will<sp/>be<sp/>used<sp/>for<sp/>exports.</highlight></codeline>
<codeline lineno="2174"><highlight class="comment"><sp/>*<sp/>\n\n<sp/>Example:</highlight></codeline>
<codeline lineno="2175"><highlight class="comment"><sp/>*<sp/>@code</highlight></codeline>
<codeline lineno="2176"><highlight class="comment"><sp/>*<sp/>TTL_event_t<sp/>events[2]<sp/>=<sp/>{<sp/>TTL_get_event(),<sp/>TTL_get_event()};</highlight></codeline>
<codeline lineno="2177"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2178"><highlight class="comment"><sp/>*<sp/>TTL_duplex_buffering_t<sp/>buffering_scheme<sp/>=<sp/>TTL_start_duplex_buffering(</highlight></codeline>
<codeline lineno="2179"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_in,<sp/>ext_layout_in,<sp/>l_buffers[0],</highlight></codeline>
<codeline lineno="2180"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>ext_base_out,<sp/>ext_layout_out,<sp/>l_buffers[1],</highlight></codeline>
<codeline lineno="2181"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>&amp;events);</highlight></codeline>
<codeline lineno="2182"><highlight class="comment"><sp/>*<sp/>@endcode</highlight></codeline>
<codeline lineno="2183"><highlight class="comment"><sp/>*<sp/>\n</highlight></codeline>
<codeline lineno="2184"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2185"><highlight class="comment"><sp/>*<sp/>@return<sp/>The<sp/>TTL_duplex_buffering_t<sp/>created<sp/>from<sp/>the<sp/>input<sp/>parameters.</highlight></codeline>
<codeline lineno="2186"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2187"><highlight class="comment"><sp/>*<sp/>Solid<sp/>description<sp/>of<sp/>duplex<sp/>buffering<sp/>here.</highlight></codeline>
<codeline lineno="2188"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2189"><highlight class="comment"><sp/>*<sp/>The<sp/>simplest<sp/>form<sp/>of<sp/>duplex<sp/>buffering<sp/>takes<sp/>the<sp/>following<sp/>flow.</highlight></codeline>
<codeline lineno="2190"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2191"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="2192"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2193"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="2194"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2195"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="2196"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers</highlight></codeline>
<codeline lineno="2197"><highlight class="comment"><sp/>*<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="2198"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="2199"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2200"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="2201"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2202"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Import<sp/>The<sp/>Next<sp/>Tile<sp/>into<sp/>the<sp/>input<sp/>buffer;</highlight></codeline>
<codeline lineno="2203"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2204"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="2205"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2206"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:ExportThe<sp/>Process<sp/>Tile<sp/>from<sp/>into<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="2207"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2208"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="2209"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2210"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="2211"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2212"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="2213"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2214"><highlight class="comment"><sp/>*<sp/>This<sp/>can<sp/>be<sp/>optimized<sp/>and<sp/>standardized<sp/>using<sp/>the<sp/>TTL_step_buffering</highlight></codeline>
<codeline lineno="2215"><highlight class="comment"><sp/>*<sp/>call.</highlight></codeline>
<codeline lineno="2216"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2217"><highlight class="comment"><sp/>*<sp/>@startuml</highlight></codeline>
<codeline lineno="2218"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2219"><highlight class="comment"><sp/>*<sp/>start</highlight></codeline>
<codeline lineno="2220"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2221"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_tiler_t<sp/>with<sp/>TTL_create_tiler;</highlight></codeline>
<codeline lineno="2222"><highlight class="comment"><sp/>*<sp/>:Create<sp/>a<sp/>TTL_duplex_buffering_t<sp/>Structure<sp/>with<sp/>2<sp/>Buffers<sp/>1<sp/>input<sp/>buffer,<sp/>1<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="2223"><highlight class="comment"><sp/>*<sp/>:NumberOfTiles<sp/>=<sp/>TTL_number_of_tiles(tiler);</highlight></codeline>
<codeline lineno="2224"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2225"><highlight class="comment"><sp/>*<sp/>while<sp/>(for<sp/>each<sp/>tile)</highlight></codeline>
<codeline lineno="2226"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2227"><highlight class="comment"><sp/>*<sp/><sp/><sp/>:Call<sp/>TTL_step_buffering<sp/>for<sp/>the<sp/>current<sp/>tile</highlight></codeline>
<codeline lineno="2228"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2229"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>This<sp/>will<sp/>import<sp/>the<sp/>current<sp/>new<sp/>tile<sp/>and<sp/>export<sp/>the<sp/>last<sp/>tile</highlight></codeline>
<codeline lineno="2230"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>in<sp/>parallel;</highlight></codeline>
<codeline lineno="2231"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2232"><highlight class="comment"><sp/>*<sp/><sp/><sp/>if<sp/>(Does<sp/>the<sp/>input<sp/>buffer<sp/>contain<sp/>a<sp/>valid<sp/>tile?<sp/>**TTL_tile_empty(...)**)<sp/>then<sp/>(yes)</highlight></codeline>
<codeline lineno="2233"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>:Process<sp/>the<sp/>Tile<sp/>from<sp/>the<sp/>input<sp/>buffer<sp/>to<sp/>the<sp/>output<sp/>buffer;</highlight></codeline>
<codeline lineno="2234"><highlight class="comment"><sp/>*<sp/><sp/><sp/>endif</highlight></codeline>
<codeline lineno="2235"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2236"><highlight class="comment"><sp/>*<sp/>endwhile</highlight></codeline>
<codeline lineno="2237"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2238"><highlight class="comment"><sp/>*<sp/>stop</highlight></codeline>
<codeline lineno="2239"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2240"><highlight class="comment"><sp/>*<sp/>@enduml</highlight></codeline>
<codeline lineno="2241"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242" refid="TTL__duplex__scheme_8h_1affcfb0281417051ddc2f5980b1c988b6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__duplex__const__ulong__tensor__buffering__t" kindref="compound">TTL_duplex_const_ulong_tensor_buffering_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a970d2a339451a2f0200908eafb3816e4" kindref="member">TTL_start_duplex_buffering</ref>(</highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/>ext_tensor_in,<sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*int_base_in,<sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/>ext_tensor_out,</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*int_base_out,<sp/><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref><sp/>(*events)[2],<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>first_tile)<sp/>{</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__ulong__tensor__buffering__t" kindref="compound">TTL_duplex_const_ulong_tensor_buffering_t</ref><sp/>result;</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1ae6cca4e664f65c56ec2cf8b82b92e7d6" kindref="member">int_base</ref>[0]<sp/>=<sp/>int_base_in;</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1ae6cca4e664f65c56ec2cf8b82b92e7d6" kindref="member">int_base</ref>[1]<sp/>=<sp/>int_base_out;</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a9fb83d7aabaae8b207b5cccdfc5c3e75" kindref="member">ext_tensor_in</ref><sp/>=<sp/>ext_tensor_in;</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a8f3c0dbd5e7bdb1995a07570e4a80264" kindref="member">ext_tensor_out</ref><sp/>=<sp/>ext_tensor_out;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1af5c35c3d4402144d0867727344c1e001" kindref="member">events</ref><sp/>=<sp/>events;</highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a7bd3225720ba404c6ac06b7cfeedb8b8" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a4c9bd26d6bc76f7a0e0fd3e2fb1d5065" kindref="member">to_export_to</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a00267ab9ef837752dca25956f82d4c19" kindref="member">TTL_create_empty_ext_tensor</ref>((<ref refid="c_2TTL__types_8h_1a0bcdca9f6e5923ea191d934ec3400d9e" kindref="member">__global</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*)0);</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/>result.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a7bd3225720ba404c6ac06b7cfeedb8b8" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a5cbebcab32dd544e778592eab7ec0e5f" kindref="member">to_export_from</ref><sp/>=<sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a3e46d662aec6627667b79338967918d6" kindref="member">TTL_create_empty_const_int_tensor</ref>((<ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref><sp/><ref refid="c_2TTL__types_8h_1a718b4eb2652c286f4d42dc18a8e71a1a" kindref="member">ulong</ref><sp/>*)0);</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(&amp;result,<sp/>first_tile,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260" refid="TTL__duplex__scheme_8h_1af737974b961a6af9059b00617e0e17de" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structTTL__io__ulong__tensor__t" kindref="compound">TTL_io_ulong_tensor_t</ref><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__ulong__tensor__buffering__t" kindref="compound">TTL_duplex_const_ulong_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering,<sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_import,</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__tile__t" kindref="compound">TTL_tile_t</ref><sp/>tile_current_export)<sp/>{</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>next_import_layout<sp/>=</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__ext__ulong__tensor__t" kindref="compound">TTL_const_ext_ulong_tensor_t</ref><sp/>next_import_ext_tensor<sp/>=</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1af1240836fe9f43997d8a5b9f48b65b7b" kindref="member">TTL_create_const_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a9fb83d7aabaae8b207b5cccdfc5c3e75" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__ulong__tensor__t_1adabdc5cfd9b9cc815559f2c803dadcf2" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a9fb83d7aabaae8b207b5cccdfc5c3e75" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__ulong__tensor__t_1a09f39c516f12f7cebe058a24504c242d" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a9fb83d7aabaae8b207b5cccdfc5c3e75" kindref="member">ext_tensor_in</ref>.<ref refid="structTTL__ext__ulong__tensor__t_1a7ffd6d28cfb476266766061472c1c8fb" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref><sp/>next_import_int_sub_tensor<sp/>=</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1ae6cca4e664f65c56ec2cf8b82b92e7d6" kindref="member">int_base</ref>[0],</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>next_import_layout,</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a9fb83d7aabaae8b207b5cccdfc5c3e75" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_import.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__const__int__ulong__tensor__t" kindref="compound">TTL_const_int_ulong_tensor_t</ref><sp/>next_export_int_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a7bd3225720ba404c6ac06b7cfeedb8b8" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a5cbebcab32dd544e778592eab7ec0e5f" kindref="member">to_export_from</ref>;</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/>next_export_ext_tensor<sp/>=<sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a7bd3225720ba404c6ac06b7cfeedb8b8" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a4c9bd26d6bc76f7a0e0fd3e2fb1d5065" kindref="member">to_export_to</ref>;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__tiles_8h_1a5892a886773f7a902560d0a699838796" kindref="member">TTL_tile_empty</ref>(tile_current_import)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1a7b31b214acda551e9e2d06408c5049c7" kindref="member">TTL_import_sub_tensor</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ad6fbf51bc9b9f1c12f460009855a65d7" kindref="member">TTL_to_void_sub_tensor</ref>(&amp;next_import_int_sub_tensor),</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_import_ext_tensor),</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1af5c35c3d4402144d0867727344c1e001" kindref="member">events</ref>)[0]);</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="TTL__int__ext__typed__tensors_8h_1a9cb520c261994e69928c4baa157bc77f" kindref="member">TTL_const_int_tensor_empty</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a7bd3225720ba404c6ac06b7cfeedb8b8" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a5cbebcab32dd544e778592eab7ec0e5f" kindref="member">to_export_from</ref>)<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__typed__import__export_8h_1ad9efd7d976e5d5ae713a808bb9c29565" kindref="member">TTL_export</ref>(*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_int_tensor),</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1ab5c7c3a4fc6eea7b1ea076c213c5a899" kindref="member">TTL_to_void_tensor</ref>(&amp;next_export_ext_tensor),</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1af5c35c3d4402144d0867727344c1e001" kindref="member">events</ref>)[1]);</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__layout__t" kindref="compound">TTL_layout_t</ref><sp/>int_export_layout<sp/>=</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__tensors__common_8h_1a7c5069ff7b3532a098b78635c5d574ee" kindref="member">TTL_create_layout</ref>(tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1abedd5079ebde09929a94d58fa4667cca" kindref="member">width</ref>,<sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>.<ref refid="structTTL__shape__t_1ad9137433a4df574d0a470bca21b9dea0" kindref="member">height</ref>);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__ext__ulong__tensor__t" kindref="compound">TTL_ext_ulong_tensor_t</ref><sp/>to_export_to<sp/>=</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a213750d83b7819861937180f3c771313" kindref="member">TTL_create_ext_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a8f3c0dbd5e7bdb1995a07570e4a80264" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__ulong__tensor__t_1adabdc5cfd9b9cc815559f2c803dadcf2" kindref="member">base</ref>,</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a8f3c0dbd5e7bdb1995a07570e4a80264" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__ulong__tensor__t_1a09f39c516f12f7cebe058a24504c242d" kindref="member">layout</ref>,</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>,</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a8f3c0dbd5e7bdb1995a07570e4a80264" kindref="member">ext_tensor_out</ref>.<ref refid="structTTL__ext__ulong__tensor__t_1a7ffd6d28cfb476266766061472c1c8fb" kindref="member">elem_size</ref>);</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structTTL__int__ulong__sub__tensor__t" kindref="compound">TTL_int_ulong_sub_tensor_t</ref><sp/>to_export_from<sp/>=</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="TTL__int__ext__typed__tensors_8h_1a95ef8bdd9686cf622ccd4e87fa75af70" kindref="member">TTL_create_int_sub_tensor</ref>(duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1ae6cca4e664f65c56ec2cf8b82b92e7d6" kindref="member">int_base</ref>[1],</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a9e41cf99d7bf61cdf162941fd477e26f" kindref="member">shape</ref>,</highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int_export_layout,</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a98fc48b13f91507baa70d2e9afc3b9b9" kindref="member">common</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a9fb83d7aabaae8b207b5cccdfc5c3e75" kindref="member">ext_tensor_in</ref>),</highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tile_current_export.<ref refid="structTTL__tile__t_1a93512d7fdde7a441111ff766e4968fd0" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a7bd3225720ba404c6ac06b7cfeedb8b8" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a4c9bd26d6bc76f7a0e0fd3e2fb1d5065" kindref="member">to_export_to</ref><sp/>=<sp/>to_export_to;</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/>duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a7bd3225720ba404c6ac06b7cfeedb8b8" kindref="member">prev_out_tensors</ref>.<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1a5cbebcab32dd544e778592eab7ec0e5f" kindref="member">to_export_from</ref><sp/>=<sp/>*<ref refid="TTL__int__ext__typed__tensors_8h_1a456c1595a6806ba8ed5fab86fe569964" kindref="member">TTL_to_const_tensor</ref>(&amp;to_export_from.<ref refid="structTTL__int__ulong__sub__tensor__t_1ad2731372f580163927a27aca9fa702b9" kindref="member">tensor</ref>);</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="opencl_2TTL__import__export_8h_1a9ab49a751ac68ef2faec162bc9d8d70b" kindref="member">TTL_wait</ref>(2,<sp/>*duplex_buffering-&gt;<ref refid="structTTL__duplex__const__ulong__tensor__buffering__t_1af5c35c3d4402144d0867727344c1e001" kindref="member">events</ref>);</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="TTL__schemes__common_8h_1a1dcf4226f1b764153f394b1a51365e41" kindref="member">TTL_create_io_tensors</ref>(next_import_int_sub_tensor,<sp/>to_export_from);</highlight></codeline>
<codeline lineno="2312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight></codeline>
<codeline lineno="2314" refid="TTL__duplex__scheme_8h_1ac07e2bd88021a0bf7ace104988940c2e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>__attribute__((overloadable))<sp/><ref refid="TTL__duplex__scheme_8h_1a86e15576523b42c731f1a2bb1c9cbf13" kindref="member">TTL_finish_buffering</ref>(</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structTTL__duplex__const__ulong__tensor__buffering__t" kindref="compound">TTL_duplex_const_ulong_tensor_buffering_t</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>duplex_buffering)<sp/>{</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="TTL__duplex__scheme_8h_1a3ccf7de3366e4af679597b051b663dbf" kindref="member">TTL_step_buffering</ref>(duplex_buffering,<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>(),<sp/><ref refid="TTL__tiles_8h_1aab47a72ad748d70bfd9892500106d755" kindref="member">TTL_create_empty_tile</ref>());</highlight></codeline>
<codeline lineno="2317"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h"/>
  </compounddef>
</doxygen>
