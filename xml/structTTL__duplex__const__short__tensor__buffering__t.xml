<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="structTTL__duplex__const__short__tensor__buffering__t" kind="struct" language="C++" prot="public">
    <compoundname>TTL_duplex_const_short_tensor_buffering_t</compoundname>
    <includes refid="TTL__duplex__scheme_8h" local="no">TTL_duplex_scheme.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structTTL__duplex__const__short__tensor__buffering__t_1ad958f21d5de02ff4ca7c633c2d7ec0cd" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int TTL_duplex_const_short_tensor_buffering_t::index</definition>
        <argsstring></argsstring>
        <name>index</name>
        <qualifiedname>TTL_duplex_const_short_tensor_buffering_t::index</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Describes the current buffer index when pipelining. For single 0-&gt;1-&gt;0, for double 0-&gt;1-&gt;0-&gt;1... etc </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1357" column="13" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1357" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structTTL__duplex__const__short__tensor__buffering__t_1a66b557b88b85979d9e50650b290f8194" prot="public" static="no" mutable="no">
        <type><ref refid="c_2TTL__types_8h_1a16d401f6ba8f83048211693549eba342" kindref="member">__local</ref> short *</type>
        <definition>__local short* TTL_duplex_const_short_tensor_buffering_t::int_base[2]</definition>
        <argsstring>[2]</argsstring>
        <name>int_base</name>
        <qualifiedname>TTL_duplex_const_short_tensor_buffering_t::int_base</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The internal base addresses of the pipelined tiles. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1359" column="23" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1359" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structTTL__duplex__const__short__tensor__buffering__t_1a1f064ce13c6929df7fb03e70922b7d66" prot="public" static="no" mutable="no">
        <type><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref></type>
        <definition>TTL_ext_short_tensor_t TTL_duplex_const_short_tensor_buffering_t::ext_tensor_in</definition>
        <argsstring></argsstring>
        <name>ext_tensor_in</name>
        <qualifiedname>TTL_duplex_const_short_tensor_buffering_t::ext_tensor_in</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The external tensor being input </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1360" column="32" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structTTL__duplex__const__short__tensor__buffering__t_1af8337a75267ba0f7277dd09a1325d493" prot="public" static="no" mutable="no">
        <type><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref></type>
        <definition>TTL_ext_short_tensor_t TTL_duplex_const_short_tensor_buffering_t::ext_tensor_out</definition>
        <argsstring></argsstring>
        <name>ext_tensor_out</name>
        <qualifiedname>TTL_duplex_const_short_tensor_buffering_t::ext_tensor_out</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The external tensor being output </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1361" column="32" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1361" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structTTL__duplex__const__short__tensor__buffering__t" kindref="compound">TTL_duplex_const_short_tensor_buffering_t</ref></type>
        <definition>struct TTL_duplex_const_short_tensor_buffering_t TTL_duplex_const_short_tensor_buffering_t::common</definition>
        <argsstring></argsstring>
        <name>common</name>
        <qualifiedname>TTL_duplex_const_short_tensor_buffering_t::common</qualifiedname>
        <briefdescription>
<para>The information that is common to all pipeline schemes. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1362" column="51"/>
      </memberdef>
      <memberdef kind="variable" id="structTTL__duplex__const__short__tensor__buffering__t_1a6730c70a3fbcd8d2d9f802d157c27c79" prot="public" static="no" mutable="no">
        <type><ref refid="c_2TTL__import__export_8h_1a96dbbce35695c1e2f6cf31e3226343cd" kindref="member">TTL_event_t</ref>(*</type>
        <definition>TTL_event_t(* TTL_duplex_const_short_tensor_buffering_t::events)[2]</definition>
        <argsstring>)[2]</argsstring>
        <name>events</name>
        <qualifiedname>TTL_duplex_const_short_tensor_buffering_t::events</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>2 Events are required, 1 first is used for external to internal transfers, the second for internal to external transfers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1364" column="5" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1364" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structTTL__duplex__const__short__tensor__buffering__t_1a23c26a599c863453ef1d44ffa8569e10" prot="public" static="no" mutable="no">
        <type><ref refid="structTTL__ext__short__tensor__t" kindref="compound">TTL_ext_short_tensor_t</ref></type>
        <definition>TTL_ext_short_tensor_t TTL_duplex_const_short_tensor_buffering_t::to_export_to</definition>
        <argsstring></argsstring>
        <name>to_export_to</name>
        <qualifiedname>TTL_duplex_const_short_tensor_buffering_t::to_export_to</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1373" column="32" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structTTL__duplex__const__short__tensor__buffering__t_1af32c0437c338772079e8b56fa46e9289" prot="public" static="no" mutable="no">
        <type><ref refid="structTTL__const__int__short__tensor__t" kindref="compound">TTL_const_int_short_tensor_t</ref></type>
        <definition>TTL_const_int_short_tensor_t TTL_duplex_const_short_tensor_buffering_t::to_export_from</definition>
        <argsstring></argsstring>
        <name>to_export_from</name>
        <qualifiedname>TTL_duplex_const_short_tensor_buffering_t::to_export_from</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1374" column="38" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structTTL__duplex__const__short__tensor__buffering__t_1a80753a2e8a6a1ce1ed2142fcc117636b" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structTTL__duplex__const__short__tensor__buffering__t" kindref="compound">TTL_duplex_const_short_tensor_buffering_t</ref></type>
        <definition>struct TTL_duplex_const_short_tensor_buffering_t TTL_duplex_const_short_tensor_buffering_t::prev_out_tensors</definition>
        <argsstring></argsstring>
        <name>prev_out_tensors</name>
        <qualifiedname>TTL_duplex_const_short_tensor_buffering_t::prev_out_tensors</qualifiedname>
        <briefdescription>
<para>Store of the buffers used for the previous import/export cycles. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1375" column="22"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Data required to perform duplex buffer pipelining. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="see"><para><ref refid="TTL__duplex__scheme_8h_1a970d2a339451a2f0200908eafb3816e4" kindref="member">TTL_start_duplex_buffering</ref> for a description of duplex buffer pipelining. </para>
</simplesect>
</para>
    </detaileddescription>
    <collaborationgraph>
      <node id="5">
        <label>TTL_const_int_short_tensor_t</label>
        <link refid="structTTL__const__int__short__tensor__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+layout</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>+shape</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>TTL_duplex_const_short_tensor_buffering_t</label>
        <link refid="structTTL__duplex__const__short__tensor__buffering__t"/>
        <childnode refid="2" relation="usage">
          <edgelabel>+ext_tensor_in</edgelabel>
          <edgelabel>+ext_tensor_out</edgelabel>
          <edgelabel>+to_export_to</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>+to_export_from</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>TTL_ext_short_tensor_t</label>
        <link refid="structTTL__ext__short__tensor__t"/>
        <childnode refid="3" relation="usage">
          <edgelabel>+layout</edgelabel>
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>+shape</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>TTL_layout_t</label>
        <link refid="structTTL__layout__t"/>
      </node>
      <node id="4">
        <label>TTL_shape_t</label>
        <link refid="structTTL__shape__t"/>
      </node>
    </collaborationgraph>
    <location file="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" line="1355" column="1" bodyfile="v7F17Om_TTL/pipelines/TTL_duplex_scheme.h" bodystart="1355" bodyend="1376"/>
    <listofallmembers>
      <member refid="structTTL__duplex__const__short__tensor__buffering__t_1a426af491c831fa46cc118da29d3bd8e1" prot="public" virt="non-virtual"><scope>TTL_duplex_const_short_tensor_buffering_t</scope><name>common</name></member>
      <member refid="structTTL__duplex__const__short__tensor__buffering__t_1a6730c70a3fbcd8d2d9f802d157c27c79" prot="public" virt="non-virtual"><scope>TTL_duplex_const_short_tensor_buffering_t</scope><name>events</name></member>
      <member refid="structTTL__duplex__const__short__tensor__buffering__t_1a1f064ce13c6929df7fb03e70922b7d66" prot="public" virt="non-virtual"><scope>TTL_duplex_const_short_tensor_buffering_t</scope><name>ext_tensor_in</name></member>
      <member refid="structTTL__duplex__const__short__tensor__buffering__t_1af8337a75267ba0f7277dd09a1325d493" prot="public" virt="non-virtual"><scope>TTL_duplex_const_short_tensor_buffering_t</scope><name>ext_tensor_out</name></member>
      <member refid="structTTL__duplex__const__short__tensor__buffering__t_1ad958f21d5de02ff4ca7c633c2d7ec0cd" prot="public" virt="non-virtual"><scope>TTL_duplex_const_short_tensor_buffering_t</scope><name>index</name></member>
      <member refid="structTTL__duplex__const__short__tensor__buffering__t_1a66b557b88b85979d9e50650b290f8194" prot="public" virt="non-virtual"><scope>TTL_duplex_const_short_tensor_buffering_t</scope><name>int_base</name></member>
      <member refid="structTTL__duplex__const__short__tensor__buffering__t_1a80753a2e8a6a1ce1ed2142fcc117636b" prot="public" virt="non-virtual"><scope>TTL_duplex_const_short_tensor_buffering_t</scope><name>prev_out_tensors</name></member>
      <member refid="structTTL__duplex__const__short__tensor__buffering__t_1af32c0437c338772079e8b56fa46e9289" prot="public" virt="non-virtual"><scope>TTL_duplex_const_short_tensor_buffering_t</scope><name>to_export_from</name></member>
      <member refid="structTTL__duplex__const__short__tensor__buffering__t_1a23c26a599c863453ef1d44ffa8569e10" prot="public" virt="non-virtual"><scope>TTL_duplex_const_short_tensor_buffering_t</scope><name>to_export_to</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
